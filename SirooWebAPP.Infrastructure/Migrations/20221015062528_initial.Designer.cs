// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221015062528_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c2e9753-977d-4bef-9c2f-696683dfec9d"),
                            Caption = "کیش کدپولو",
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            CreationDate = new DateTime(2022, 10, 14, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7794),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsVideo = true,
                            LikeReward = 200,
                            MediaSourceURL = "uploads/2022/9/1-56192-4_6008031941360618419.MP4",
                            Name = "کیش",
                            Owner = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("47e09094-794b-4692-a5d6-50dd1f6a2cfd"),
                            Caption = "ال جی",
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            CreationDate = new DateTime(2022, 10, 13, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7820),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsVideo = false,
                            LikeReward = 20,
                            MediaSourceURL = "uploads/2022/9/1-53754-1.mp4_snapshot_01.04_[2022.05.26_09.50.52].jpg",
                            Name = "کیش",
                            Owner = new Guid("6416db73-1936-4b46-bd32-cfd9f1a324a3"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("9eb0240d-59f1-4980-8a6d-8897d75e6875"),
                            Caption = "سامسونگ",
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            CreationDate = new DateTime(2022, 10, 10, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7841),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsVideo = false,
                            LikeReward = 50,
                            MediaSourceURL = "uploads/2022/9/1582619178545.jpg",
                            Name = "کیش",
                            Owner = new Guid("3092f859-4e23-4ac5-a255-c613cb6ccf32"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("52005f52-f00f-4681-9db4-0d25debf5346"),
                            Caption = "دیجی کالا",
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            CreationDate = new DateTime(2022, 10, 12, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7861),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsVideo = false,
                            LikeReward = 40,
                            MediaSourceURL = "uploads/2022/9/1-36433-1.jpg",
                            Name = "کیش",
                            Owner = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("513ab043-7e1a-435a-973b-e99e089a18dc"),
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8083),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("805ca8a2-40dc-4347-bc91-2a89292d727b"),
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "2",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8089),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر مغازه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("30c31a83-6c3a-4a1c-9b14-b69dd6f4c463"),
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8097),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("54b8decf-5750-4221-ba86-2f6cfa100735"),
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8100),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2ae00f46-9a96-4e16-b329-7dc635eb58a0"),
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8104),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("83efa7e8-e01a-47ed-ba06-8ee177c92eea"),
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8107),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("84291d78-569e-47c1-92c1-c48b6f87ad91"),
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8111),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d1beba3b-6c79-4680-91fd-f00b03b1c16c"),
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8115),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1caac9ee-b39c-4ac2-82c0-9c6519700045"),
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8119),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1dcd3b49-7ab3-407a-8c9a-2b996f2c56a8"),
                            Donner = new Guid("ce36eaac-a2f9-4225-8f39-e50e5e7be0b1"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 2,
                            Value = 150L
                        },
                        new
                        {
                            Id = new Guid("ca3ddded-35f1-4051-ad1b-554b32e0bce6"),
                            Donner = new Guid("ce36eaac-a2f9-4225-8f39-e50e5e7be0b1"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 5,
                            Value = 100L
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52263d76-31e9-4951-b46f-743eab8ab8ed"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7869),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            EndDate = new DateTime(2022, 10, 30, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7874),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "آبان 1401",
                            Owner = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            StartDate = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7872)
                        },
                        new
                        {
                            Id = new Guid("5b423bb8-e2a8-4cc8-a7ef-e5e4c29c0f0b"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7878),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            EndDate = new DateTime(2022, 12, 14, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7883),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "اذر 1401",
                            Owner = new Guid("3092f859-4e23-4ac5-a255-c613cb6ccf32"),
                            StartDate = new DateTime(2022, 11, 14, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7880)
                        },
                        new
                        {
                            Id = new Guid("e0d432e9-00d3-479f-847a-035f8165df41"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7887),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            EndDate = new DateTime(2022, 10, 5, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7891),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = true,
                            IsLottery = false,
                            Name = "شهریور 1401",
                            Owner = new Guid("6416db73-1936-4b46-bd32-cfd9f1a324a3"),
                            StartDate = new DateTime(2022, 9, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7889)
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("912c0c4c-469c-42fe-b919-b4ae55616a82"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7930),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Draw = new Guid("52263d76-31e9-4951-b46f-743eab8ab8ed"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "200 هزار تومان",
                            Priority = 0,
                            WinnerCount = 1
                        },
                        new
                        {
                            Id = new Guid("5d7503c0-1919-4db4-b9dc-d1f6b5fd4b6f"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7936),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Draw = new Guid("52263d76-31e9-4951-b46f-743eab8ab8ed"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "100 هزار تومان",
                            Priority = 1,
                            WinnerCount = 2
                        },
                        new
                        {
                            Id = new Guid("6a0dabb5-fd58-4530-84d2-5b13ce050962"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7940),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Draw = new Guid("52263d76-31e9-4951-b46f-743eab8ab8ed"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "50 هزار تومان",
                            Priority = 2,
                            WinnerCount = 3
                        },
                        new
                        {
                            Id = new Guid("ad1dda31-902c-44cf-a530-20ca4ab23736"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7983),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Draw = new Guid("5b423bb8-e2a8-4cc8-a7ef-e5e4c29c0f0b"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "2 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("4252eb5d-0ae3-48f7-824c-7962cfb38de1"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7989),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Draw = new Guid("5b423bb8-e2a8-4cc8-a7ef-e5e4c29c0f0b"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "1 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("5d1dcd4f-7634-4d44-91fe-c8dccdcbda70"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7993),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Draw = new Guid("5b423bb8-e2a8-4cc8-a7ef-e5e4c29c0f0b"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        },
                        new
                        {
                            Id = new Guid("e1097eec-afb1-455c-925c-b1b155559bc4"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8039),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Draw = new Guid("e0d432e9-00d3-479f-847a-035f8165df41"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "20 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("a01cc5e1-0a58-4231-869d-641dc7c25c4f"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8045),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Draw = new Guid("e0d432e9-00d3-479f-847a-035f8165df41"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "10 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("1742b4c4-03aa-4de5-a4ae-20f6d904d898"),
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(8048),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Draw = new Guid("e0d432e9-00d3-479f-847a-035f8165df41"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd48491a-bcfd-4ff7-958b-48ccee653cf2"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("09522dbb-12d4-4ec4-97a2-3ab9db5e4a6a"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("67e0281c-e510-4c1d-9de2-620a4d79fba1"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("71b64d25-ea12-4e7c-bb0a-e28d6f3bcea5"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("3c753c5a-150f-49b6-8692-a7c13fe9570a"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("2c59257d-fe22-4864-8aff-4e8b15c014ef"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            Cellphone = "09394125130",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7403),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("ce36eaac-a2f9-4225-8f39-e50e5e7be0b1"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("6416db73-1936-4b46-bd32-cfd9f1a324a3"),
                            Cellphone = "09111769591",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7408),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "پردلان",
                            Inviter = new Guid("ce36eaac-a2f9-4225-8f39-e50e5e7be0b1"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "محسن",
                            Points = 80L,
                            ProfileMediaURL = "uploads/2022/9/99.jpg",
                            Username = "vinona"
                        },
                        new
                        {
                            Id = new Guid("3092f859-4e23-4ac5-a255-c613cb6ccf32"),
                            Cellphone = "09163681249",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7412),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "یاراحمدی",
                            Inviter = new Guid("ce36eaac-a2f9-4225-8f39-e50e5e7be0b1"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "سپیده",
                            Points = 70L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "sepideh"
                        },
                        new
                        {
                            Id = new Guid("af73d71a-3c1a-4a89-acfe-5ef0858a64da"),
                            Cellphone = "09112281237",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7415),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "عبداله",
                            Points = 60L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "abdolah"
                        },
                        new
                        {
                            Id = new Guid("ce36eaac-a2f9-4225-8f39-e50e5e7be0b1"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7352),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("8b26076b-b379-459a-8627-750674955605"),
                            Cellphone = "09181650151",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7419),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "شفایی",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "امیر",
                            Points = 50L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "amirsh"
                        },
                        new
                        {
                            Id = new Guid("434cce61-0c31-4653-9eca-41550b6415ee"),
                            Cellphone = "09181616196",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7423),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "مریم",
                            Points = 40L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "pari"
                        },
                        new
                        {
                            Id = new Guid("c5c7cdbd-f86c-449d-8da6-5953bb35b1c8"),
                            Cellphone = "09111291908",
                            Created = new DateTime(2022, 10, 15, 9, 55, 27, 684, DateTimeKind.Local).AddTicks(7427),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "رجبعلی",
                            Points = 30L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "haji"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f443118-80bb-44ff-aae3-5a32922233b1"),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            IsDeleted = false,
                            Role = new Guid("dd48491a-bcfd-4ff7-958b-48ccee653cf2"),
                            User = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8")
                        },
                        new
                        {
                            Id = new Guid("973819e3-5c84-4f2a-89d1-242908c6eb64"),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            IsDeleted = false,
                            Role = new Guid("71b64d25-ea12-4e7c-bb0a-e28d6f3bcea5"),
                            User = new Guid("3092f859-4e23-4ac5-a255-c613cb6ccf32")
                        },
                        new
                        {
                            Id = new Guid("176ead21-26f1-451d-8b48-035b9af48550"),
                            CreatedBy = new Guid("2574f7e6-7ed4-43f2-b9f2-9f3cef39dca8"),
                            IsDeleted = false,
                            Role = new Guid("67e0281c-e510-4c1d-9de2-620a4d79fba1"),
                            User = new Guid("6416db73-1936-4b46-bd32-cfd9f1a324a3")
                        },
                        new
                        {
                            Id = new Guid("218ec1d9-f8fd-48db-8ddf-43b1db3aa9af"),
                            CreatedBy = new Guid("af73d71a-3c1a-4a89-acfe-5ef0858a64da"),
                            IsDeleted = false,
                            Role = new Guid("2c59257d-fe22-4864-8aff-4e8b15c014ef"),
                            User = new Guid("af73d71a-3c1a-4a89-acfe-5ef0858a64da")
                        },
                        new
                        {
                            Id = new Guid("b8fd1356-111f-49b0-a708-01ae4fe0026a"),
                            CreatedBy = new Guid("ce36eaac-a2f9-4225-8f39-e50e5e7be0b1"),
                            IsDeleted = false,
                            Role = new Guid("3c753c5a-150f-49b6-8692-a7c13fe9570a"),
                            User = new Guid("ce36eaac-a2f9-4225-8f39-e50e5e7be0b1")
                        },
                        new
                        {
                            Id = new Guid("7f72747b-e4e4-4d62-9c0e-ac4c58e5933c"),
                            CreatedBy = new Guid("af73d71a-3c1a-4a89-acfe-5ef0858a64da"),
                            IsDeleted = false,
                            Role = new Guid("2c59257d-fe22-4864-8aff-4e8b15c014ef"),
                            User = new Guid("434cce61-0c31-4653-9eca-41550b6415ee")
                        },
                        new
                        {
                            Id = new Guid("89b34c5e-08b4-4bd6-8d72-0e4e71589327"),
                            CreatedBy = new Guid("af73d71a-3c1a-4a89-acfe-5ef0858a64da"),
                            IsDeleted = false,
                            Role = new Guid("2c59257d-fe22-4864-8aff-4e8b15c014ef"),
                            User = new Guid("8b26076b-b379-459a-8627-750674955605")
                        },
                        new
                        {
                            Id = new Guid("765562a2-4c8d-466c-9b64-f53b1bd97575"),
                            CreatedBy = new Guid("af73d71a-3c1a-4a89-acfe-5ef0858a64da"),
                            IsDeleted = false,
                            Role = new Guid("2c59257d-fe22-4864-8aff-4e8b15c014ef"),
                            User = new Guid("c5c7cdbd-f86c-449d-8da6-5953bb35b1c8")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
