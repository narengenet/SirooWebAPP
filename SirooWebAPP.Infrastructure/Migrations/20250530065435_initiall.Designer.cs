// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250530065435_initiall")]
    partial class initiall
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMusic")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChallengeUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChallengeModeIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChallengeUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatBlocks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("fromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("toUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatBlocks");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatMessages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Chips", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Chips");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantSecondValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c6fcf6cb-8b89-4bf2-9be3-a85277855822"),
                            Category = "فروشگاه",
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "0",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4122),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 20
                        },
                        new
                        {
                            Id = new Guid("ce01f1e7-f211-460c-bc77-6136660454b9"),
                            Category = "فروشگاه",
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "-1",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4125),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر فروشگاه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 21
                        },
                        new
                        {
                            Id = new Guid("90da5177-a94f-4e79-8d37-aa203f6141f5"),
                            Category = "فروشگاه",
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4127),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 22
                        },
                        new
                        {
                            Id = new Guid("bfd29e49-9d47-4320-a6fb-9852681eee55"),
                            Category = "مالی",
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "1000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4131),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 24
                        },
                        new
                        {
                            Id = new Guid("0afb9163-54d5-49ea-8a18-8883b510df52"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4140),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 28
                        },
                        new
                        {
                            Id = new Guid("2092102e-d578-47aa-9144-fe41a6eb0f43"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4143),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 29
                        },
                        new
                        {
                            Id = new Guid("c525dc1c-9f14-4fb7-8cdb-b84e894fd834"),
                            Category = "فروشگاه",
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4129),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 23
                        },
                        new
                        {
                            Id = new Guid("55a31c2d-a33f-4109-a773-8aa281c2bad9"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4118),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "امتیاز اولیه برای کاربری که ثبت نام میکند.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 18
                        },
                        new
                        {
                            Id = new Guid("1b0b735a-083a-47c6-95ee-6627c1213f0b"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4120),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "امتیاز برای معرف وقتی کاربر ثبت نام کرد.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 19
                        },
                        new
                        {
                            Id = new Guid("7b29dfa0-33fb-4459-bb34-37dd3bb76186"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4111),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 15
                        },
                        new
                        {
                            Id = new Guid("6b69cd4f-0b16-40d4-9ea2-4f3f6546adfc"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "15",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4113),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 16
                        },
                        new
                        {
                            Id = new Guid("69391663-f369-4791-a37f-9ff5e60a628e"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_audio_like",
                            ConstantValue = "5",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4116),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "امتیاز پیش فرض برای لایک پست صوتی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 17
                        },
                        new
                        {
                            Id = new Guid("c879c820-8f54-4c2f-a1b1-2290edc24b97"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4134),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 25
                        },
                        new
                        {
                            Id = new Guid("122abc34-54e0-4109-b452-11900cb48e3e"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4136),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 26
                        },
                        new
                        {
                            Id = new Guid("291ef2a3-08f7-4729-91bc-c9a16ee5293e"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4138),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 27
                        },
                        new
                        {
                            Id = new Guid("691599e5-afb1-49c0-8d2f-b3b6a9fe70bc"),
                            Category = "کارت اعتباری",
                            ConstantKey = "def_chips_usage_perday",
                            ConstantValue = "-1",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4108),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "تعداد استفاده از کارت اعتباری هر کاربر در روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 14
                        },
                        new
                        {
                            Id = new Guid("516f645e-9c89-4f2b-af91-e6cbefd55c3b"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_video_ads",
                            ConstantValue = "1000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4099),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "هزینه درج آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 10
                        },
                        new
                        {
                            Id = new Guid("947d16d3-13c2-496c-83c1-3ca010b10c55"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_image_ads",
                            ConstantValue = "200000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4101),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "هزینه درج آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 11
                        },
                        new
                        {
                            Id = new Guid("e1012e87-40e3-4972-90f9-513148a72077"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_video_ads",
                            ConstantValue = "200",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4103),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 12
                        },
                        new
                        {
                            Id = new Guid("c0d49ca5-529e-447f-b7c5-09749b599116"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_image_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4106),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 13
                        },
                        new
                        {
                            Id = new Guid("6d6b706f-8c34-495c-b024-4c994cfb368b"),
                            Category = "گردونه",
                            ConstantKey = "diamond_first_priority",
                            ConstantSecondValue = "50",
                            ConstantValue = "1,5",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4052),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اولویت اول تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 0
                        },
                        new
                        {
                            Id = new Guid("1da21a32-d72b-41a4-a5dd-dbcc3b04bf8b"),
                            Category = "گردونه",
                            ConstantKey = "diamond_second_priority",
                            ConstantSecondValue = "20",
                            ConstantValue = "6,10",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4054),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اولویت دوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 1
                        },
                        new
                        {
                            Id = new Guid("73156884-aaa5-428e-a5bf-5f0f3bfafb91"),
                            Category = "گردونه",
                            ConstantKey = "diamond_third_priority",
                            ConstantSecondValue = "10",
                            ConstantValue = "11,20",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4056),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اولویت سوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 2
                        },
                        new
                        {
                            Id = new Guid("abd3ded6-a085-4c60-8229-8396b9a905b4"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fourth_priority",
                            ConstantSecondValue = "6",
                            ConstantValue = "21,30",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4080),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اولویت چهارم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 3
                        },
                        new
                        {
                            Id = new Guid("9855063b-f030-4e0e-a097-e2be8accdf6f"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fivth_priority",
                            ConstantSecondValue = "5",
                            ConstantValue = "31,50",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4083),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اولویت پنجم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 4
                        },
                        new
                        {
                            Id = new Guid("2e9f02b7-6879-4a85-a2b6-f96b36e752df"),
                            Category = "گردونه",
                            ConstantKey = "diamond_sixth_priority",
                            ConstantSecondValue = "4",
                            ConstantValue = "51,100",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4087),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اولویت ششم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 5
                        },
                        new
                        {
                            Id = new Guid("fbb3bdab-d356-4de4-a47d-af9b856be422"),
                            Category = "گردونه",
                            ConstantKey = "diamond_seventh_priority",
                            ConstantSecondValue = "3",
                            ConstantValue = "101,200",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4089),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اولویت هفتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 6
                        },
                        new
                        {
                            Id = new Guid("c34139dd-6f99-4af6-9796-cfe96b8746aa"),
                            Category = "گردونه",
                            ConstantKey = "diamond_eighth_priority",
                            ConstantSecondValue = "2",
                            ConstantValue = "201,300",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4091),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "اولویت هشتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 7
                        },
                        new
                        {
                            Id = new Guid("c22924a6-cc2c-415f-a418-c1083c6d98e3"),
                            Category = "گردونه",
                            ConstantKey = "diamond_nineth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "301,500",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4094),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "امتیاز نهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 8
                        },
                        new
                        {
                            Id = new Guid("68064635-1354-4146-95d2-afdc4edbe7e8"),
                            Category = "گردونه",
                            ConstantKey = "diamond_tenth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "999,1000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4096),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "امتیاز دهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 9
                        },
                        new
                        {
                            Id = new Guid("e1e87d8e-f3a1-4698-90a6-43bc5c1b6ec1"),
                            Category = "گردونه",
                            ConstantKey = "min_points_to_spin_diamond_wheel",
                            ConstantValue = "200",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3924),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "حداقل امتیاز برای چرخاندن گردونه شانس الماس بار اول",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -2
                        },
                        new
                        {
                            Id = new Guid("0d7766ce-50e0-4e94-a93b-8b9f9cae55cf"),
                            Category = "گردونه",
                            ConstantKey = "added_points_to_each_spin_diamond_wheel_after_first_time",
                            ConstantValue = "100",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3927),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "افزایش تعداد امتیاز به اضای هر بار چرخاندن گردونه شانس در یک روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -1
                        },
                        new
                        {
                            Id = new Guid("38e6d8a8-d595-41cb-bf56-422879af3140"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_1",
                            ConstantValue = "30",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4145),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 30
                        },
                        new
                        {
                            Id = new Guid("1602c114-af5e-40ae-ac6c-2b0e506cb1e8"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_1",
                            ConstantValue = "300000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4147),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 31
                        },
                        new
                        {
                            Id = new Guid("4fa3516b-1f61-44bb-8d12-86ce6b12db01"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_1",
                            ConstantValue = "100000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4149),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 32
                        },
                        new
                        {
                            Id = new Guid("fe84dfa7-4ddf-4316-9c24-e10ec06c7145"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_1",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4152),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "ترتیب پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 33
                        },
                        new
                        {
                            Id = new Guid("c41c5f89-7f7a-4834-9527-41211eaaca27"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_1",
                            ConstantValue = "1000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4156),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 34
                        },
                        new
                        {
                            Id = new Guid("504323a4-a0ed-48f6-9ab4-ff66afad0597"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_1",
                            ConstantValue = "20",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4158),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "تعداد روزهای آگهی تجاری نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 35
                        },
                        new
                        {
                            Id = new Guid("fcbbcd3f-22d7-4d35-9ab0-7f37acd5bc6b"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_2",
                            ConstantValue = "60",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4160),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 36
                        },
                        new
                        {
                            Id = new Guid("54bfa56d-39a7-4235-bfb0-f2ff9534ec1b"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_2",
                            ConstantValue = "3550000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4163),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 37
                        },
                        new
                        {
                            Id = new Guid("449729cf-d6d1-4795-b677-e8a196f21b1e"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_2",
                            ConstantValue = "1000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4165),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 38
                        },
                        new
                        {
                            Id = new Guid("73e05fab-db68-4b7b-b066-be7b381cbf13"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_2",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4167),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "ترتیب پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 39
                        },
                        new
                        {
                            Id = new Guid("32348e27-2720-4896-858c-a09405ee91ce"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_2",
                            ConstantValue = "1000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4169),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 40
                        },
                        new
                        {
                            Id = new Guid("3545c7cc-76e7-403c-81f6-cbbb29824174"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_2",
                            ConstantValue = "20",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4171),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "تعداد روزهای آگهی تجاری نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 41
                        },
                        new
                        {
                            Id = new Guid("05c003a3-a5d2-4d4c-ad9a-f6a40fea0f23"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_3",
                            ConstantValue = "90",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4174),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 42
                        },
                        new
                        {
                            Id = new Guid("45f74cdc-26c7-4ece-a2da-d97a7e6a03f3"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_3",
                            ConstantValue = "30000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4176),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 43
                        },
                        new
                        {
                            Id = new Guid("6c17fee7-de14-4bf9-b972-3899c2ea02de"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_3",
                            ConstantValue = "10000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4178),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 44
                        },
                        new
                        {
                            Id = new Guid("90cedbee-1fc4-44d3-a01a-5a16f5c621fd"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_3",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4181),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "ترتیب پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 45
                        },
                        new
                        {
                            Id = new Guid("1f928a3f-b3a3-414c-b671-cd3fab3ad573"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_3",
                            ConstantValue = "1000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4183),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 46
                        },
                        new
                        {
                            Id = new Guid("26c60c22-97f8-4665-8f77-e2aa277fb472"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_3",
                            ConstantValue = "20",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4185),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "تعداد روزهای آگهی تجاری نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 47
                        },
                        new
                        {
                            Id = new Guid("a731366d-d8ee-4599-8dfd-71c3b398599a"),
                            Category = "بیمه",
                            ConstantKey = "money_needed_to_attend_in_insurance",
                            ConstantValue = "12000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4187),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "موجودی ریالی برای خرید پکیج بیمه حوادث انفرادی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 48
                        },
                        new
                        {
                            Id = new Guid("28762166-a10c-4d86-abec-ecdda1f67aa1"),
                            Category = "بیمه",
                            ConstantKey = "prize_marketer_to_invite_in_insurance",
                            ConstantValue = "2000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4189),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "پورسانت بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 49
                        },
                        new
                        {
                            Id = new Guid("fff7cd0e-5377-4fb5-be55-fe2dafb6faa5"),
                            Category = "بیمه",
                            ConstantKey = "prize_zoneadmin_to_invite_in_insurance",
                            ConstantValue = "2000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4191),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "پورسانت مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 50
                        },
                        new
                        {
                            Id = new Guid("2361bf2d-a3b3-45e7-8d1c-070b1117b687"),
                            Category = "بیمه",
                            ConstantKey = "money_needed_to_attend_in_insurance2",
                            ConstantValue = "25000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4194),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "موجودی ریالی برای خرید پکیج تخفیف بیمه‌ای و ثبت نام وام مهرامید",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 51
                        },
                        new
                        {
                            Id = new Guid("08888833-b39e-433e-8a50-a24cacbf9970"),
                            Category = "بیمه",
                            ConstantKey = "prize_marketer_to_invite_in_insurance2",
                            ConstantValue = "4000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4196),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "پورسانت بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 52
                        },
                        new
                        {
                            Id = new Guid("554289d9-2bb3-407e-9105-70228e2938aa"),
                            Category = "بیمه",
                            ConstantKey = "prize_zoneadmin_to_invite_in_insurance2",
                            ConstantValue = "4000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4199),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "پورسانت مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 53
                        },
                        new
                        {
                            Id = new Guid("7502497c-5953-4bb5-aea1-a5fe1fc1eb12"),
                            Category = "بیمه",
                            ConstantKey = "money_needed_to_attend_in_insurance3",
                            ConstantValue = "60000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4201),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "موجودی ریالی برای خرید پکیج تخفیف لوازم خانگی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 54
                        },
                        new
                        {
                            Id = new Guid("3aa4fd84-8cf4-4380-aa12-51d1c675ec9a"),
                            Category = "بیمه",
                            ConstantKey = "prize_marketer_to_invite_in_insurance3",
                            ConstantValue = "4000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4203),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "پورسانت بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 55
                        },
                        new
                        {
                            Id = new Guid("b633efa7-73bc-4c21-bbda-15eeb4b8d471"),
                            Category = "بیمه",
                            ConstantKey = "prize_zoneadmin_to_invite_in_insurance3",
                            ConstantValue = "4000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4205),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "پورسانت مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 56
                        },
                        new
                        {
                            Id = new Guid("00156902-483d-492b-a62c-875689baaff3"),
                            Category = "بیمه",
                            ConstantKey = "money_needed_to_attend_in_insurance4",
                            ConstantValue = "50000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4239),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "موجودی ریالی برای خرید پکیج 100 میلیونی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 57
                        },
                        new
                        {
                            Id = new Guid("6ec77bdf-5333-4fbd-ab6d-37bd9210bbb2"),
                            Category = "بیمه",
                            ConstantKey = "prize_marketer_to_invite_in_insurance4",
                            ConstantValue = "4000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4241),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "پورسانت بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 58
                        },
                        new
                        {
                            Id = new Guid("71dcd147-5317-4fba-aac4-4e4fdc7e1af3"),
                            Category = "بیمه",
                            ConstantKey = "prize_zoneadmin_to_invite_in_insurance4",
                            ConstantValue = "4000000",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(4243),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Description = "پورسانت مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 59
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Contacts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DiamondUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointCharged")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiamondUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Followers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FollowPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FollowedPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.GraphHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphModeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GraphHistory");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Graphs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectChildCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GrandParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphTypeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstChildOfParent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceivedShared")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceFourthUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ThePolicy")
                        .HasColumnType("bit");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceFourthUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceSecondUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNamePerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ThePolicy")
                        .HasColumnType("bit");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceSecondUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceThirdUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ThePolicy")
                        .HasColumnType("bit");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceThirdUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FatherIsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("IssuePlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryServiceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MotherIsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ValueInMoney")
                        .HasColumnType("bigint");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7ff49f9-de93-4a03-b8a7-2b304852ff1a"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("4b8bf635-462f-4090-91e2-618774e1dd6e"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("51851157-5362-4910-9585-00ac3ae523fb"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("9b367050-4090-4bbc-8b8d-9412bc2e089e"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("62de6239-1156-4ae9-83ba-630c083674a9"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("2845027a-686c-49fc-81d0-8ed837106d0b"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasNewMessage")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ShowMyFullNameInPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            Cellphone = "09391231234",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3511),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("e035a6fa-85ed-4dd4-9f0c-43dd35cf43d9"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 850000L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("e035a6fa-85ed-4dd4-9f0c-43dd35cf43d9"),
                            Cellphone = "09901231234",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3452),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("bf6e8701-44c1-42d5-93ca-15e5a5f4f184"),
                            Cellphone = "09111111111",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3523),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user1",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "first",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "firstuser"
                        },
                        new
                        {
                            Id = new Guid("1f7b988c-b1c2-4a4c-932b-23d9cd3d6ce2"),
                            Cellphone = "09122222222",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3531),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user2",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "second",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seconduser"
                        },
                        new
                        {
                            Id = new Guid("cbf478b0-8871-4753-9d60-df9b08adbd8e"),
                            Cellphone = "09133333333",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3539),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user3",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "third",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "thirduser"
                        },
                        new
                        {
                            Id = new Guid("8f7d31b1-7906-4285-8b7f-c8fff7df795e"),
                            Cellphone = "09144444444",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3554),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user4",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fourth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fourthuser"
                        },
                        new
                        {
                            Id = new Guid("b90c0b5b-4dbd-4749-9adc-2a69bcb8c34b"),
                            Cellphone = "09155555555",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3556),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user5",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fivth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fivthuser"
                        },
                        new
                        {
                            Id = new Guid("6426c7e3-4450-401a-8a01-1bf805223201"),
                            Cellphone = "09166666666",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3559),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user6",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "sixth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sixthuser"
                        },
                        new
                        {
                            Id = new Guid("afa36e97-7f9e-472c-b269-22588447067e"),
                            Cellphone = "09177777777",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3563),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user7",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "seventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seventhuser"
                        },
                        new
                        {
                            Id = new Guid("735534cf-cd56-4f6d-af71-2e5c0a59eb5c"),
                            Cellphone = "09188888888",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3565),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user8",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eighth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eighthuser"
                        },
                        new
                        {
                            Id = new Guid("d0685401-ecce-4dac-a5a0-d59ecb5a5cb4"),
                            Cellphone = "09199999999",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3567),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user9",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "ninth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "ninthuser"
                        },
                        new
                        {
                            Id = new Guid("263061d9-b523-45d4-aead-e7b99c8a49aa"),
                            Cellphone = "09100000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3569),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user10",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "tenth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "tenthuser"
                        },
                        new
                        {
                            Id = new Guid("ac98a3c8-317f-45f4-bf8f-e69022d65a86"),
                            Cellphone = "09011000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2025, 5, 30, 16, 54, 34, 793, DateTimeKind.Local).AddTicks(3572),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user11",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eleventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eleventhuser"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92306570-c521-4da6-9082-f8ff441d2e08"),
                            CreatedBy = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af"),
                            IsDeleted = false,
                            Role = new Guid("a7ff49f9-de93-4a03-b8a7-2b304852ff1a"),
                            User = new Guid("8ef3d901-cb40-4723-8128-b8de6100a9af")
                        },
                        new
                        {
                            Id = new Guid("3cd5161a-80f9-45bc-b6cd-b88474c8cbc6"),
                            CreatedBy = new Guid("e035a6fa-85ed-4dd4-9f0c-43dd35cf43d9"),
                            IsDeleted = false,
                            Role = new Guid("2845027a-686c-49fc-81d0-8ed837106d0b"),
                            User = new Guid("e035a6fa-85ed-4dd4-9f0c-43dd35cf43d9")
                        },
                        new
                        {
                            Id = new Guid("842fb8bd-6b13-46ea-a937-fea85197c6bf"),
                            CreatedBy = new Guid("bf6e8701-44c1-42d5-93ca-15e5a5f4f184"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("bf6e8701-44c1-42d5-93ca-15e5a5f4f184")
                        },
                        new
                        {
                            Id = new Guid("85c0b40e-7ea5-4250-bcd7-40f63e3b0638"),
                            CreatedBy = new Guid("1f7b988c-b1c2-4a4c-932b-23d9cd3d6ce2"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("1f7b988c-b1c2-4a4c-932b-23d9cd3d6ce2")
                        },
                        new
                        {
                            Id = new Guid("a465a662-631f-478b-8b54-626996e3d84b"),
                            CreatedBy = new Guid("cbf478b0-8871-4753-9d60-df9b08adbd8e"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("cbf478b0-8871-4753-9d60-df9b08adbd8e")
                        },
                        new
                        {
                            Id = new Guid("bd69120c-2e15-439e-adef-71c91b39fcd4"),
                            CreatedBy = new Guid("8f7d31b1-7906-4285-8b7f-c8fff7df795e"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("8f7d31b1-7906-4285-8b7f-c8fff7df795e")
                        },
                        new
                        {
                            Id = new Guid("68848fc1-0d3b-45ee-bfe1-ba6d1a32e3a8"),
                            CreatedBy = new Guid("b90c0b5b-4dbd-4749-9adc-2a69bcb8c34b"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("b90c0b5b-4dbd-4749-9adc-2a69bcb8c34b")
                        },
                        new
                        {
                            Id = new Guid("bea8542b-bcfa-4e5a-a5c2-ef5a46664b2b"),
                            CreatedBy = new Guid("6426c7e3-4450-401a-8a01-1bf805223201"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("6426c7e3-4450-401a-8a01-1bf805223201")
                        },
                        new
                        {
                            Id = new Guid("5c1efcbd-6ae4-4455-8017-76f140138d34"),
                            CreatedBy = new Guid("afa36e97-7f9e-472c-b269-22588447067e"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("afa36e97-7f9e-472c-b269-22588447067e")
                        },
                        new
                        {
                            Id = new Guid("cd53d625-be42-4b96-962c-f9277f311607"),
                            CreatedBy = new Guid("735534cf-cd56-4f6d-af71-2e5c0a59eb5c"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("735534cf-cd56-4f6d-af71-2e5c0a59eb5c")
                        },
                        new
                        {
                            Id = new Guid("dbac89fe-9f28-4fcf-b9b4-abb00e607bee"),
                            CreatedBy = new Guid("d0685401-ecce-4dac-a5a0-d59ecb5a5cb4"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("d0685401-ecce-4dac-a5a0-d59ecb5a5cb4")
                        },
                        new
                        {
                            Id = new Guid("268f8f50-732f-4f31-8f9b-8ed9be4e4ee5"),
                            CreatedBy = new Guid("263061d9-b523-45d4-aead-e7b99c8a49aa"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("263061d9-b523-45d4-aead-e7b99c8a49aa")
                        },
                        new
                        {
                            Id = new Guid("8d0cef8a-b118-4a40-a4e2-89e14ca44511"),
                            CreatedBy = new Guid("ac98a3c8-317f-45f4-bf8f-e69022d65a86"),
                            IsDeleted = false,
                            Role = new Guid("7db3e959-a54c-4cc8-b5b0-bc6566d04180"),
                            User = new Guid("ac98a3c8-317f-45f4-bf8f-e69022d65a86")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
