// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221020052100_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95479692-4be4-4af6-9a6c-c403fe557fb6"),
                            Caption = "کیش کدپولو",
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            CreationDate = new DateTime(2022, 10, 19, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1703),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = true,
                            LikeReward = 4,
                            MediaSourceURL = "uploads/2022/9/1-56192-4_6008031941360618419.MP4",
                            Owner = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("e53f380e-2333-48b3-b8e7-4b5ddcba2827"),
                            Caption = "ال جی",
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            CreationDate = new DateTime(2022, 10, 18, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1729),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = false,
                            LikeReward = 2,
                            MediaSourceURL = "uploads/2022/9/1-53754-1.mp4_snapshot_01.04_[2022.05.26_09.50.52].jpg",
                            Owner = new Guid("fe373b20-1e35-4f3a-91ce-7218c0549747"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("8554827f-796a-4fce-ae55-26f155829700"),
                            Caption = "سامسونگ",
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            CreationDate = new DateTime(2022, 10, 15, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1750),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = false,
                            LikeReward = 2,
                            MediaSourceURL = "uploads/2022/9/1582619178545.jpg",
                            Owner = new Guid("8124f9b8-e75b-4cbb-92a1-bb1e9ee63b9b"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("88fd8e05-deca-4ee7-a53f-e67e8e5c5221"),
                            Caption = "دیجی کالا",
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            CreationDate = new DateTime(2022, 10, 17, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1767),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = false,
                            LikeReward = 2,
                            MediaSourceURL = "uploads/2022/9/1-36433-1.jpg",
                            Owner = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfd2c2b1-ddb9-4833-9457-94d4e71ce4ae"),
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1997),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("02e24a6c-18d3-41b4-a88b-5b7fd58c51d7"),
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "2",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2003),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر مغازه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("f389ca28-6d19-4d00-9706-862e0f985118"),
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2011),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b2a85b4d-6c9a-4c0a-8814-978cd2f6c4e7"),
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2014),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("803bfaa0-64a2-45d1-9da0-0b984867f611"),
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2018),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("e7f61c79-0b38-4f49-8ccd-5e3bc2b624bc"),
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2022),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("46e88c0b-0219-43f9-8491-889e3de33220"),
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2025),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ad1453d2-b579-4844-a23f-fee47b0b8af5"),
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2029),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("af0f9def-4f1d-4e2d-ab42-95cd04a121d9"),
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2033),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("12902c8e-a57b-45ec-99cb-772c5f5559af"),
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "2",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2036),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("99575b7b-17cf-49e1-adeb-be3bc3200325"),
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "4",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(2043),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a505646-daac-4e09-a48e-0606773b783b"),
                            Donner = new Guid("e4e8afa1-aa4d-4308-9259-2c192f142fdf"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 2,
                            Value = 150L
                        },
                        new
                        {
                            Id = new Guid("ee7cfe30-26ae-40f3-a7eb-88d455724b2e"),
                            Donner = new Guid("e4e8afa1-aa4d-4308-9259-2c192f142fdf"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 5,
                            Value = 100L
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a51e528a-5cb4-49e7-bc7d-f3393c6696fb"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1787),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            EndDate = new DateTime(2022, 11, 4, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1792),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "آبان 1401",
                            Owner = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            StartDate = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1790)
                        },
                        new
                        {
                            Id = new Guid("d9a783ba-b9da-4875-a9ae-9a9e9782bca6"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1798),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            EndDate = new DateTime(2022, 12, 19, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1801),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "اذر 1401",
                            Owner = new Guid("8124f9b8-e75b-4cbb-92a1-bb1e9ee63b9b"),
                            StartDate = new DateTime(2022, 11, 19, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1799)
                        },
                        new
                        {
                            Id = new Guid("941b90fd-1307-4f68-99d9-f559a47d7f99"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1805),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            EndDate = new DateTime(2022, 10, 10, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1809),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = true,
                            IsLottery = false,
                            Name = "شهریور 1401",
                            Owner = new Guid("fe373b20-1e35-4f3a-91ce-7218c0549747"),
                            StartDate = new DateTime(2022, 9, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1807)
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee0abd9b-4b69-4b24-a2c5-4f891ebf6a6c"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1855),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Draw = new Guid("a51e528a-5cb4-49e7-bc7d-f3393c6696fb"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "200 هزار تومان",
                            Priority = 0,
                            WinnerCount = 1
                        },
                        new
                        {
                            Id = new Guid("0406188c-85f8-48cf-9baf-5d06e1a20941"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1861),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Draw = new Guid("a51e528a-5cb4-49e7-bc7d-f3393c6696fb"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "100 هزار تومان",
                            Priority = 1,
                            WinnerCount = 2
                        },
                        new
                        {
                            Id = new Guid("dab6218c-cf0d-4390-8bfd-8999eca4d9b2"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1865),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Draw = new Guid("a51e528a-5cb4-49e7-bc7d-f3393c6696fb"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "50 هزار تومان",
                            Priority = 2,
                            WinnerCount = 3
                        },
                        new
                        {
                            Id = new Guid("ad9ea84e-83b3-4b5e-bd1d-c2e4e5791c07"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1910),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Draw = new Guid("d9a783ba-b9da-4875-a9ae-9a9e9782bca6"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "2 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("53db1e93-4a80-4861-8170-84072bbccf51"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1916),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Draw = new Guid("d9a783ba-b9da-4875-a9ae-9a9e9782bca6"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "1 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("5e781853-684c-4d3d-a24a-9e015317278e"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1920),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Draw = new Guid("d9a783ba-b9da-4875-a9ae-9a9e9782bca6"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        },
                        new
                        {
                            Id = new Guid("dc2d895f-4f6f-43fc-83e4-581fe7672b6b"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1954),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Draw = new Guid("941b90fd-1307-4f68-99d9-f559a47d7f99"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "20 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("38389164-e940-41ac-8b3a-b73c21f2cc27"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1960),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Draw = new Guid("941b90fd-1307-4f68-99d9-f559a47d7f99"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "10 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("a6f115ca-ad41-4c91-9c61-d69ec23f862a"),
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1964),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Draw = new Guid("941b90fd-1307-4f68-99d9-f559a47d7f99"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41e696ff-85f8-4fb4-9b77-b9ae7f1d7882"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("8e0299f9-b3a1-4494-91e5-b37f8728e41e"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("cbd817f2-78e5-41d0-a627-19f37d7961bf"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("fd7f615e-0236-47af-b733-ebee7082d5f7"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("f3e35f4b-74bc-456e-834e-bbae92613d33"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("be8c8551-e0a3-44a8-9fc1-c8933b223bd6"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            Cellphone = "09394125130",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1290),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("e4e8afa1-aa4d-4308-9259-2c192f142fdf"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("fe373b20-1e35-4f3a-91ce-7218c0549747"),
                            Cellphone = "09111769591",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1294),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "پردلان",
                            Inviter = new Guid("e4e8afa1-aa4d-4308-9259-2c192f142fdf"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "محسن",
                            Points = 80L,
                            ProfileMediaURL = "uploads/2022/9/99.jpg",
                            Username = "vinona"
                        },
                        new
                        {
                            Id = new Guid("8124f9b8-e75b-4cbb-92a1-bb1e9ee63b9b"),
                            Cellphone = "09161234567",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1299),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "احمدی",
                            Inviter = new Guid("e4e8afa1-aa4d-4308-9259-2c192f142fdf"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "سامان",
                            Points = 70L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "saman"
                        },
                        new
                        {
                            Id = new Guid("6b554d9f-3807-4104-9ed8-5d557c9eaa2d"),
                            Cellphone = "09112281237",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1303),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبداله",
                            Points = 60L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "abdolah"
                        },
                        new
                        {
                            Id = new Guid("e4e8afa1-aa4d-4308-9259-2c192f142fdf"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1231),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("b15e4c22-4fe8-4bc0-a569-60da0163cc9b"),
                            Cellphone = "09181650151",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1307),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "شفایی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "امیر",
                            Points = 50L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "amirsh"
                        },
                        new
                        {
                            Id = new Guid("a268e24f-5e5d-4204-a3c0-c115cc7e3ea9"),
                            Cellphone = "09181616196",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1311),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "مریم",
                            Points = 40L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "pari"
                        },
                        new
                        {
                            Id = new Guid("5c67ab41-61a2-4494-a80b-9e1283122860"),
                            Cellphone = "09111291908",
                            Created = new DateTime(2022, 10, 20, 8, 51, 0, 335, DateTimeKind.Local).AddTicks(1314),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "رجبعلی",
                            Points = 30L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "haji"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75310161-6489-4ec9-929a-6f6207233b71"),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            IsDeleted = false,
                            Role = new Guid("41e696ff-85f8-4fb4-9b77-b9ae7f1d7882"),
                            User = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa")
                        },
                        new
                        {
                            Id = new Guid("2378379c-697f-4873-8aec-8a3d0473a111"),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            IsDeleted = false,
                            Role = new Guid("fd7f615e-0236-47af-b733-ebee7082d5f7"),
                            User = new Guid("8124f9b8-e75b-4cbb-92a1-bb1e9ee63b9b")
                        },
                        new
                        {
                            Id = new Guid("45a53bb9-3e5e-4b47-9066-a51f27aabd02"),
                            CreatedBy = new Guid("ca162cc3-51c1-44cf-a83c-02c822282faa"),
                            IsDeleted = false,
                            Role = new Guid("cbd817f2-78e5-41d0-a627-19f37d7961bf"),
                            User = new Guid("fe373b20-1e35-4f3a-91ce-7218c0549747")
                        },
                        new
                        {
                            Id = new Guid("7bb1ee79-826d-46c0-ab6f-cfe540be477e"),
                            CreatedBy = new Guid("6b554d9f-3807-4104-9ed8-5d557c9eaa2d"),
                            IsDeleted = false,
                            Role = new Guid("be8c8551-e0a3-44a8-9fc1-c8933b223bd6"),
                            User = new Guid("6b554d9f-3807-4104-9ed8-5d557c9eaa2d")
                        },
                        new
                        {
                            Id = new Guid("291fa052-8c3c-47ae-999f-8281dd515a73"),
                            CreatedBy = new Guid("e4e8afa1-aa4d-4308-9259-2c192f142fdf"),
                            IsDeleted = false,
                            Role = new Guid("f3e35f4b-74bc-456e-834e-bbae92613d33"),
                            User = new Guid("e4e8afa1-aa4d-4308-9259-2c192f142fdf")
                        },
                        new
                        {
                            Id = new Guid("4ddc4687-66e7-4dee-ae53-b4049b0d611d"),
                            CreatedBy = new Guid("6b554d9f-3807-4104-9ed8-5d557c9eaa2d"),
                            IsDeleted = false,
                            Role = new Guid("be8c8551-e0a3-44a8-9fc1-c8933b223bd6"),
                            User = new Guid("a268e24f-5e5d-4204-a3c0-c115cc7e3ea9")
                        },
                        new
                        {
                            Id = new Guid("46d87348-f9a1-444c-a1c5-8db8b7273a90"),
                            CreatedBy = new Guid("6b554d9f-3807-4104-9ed8-5d557c9eaa2d"),
                            IsDeleted = false,
                            Role = new Guid("be8c8551-e0a3-44a8-9fc1-c8933b223bd6"),
                            User = new Guid("b15e4c22-4fe8-4bc0-a569-60da0163cc9b")
                        },
                        new
                        {
                            Id = new Guid("4b84ad5b-654f-40da-bd51-21542d93c2ec"),
                            CreatedBy = new Guid("6b554d9f-3807-4104-9ed8-5d557c9eaa2d"),
                            IsDeleted = false,
                            Role = new Guid("be8c8551-e0a3-44a8-9fc1-c8933b223bd6"),
                            User = new Guid("5c67ab41-61a2-4494-a80b-9e1283122860")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
