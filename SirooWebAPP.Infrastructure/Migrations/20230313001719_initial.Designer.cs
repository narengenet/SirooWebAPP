// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230313001719_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMusic")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChallengeUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChallengeModeIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChallengeUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatBlocks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("fromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("toUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatBlocks");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatMessages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Chips", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Chips");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantSecondValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8dffc0b-b5e2-4ea3-9d9b-6bd351d6ea01"),
                            Category = "فروشگاه",
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "0",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(152),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 20
                        },
                        new
                        {
                            Id = new Guid("bed73f2b-92ac-4b22-8f95-67ade6313195"),
                            Category = "فروشگاه",
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(159),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر فروشگاه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 21
                        },
                        new
                        {
                            Id = new Guid("b12b5837-011a-480d-b7d4-c3389a4e78f2"),
                            Category = "فروشگاه",
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(163),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 22
                        },
                        new
                        {
                            Id = new Guid("1283c8af-2998-4b38-b743-397be7717b58"),
                            Category = "مالی",
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(170),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 24
                        },
                        new
                        {
                            Id = new Guid("f3a34088-1138-4a13-b681-040581dce66a"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(188),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 28
                        },
                        new
                        {
                            Id = new Guid("386822f8-0e34-407b-b722-909a1dcf694b"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(195),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 29
                        },
                        new
                        {
                            Id = new Guid("b3a7421e-5acf-42ce-8d47-2024ea7121f0"),
                            Category = "فروشگاه",
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(167),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 23
                        },
                        new
                        {
                            Id = new Guid("d53a04aa-45ca-4371-86b0-adcc50f365eb"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(142),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "امتیاز اولیه برای کاربری که ثبت نام میکند.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 18
                        },
                        new
                        {
                            Id = new Guid("fe8ac958-10ed-4a88-a035-23fbc771b8ac"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(147),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "امتیاز برای معرف وقتی کاربر ثبت نام کرد.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 19
                        },
                        new
                        {
                            Id = new Guid("345d39e1-e974-4fcf-8f5b-0b5a8543051e"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(130),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 15
                        },
                        new
                        {
                            Id = new Guid("d778bd1b-4da6-472f-919e-388819720750"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "15",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(134),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 16
                        },
                        new
                        {
                            Id = new Guid("18933927-7ee8-4b46-9dfd-45319600fe77"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_audio_like",
                            ConstantValue = "5",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(138),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "امتیاز پیش فرض برای لایک پست صوتی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 17
                        },
                        new
                        {
                            Id = new Guid("97be6a97-1ab9-4c9d-97ae-05c96b76dae0"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(174),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 25
                        },
                        new
                        {
                            Id = new Guid("4df7864f-f625-4046-94c5-e6e7336ff2b8"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(178),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 26
                        },
                        new
                        {
                            Id = new Guid("7a9c3401-3ce1-472c-a55c-15589cc0a0e4"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(183),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 27
                        },
                        new
                        {
                            Id = new Guid("b1c7412c-f34b-4d8d-bc5d-0d2823041c7d"),
                            Category = "کارت اعتباری",
                            ConstantKey = "def_chips_usage_perday",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(125),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "تعداد استفاده از کارت اعتباری هر کاربر در روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 14
                        },
                        new
                        {
                            Id = new Guid("523390ac-4848-4d89-95d2-0f060f2a8e19"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_video_ads",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(106),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "هزینه درج آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 10
                        },
                        new
                        {
                            Id = new Guid("56ad4abe-2dc2-4930-9180-b729ebd713c5"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_image_ads",
                            ConstantValue = "200000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(111),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "هزینه درج آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 11
                        },
                        new
                        {
                            Id = new Guid("b507e813-87d1-4813-9d12-608a13e13f9a"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_video_ads",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(115),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 12
                        },
                        new
                        {
                            Id = new Guid("d6b575b3-75aa-4e46-bff3-4ddcad0f2ab7"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_image_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(122),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 13
                        },
                        new
                        {
                            Id = new Guid("22b8ee56-eed9-4f90-bf7c-e23841c6b171"),
                            Category = "گردونه",
                            ConstantKey = "diamond_first_priority",
                            ConstantSecondValue = "50",
                            ConstantValue = "1,5",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(22),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اولویت اول تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 0
                        },
                        new
                        {
                            Id = new Guid("6cab05f9-285f-41e3-bd44-1bae7329bb18"),
                            Category = "گردونه",
                            ConstantKey = "diamond_second_priority",
                            ConstantSecondValue = "20",
                            ConstantValue = "6,10",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(26),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اولویت دوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 1
                        },
                        new
                        {
                            Id = new Guid("03e22a15-b740-413b-b505-1f445a7675ce"),
                            Category = "گردونه",
                            ConstantKey = "diamond_third_priority",
                            ConstantSecondValue = "10",
                            ConstantValue = "11,20",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(30),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اولویت سوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 2
                        },
                        new
                        {
                            Id = new Guid("f3173027-3fd8-4f6a-850f-9a066b834738"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fourth_priority",
                            ConstantSecondValue = "6",
                            ConstantValue = "21,30",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(35),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اولویت چهارم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 3
                        },
                        new
                        {
                            Id = new Guid("6e1c41b5-c5a7-43ce-9905-a4f0bb14c6eb"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fivth_priority",
                            ConstantSecondValue = "5",
                            ConstantValue = "31,50",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(40),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اولویت پنجم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 4
                        },
                        new
                        {
                            Id = new Guid("461bce33-71d2-4fbc-a3f8-577976e83e87"),
                            Category = "گردونه",
                            ConstantKey = "diamond_sixth_priority",
                            ConstantSecondValue = "4",
                            ConstantValue = "51,100",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(47),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اولویت ششم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 5
                        },
                        new
                        {
                            Id = new Guid("592f9c04-4bfe-4a42-851b-818f3fca2e0d"),
                            Category = "گردونه",
                            ConstantKey = "diamond_seventh_priority",
                            ConstantSecondValue = "3",
                            ConstantValue = "101,200",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(51),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اولویت هفتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 6
                        },
                        new
                        {
                            Id = new Guid("d7389455-6796-408f-b107-d09e981e9f84"),
                            Category = "گردونه",
                            ConstantKey = "diamond_eighth_priority",
                            ConstantSecondValue = "2",
                            ConstantValue = "201,300",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(56),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "اولویت هشتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 7
                        },
                        new
                        {
                            Id = new Guid("8a589c09-8984-4e8a-9f8b-3c682c72a7ba"),
                            Category = "گردونه",
                            ConstantKey = "diamond_nineth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "301,500",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(60),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "امتیاز نهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 8
                        },
                        new
                        {
                            Id = new Guid("e33e01fb-2ce9-4990-a652-5b3eac120154"),
                            Category = "گردونه",
                            ConstantKey = "diamond_tenth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "999,1000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(100),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "امتیاز دهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 9
                        },
                        new
                        {
                            Id = new Guid("562f1b8f-c6ca-4833-9591-cc557e9eb34f"),
                            Category = "گردونه",
                            ConstantKey = "min_points_to_spin_diamond_wheel",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(6),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "حداقل امتیاز برای چرخاندن گردونه شانس الماس بار اول",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -2
                        },
                        new
                        {
                            Id = new Guid("7bdd39fa-2e6a-4dfd-85d6-175e323272d8"),
                            Category = "گردونه",
                            ConstantKey = "added_points_to_each_spin_diamond_wheel_after_first_time",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(17),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "افزایش تعداد امتیاز به اضای هر بار چرخاندن گردونه شانس در یک روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -1
                        },
                        new
                        {
                            Id = new Guid("6d385685-b66c-4b00-b4b9-67a9cde5634f"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_1",
                            ConstantValue = "30",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(199),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 30
                        },
                        new
                        {
                            Id = new Guid("1bcf3c09-f386-4044-8dc5-5cc9175a3c1b"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_1",
                            ConstantValue = "300000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(202),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 31
                        },
                        new
                        {
                            Id = new Guid("cbfb78de-f724-487e-8121-b75a6be6994a"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_1",
                            ConstantValue = "100000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(206),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 32
                        },
                        new
                        {
                            Id = new Guid("6d686b82-8b6b-4915-9bfa-6e54acc28c2e"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_1",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(210),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "ترتیب پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 33
                        },
                        new
                        {
                            Id = new Guid("7d9f1c0c-f513-4940-9bf3-5e051ee6ca5a"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_1",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(214),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 34
                        },
                        new
                        {
                            Id = new Guid("29fe261c-f05b-4b7e-bbf8-e678b468f811"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_1",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(217),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "تعداد روزهای آگهی تجاری نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 35
                        },
                        new
                        {
                            Id = new Guid("30685463-66e4-4e67-85d6-f7387a3027c4"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_2",
                            ConstantValue = "60",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(223),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 36
                        },
                        new
                        {
                            Id = new Guid("932fa1a2-db99-4a4a-ba2b-825a65b1100b"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_2",
                            ConstantValue = "3550000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(231),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 37
                        },
                        new
                        {
                            Id = new Guid("96ccb82f-8028-4fe4-8bb7-fc47c70a571f"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_2",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(235),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 38
                        },
                        new
                        {
                            Id = new Guid("4f85ea5f-0883-4e32-bc23-b73263254199"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_2",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(239),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "ترتیب پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 39
                        },
                        new
                        {
                            Id = new Guid("21f72f09-b4d2-4fc3-9128-0cf829b84ddc"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_2",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(243),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 40
                        },
                        new
                        {
                            Id = new Guid("1911a3d2-b0f7-40ca-807a-56101780690e"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_2",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(247),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "تعداد روزهای آگهی تجاری نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 41
                        },
                        new
                        {
                            Id = new Guid("cbf85263-df74-4618-a175-bffb698221b6"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_3",
                            ConstantValue = "90",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(250),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 42
                        },
                        new
                        {
                            Id = new Guid("1ef159fc-9f5c-4a9c-bd3d-0b6f4cf30f3a"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_3",
                            ConstantValue = "30000000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(254),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 43
                        },
                        new
                        {
                            Id = new Guid("84ecf5f2-ce0b-4425-9cce-d536beda3e75"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_3",
                            ConstantValue = "10000000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(261),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 44
                        },
                        new
                        {
                            Id = new Guid("313a4088-7cb9-41bf-9736-8d8ae8f843d4"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_3",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(270),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "ترتیب پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 45
                        },
                        new
                        {
                            Id = new Guid("4c94c289-b56e-4be7-9011-0bc5752fd377"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_3",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(274),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 46
                        },
                        new
                        {
                            Id = new Guid("f3743b4a-3d9a-49cd-bfc8-29b0e740c169"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_3",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 815, DateTimeKind.Local).AddTicks(277),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Description = "تعداد روزهای آگهی تجاری نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 47
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Contacts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DiamondUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointCharged")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiamondUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Followers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FollowPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FollowedPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.GraphHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphModeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GraphHistory");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Graphs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectChildCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GrandParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphTypeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstChildOfParent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceivedShared")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ValueInMoney")
                        .HasColumnType("bigint");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d4165ac-67dd-468b-84cb-f10d78d9fd98"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("58b8a632-ef9f-4b86-87d5-bfd4f514f684"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("b7403080-9d6d-4bdb-9244-e3fa5e49cfc9"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("91bc3716-a57a-4de7-8e1a-f982fea242b9"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("7567f8e5-b2fc-4dba-9afe-2893bfc930ba"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("ccbc9815-e43e-4485-a21e-9d7bf0577b66"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasNewMessage")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ShowMyFullNameInPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            Cellphone = "09394125130",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9383),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("79f7b058-1826-41fc-8f33-d1e20df4d077"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 850000L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("79f7b058-1826-41fc-8f33-d1e20df4d077"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9330),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("5dcd5c2b-97a1-4176-bfed-a050985eac66"),
                            Cellphone = "09111111111",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9388),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user1",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "first",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "firstuser"
                        },
                        new
                        {
                            Id = new Guid("c069339b-6be9-4322-bf4e-47e498dab864"),
                            Cellphone = "09122222222",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9392),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user2",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "second",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seconduser"
                        },
                        new
                        {
                            Id = new Guid("a6d1e427-fd1d-45ff-917b-e8f6c3137583"),
                            Cellphone = "09133333333",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9395),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user3",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "third",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "thirduser"
                        },
                        new
                        {
                            Id = new Guid("b04365fe-c567-45df-8b0c-a45b81404b16"),
                            Cellphone = "09144444444",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9399),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user4",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fourth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fourthuser"
                        },
                        new
                        {
                            Id = new Guid("7d396286-99d0-4279-8b28-8c3c8390bde2"),
                            Cellphone = "09155555555",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9405),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user5",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fivth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fivthuser"
                        },
                        new
                        {
                            Id = new Guid("09ca6dac-610e-41a8-b0ea-99c81222f323"),
                            Cellphone = "09166666666",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9409),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user6",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "sixth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sixthuser"
                        },
                        new
                        {
                            Id = new Guid("ed673e26-c5eb-447d-a6f3-c7b0e88f1bf3"),
                            Cellphone = "09177777777",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9417),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user7",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "seventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seventhuser"
                        },
                        new
                        {
                            Id = new Guid("ffc06b55-623d-43e0-a604-2c020f430504"),
                            Cellphone = "09188888888",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9422),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user8",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eighth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eighthuser"
                        },
                        new
                        {
                            Id = new Guid("b70f7f53-6885-48ac-8f83-ddf997d9c60e"),
                            Cellphone = "09199999999",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9427),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user9",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "ninth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "ninthuser"
                        },
                        new
                        {
                            Id = new Guid("928a83f6-7c46-4afa-b3cc-21db99473550"),
                            Cellphone = "09100000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9431),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user10",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "tenth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "tenthuser"
                        },
                        new
                        {
                            Id = new Guid("5273fd3c-f916-486d-a235-7ff9e010c521"),
                            Cellphone = "09011000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 3, 13, 3, 47, 18, 814, DateTimeKind.Local).AddTicks(9435),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user11",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eleventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eleventhuser"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa151aaf-9343-47ce-8888-5d26256d0c2a"),
                            CreatedBy = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442"),
                            IsDeleted = false,
                            Role = new Guid("7d4165ac-67dd-468b-84cb-f10d78d9fd98"),
                            User = new Guid("c8a22863-11f3-41bf-bec8-7cdbcb90d442")
                        },
                        new
                        {
                            Id = new Guid("cede9313-e55a-44f3-9adf-03943ba32126"),
                            CreatedBy = new Guid("79f7b058-1826-41fc-8f33-d1e20df4d077"),
                            IsDeleted = false,
                            Role = new Guid("ccbc9815-e43e-4485-a21e-9d7bf0577b66"),
                            User = new Guid("79f7b058-1826-41fc-8f33-d1e20df4d077")
                        },
                        new
                        {
                            Id = new Guid("212816ba-e9ae-419e-bd37-16a2373f184a"),
                            CreatedBy = new Guid("5dcd5c2b-97a1-4176-bfed-a050985eac66"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("5dcd5c2b-97a1-4176-bfed-a050985eac66")
                        },
                        new
                        {
                            Id = new Guid("6738abbe-5308-4a2b-b879-2ad440e3ee1c"),
                            CreatedBy = new Guid("c069339b-6be9-4322-bf4e-47e498dab864"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("c069339b-6be9-4322-bf4e-47e498dab864")
                        },
                        new
                        {
                            Id = new Guid("7a2f31c2-2fe3-4b88-9b3e-0c7a6d0fd96d"),
                            CreatedBy = new Guid("a6d1e427-fd1d-45ff-917b-e8f6c3137583"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("a6d1e427-fd1d-45ff-917b-e8f6c3137583")
                        },
                        new
                        {
                            Id = new Guid("50200f6f-df1f-4d43-9813-bb40466478be"),
                            CreatedBy = new Guid("b04365fe-c567-45df-8b0c-a45b81404b16"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("b04365fe-c567-45df-8b0c-a45b81404b16")
                        },
                        new
                        {
                            Id = new Guid("18ae83ef-1fed-43c0-a5b0-487bfdf88207"),
                            CreatedBy = new Guid("7d396286-99d0-4279-8b28-8c3c8390bde2"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("7d396286-99d0-4279-8b28-8c3c8390bde2")
                        },
                        new
                        {
                            Id = new Guid("f0f3cf95-4e4b-4500-9da0-003c4848068a"),
                            CreatedBy = new Guid("09ca6dac-610e-41a8-b0ea-99c81222f323"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("09ca6dac-610e-41a8-b0ea-99c81222f323")
                        },
                        new
                        {
                            Id = new Guid("58711ca9-c620-418c-9a62-6c131350aa36"),
                            CreatedBy = new Guid("ed673e26-c5eb-447d-a6f3-c7b0e88f1bf3"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("ed673e26-c5eb-447d-a6f3-c7b0e88f1bf3")
                        },
                        new
                        {
                            Id = new Guid("5fb63100-5ea7-49db-8ea1-fe80dc71bd3c"),
                            CreatedBy = new Guid("ffc06b55-623d-43e0-a604-2c020f430504"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("ffc06b55-623d-43e0-a604-2c020f430504")
                        },
                        new
                        {
                            Id = new Guid("be6ed49e-3041-4a9d-ac62-c88cf203f57b"),
                            CreatedBy = new Guid("b70f7f53-6885-48ac-8f83-ddf997d9c60e"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("b70f7f53-6885-48ac-8f83-ddf997d9c60e")
                        },
                        new
                        {
                            Id = new Guid("0ec14921-fada-4fa0-ac73-acef5993d22d"),
                            CreatedBy = new Guid("928a83f6-7c46-4afa-b3cc-21db99473550"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("928a83f6-7c46-4afa-b3cc-21db99473550")
                        },
                        new
                        {
                            Id = new Guid("093d631b-03ec-400f-ba56-32b6a0dd434f"),
                            CreatedBy = new Guid("5273fd3c-f916-486d-a235-7ff9e010c521"),
                            IsDeleted = false,
                            Role = new Guid("e12f4427-b0f1-4ca2-910d-0880e6eafda1"),
                            User = new Guid("5273fd3c-f916-486d-a235-7ff9e010c521")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
