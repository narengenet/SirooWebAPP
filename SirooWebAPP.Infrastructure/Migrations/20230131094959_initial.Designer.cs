// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230131094959_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChallengeUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChallengeUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatMessages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Chips", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Chips");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantSecondValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1449474-5425-4e26-b437-1aef809fca01"),
                            Category = "فروشگاه",
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "0",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9527),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 19
                        },
                        new
                        {
                            Id = new Guid("95eff3c3-ab22-4f43-9305-1dccd261c225"),
                            Category = "فروشگاه",
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9529),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر فروشگاه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 20
                        },
                        new
                        {
                            Id = new Guid("7710fdba-ee70-4fa2-9e3f-651ce50e6d9d"),
                            Category = "فروشگاه",
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9533),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 21
                        },
                        new
                        {
                            Id = new Guid("6cb75452-b686-4a83-baf6-ea3e17533cd3"),
                            Category = "مالی",
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9539),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 23
                        },
                        new
                        {
                            Id = new Guid("9721389d-e6c2-4f0d-9974-4228c832c708"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9550),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 27
                        },
                        new
                        {
                            Id = new Guid("5be693bf-f4fb-45f5-8ff3-a6d86244c6f5"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9553),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 28
                        },
                        new
                        {
                            Id = new Guid("789aeb3a-f1e1-434a-bd39-fb43d7593301"),
                            Category = "فروشگاه",
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9536),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 22
                        },
                        new
                        {
                            Id = new Guid("17d88d82-afd3-4a91-a4e1-21abb5dcb91e"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9522),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "امتیاز اولیه برای کاربری که ثبت نام میکند.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 17
                        },
                        new
                        {
                            Id = new Guid("f9b0a32b-7fa1-4206-8d60-84e36274014e"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9524),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "امتیاز برای معرف وقتی کاربر ثبت نام کرد.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 18
                        },
                        new
                        {
                            Id = new Guid("0469b98e-32c4-46e6-b100-edc08f8182aa"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9516),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 15
                        },
                        new
                        {
                            Id = new Guid("4bc4a97c-404a-48b4-9c7e-50be8c3c27be"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "15",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9519),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 16
                        },
                        new
                        {
                            Id = new Guid("11a4e63f-b361-4f28-85a0-43d8951d8134"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9542),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 24
                        },
                        new
                        {
                            Id = new Guid("63347c5f-e87f-4bb8-8110-ffa3cefe77cf"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9545),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 25
                        },
                        new
                        {
                            Id = new Guid("2d10f0df-017f-4bcd-a342-39c75f668fba"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9548),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 26
                        },
                        new
                        {
                            Id = new Guid("1c571614-bc78-40ea-828b-b94fe00351ca"),
                            Category = "کارت اعتباری",
                            ConstantKey = "def_chips_usage_perday",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9513),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "تعداد استفاده از کارت اعتباری هر کاربر در روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 14
                        },
                        new
                        {
                            Id = new Guid("6a448fac-aa02-4bef-8760-445fad40de14"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_video_ads",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9500),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "هزینه درج آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 10
                        },
                        new
                        {
                            Id = new Guid("21c3804d-baa2-40ad-a8ef-42b39492cf29"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_image_ads",
                            ConstantValue = "200000",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9503),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "هزینه درج آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 11
                        },
                        new
                        {
                            Id = new Guid("a6451aef-d07f-458c-935f-6461ba64e5e0"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_video_ads",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9506),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 12
                        },
                        new
                        {
                            Id = new Guid("788bd10d-b22c-4cc3-8329-964537842de0"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_image_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9511),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 13
                        },
                        new
                        {
                            Id = new Guid("e421496c-3459-49d5-a7ee-9c7c91fd5d2b"),
                            Category = "گردونه",
                            ConstantKey = "diamond_first_priority",
                            ConstantSecondValue = "50",
                            ConstantValue = "1,5",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9466),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اولویت اول تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 0
                        },
                        new
                        {
                            Id = new Guid("fa205819-6a8e-4bf8-9b84-0b976040f452"),
                            Category = "گردونه",
                            ConstantKey = "diamond_second_priority",
                            ConstantSecondValue = "20",
                            ConstantValue = "6,10",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9469),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اولویت دوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 1
                        },
                        new
                        {
                            Id = new Guid("f8d4ae88-d93c-4254-9e2e-37641b76c2b7"),
                            Category = "گردونه",
                            ConstantKey = "diamond_third_priority",
                            ConstantSecondValue = "10",
                            ConstantValue = "11,20",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9472),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اولویت سوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 2
                        },
                        new
                        {
                            Id = new Guid("5d234561-88cd-4cfd-9f87-316103dc00b6"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fourth_priority",
                            ConstantSecondValue = "6",
                            ConstantValue = "21,30",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9479),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اولویت چهارم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 3
                        },
                        new
                        {
                            Id = new Guid("fef61edb-f679-455f-a79c-3d8991c7640f"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fivth_priority",
                            ConstantSecondValue = "5",
                            ConstantValue = "31,50",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9482),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اولویت پنجم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 4
                        },
                        new
                        {
                            Id = new Guid("87710444-38bb-40bb-acaa-dce419484f48"),
                            Category = "گردونه",
                            ConstantKey = "diamond_sixth_priority",
                            ConstantSecondValue = "4",
                            ConstantValue = "51,100",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9486),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اولویت ششم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 5
                        },
                        new
                        {
                            Id = new Guid("a6bd4a70-aa5f-4c46-9056-f2d9fd204c4c"),
                            Category = "گردونه",
                            ConstantKey = "diamond_seventh_priority",
                            ConstantSecondValue = "3",
                            ConstantValue = "101,200",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9489),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اولویت هفتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 6
                        },
                        new
                        {
                            Id = new Guid("0deb1230-b5ee-4af5-9dde-bc84e9d5735d"),
                            Category = "گردونه",
                            ConstantKey = "diamond_eighth_priority",
                            ConstantSecondValue = "2",
                            ConstantValue = "201,300",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9492),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "اولویت هشتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 7
                        },
                        new
                        {
                            Id = new Guid("086fcb17-e59a-45f6-8e1c-0d2df54120d2"),
                            Category = "گردونه",
                            ConstantKey = "diamond_nineth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "301,500",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9495),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "امتیاز نهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 8
                        },
                        new
                        {
                            Id = new Guid("e7ce587c-27e2-4a68-b1b1-36aca2649228"),
                            Category = "گردونه",
                            ConstantKey = "diamond_tenth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "999,1000",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9498),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "امتیاز دهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 9
                        },
                        new
                        {
                            Id = new Guid("712042da-a5f1-4435-ac13-365a14827951"),
                            Category = "گردونه",
                            ConstantKey = "min_points_to_spin_diamond_wheel",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9459),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "حداقل امتیاز برای چرخاندن گردونه شانس الماس بار اول",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -2
                        },
                        new
                        {
                            Id = new Guid("fee4f32a-8eec-4198-92fd-186bc7ec7e06"),
                            Category = "گردونه",
                            ConstantKey = "added_points_to_each_spin_diamond_wheel_after_first_time",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9463),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "افزایش تعداد امتیاز به اضای هر بار چرخاندن گردونه شانس در یک روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -1
                        },
                        new
                        {
                            Id = new Guid("59c825f8-32f4-45c2-8dec-706cede88357"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge",
                            ConstantValue = "60",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9557),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "تعداد روزهای مجاز برای چالش",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 29
                        },
                        new
                        {
                            Id = new Guid("ee39a592-fe68-4e16-bdee-ac6340b3de68"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge",
                            ConstantValue = "3000000",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9560),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "موجودی ریالی برای شرکت در چالش",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 30
                        },
                        new
                        {
                            Id = new Guid("a0cff7ff-9053-47e4-b23d-f2dc8cbfca78"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9562),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "کارمزد برای معرفی کاربران به چالش",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 31
                        },
                        new
                        {
                            Id = new Guid("f237b5a0-0e4a-482d-a900-1852cf01f6e9"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment",
                            ConstantValue = "3,5,2,10",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9565),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "ترتیب پرداخت کارمزدها",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 32
                        },
                        new
                        {
                            Id = new Guid("b641ed8b-983e-4cc7-9c58-83d3ace8a575"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9568),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Description = "حداکثر تعداد پرداخت کارمزدها",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 33
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Contacts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DiamondUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointCharged")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiamondUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.GraphHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GraphHistory");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Graphs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectChildCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GrandParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstChildOfParent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceivedShared")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ValueInMoney")
                        .HasColumnType("bigint");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8da24f6e-352b-41cf-bc35-a9197cd04c2f"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("f36dba5f-4ab1-413c-80b6-d7fddd3aaf87"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("e867824d-b637-477e-861f-0bae61aa8d07"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("4a3df27f-9bf1-49eb-a53b-275e3479b496"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("1400e495-1d13-4662-900a-2930c1540286"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("d8e11e47-6dec-46ea-ba88-1b064283e398"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            Cellphone = "09394125130",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9126),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("33231dd2-9b1f-4341-b620-be37bf96d094"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 850000L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("33231dd2-9b1f-4341-b620-be37bf96d094"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9088),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("bd00783a-a55e-4d06-be80-1079c071324d"),
                            Cellphone = "09111111111",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9130),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user1",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "first",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "firstuser"
                        },
                        new
                        {
                            Id = new Guid("37baf46c-ad2e-4ff0-873f-8e6137c169ab"),
                            Cellphone = "09122222222",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9133),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user2",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "second",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seconduser"
                        },
                        new
                        {
                            Id = new Guid("331fd2ce-6fd6-449b-95d3-d2a4f7d93d89"),
                            Cellphone = "09133333333",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9136),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user3",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "third",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "thirduser"
                        },
                        new
                        {
                            Id = new Guid("e1ae45d1-dac3-47ae-9520-b763ab141231"),
                            Cellphone = "09144444444",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9138),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user4",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fourth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fourthuser"
                        },
                        new
                        {
                            Id = new Guid("841bba9b-9fd4-41c6-a634-681c0d3e5f3e"),
                            Cellphone = "09155555555",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9141),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user5",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fivth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fivthuser"
                        },
                        new
                        {
                            Id = new Guid("331854c6-87e8-42f3-9eb8-0d6890b642ae"),
                            Cellphone = "09166666666",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9143),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user6",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "sixth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sixthuser"
                        },
                        new
                        {
                            Id = new Guid("38d44e2c-d0e1-4b43-9e6d-f93d27a57071"),
                            Cellphone = "09177777777",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9148),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user7",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "seventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seventhuser"
                        },
                        new
                        {
                            Id = new Guid("444a35b3-cdbe-42c2-ac68-ad8d8716d117"),
                            Cellphone = "09188888888",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9151),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user8",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eighth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eighthuser"
                        },
                        new
                        {
                            Id = new Guid("cd3d8c9c-fffd-4055-b122-37497383b15c"),
                            Cellphone = "09199999999",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9156),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user9",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "ninth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "ninthuser"
                        },
                        new
                        {
                            Id = new Guid("2d95a046-1ea5-4edd-aa67-74e98fd38b93"),
                            Cellphone = "09100000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9158),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user10",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "tenth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "tenthuser"
                        },
                        new
                        {
                            Id = new Guid("8179445e-6711-42bb-9ab0-0c422ed52379"),
                            Cellphone = "09011000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 31, 13, 19, 58, 903, DateTimeKind.Local).AddTicks(9162),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user11",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eleventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eleventhuser"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2599a818-ff9d-4476-97ba-7077952c0891"),
                            CreatedBy = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77"),
                            IsDeleted = false,
                            Role = new Guid("8da24f6e-352b-41cf-bc35-a9197cd04c2f"),
                            User = new Guid("32bfdb16-387e-4087-b323-ab649fb49d77")
                        },
                        new
                        {
                            Id = new Guid("3afec9d1-9a6e-4c25-a156-d8c549dfc3ed"),
                            CreatedBy = new Guid("33231dd2-9b1f-4341-b620-be37bf96d094"),
                            IsDeleted = false,
                            Role = new Guid("d8e11e47-6dec-46ea-ba88-1b064283e398"),
                            User = new Guid("33231dd2-9b1f-4341-b620-be37bf96d094")
                        },
                        new
                        {
                            Id = new Guid("1086aff7-242b-4f83-9042-2305d1bc98b0"),
                            CreatedBy = new Guid("bd00783a-a55e-4d06-be80-1079c071324d"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("bd00783a-a55e-4d06-be80-1079c071324d")
                        },
                        new
                        {
                            Id = new Guid("3b2a7ee2-22a0-4351-8c29-cc361c153068"),
                            CreatedBy = new Guid("37baf46c-ad2e-4ff0-873f-8e6137c169ab"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("37baf46c-ad2e-4ff0-873f-8e6137c169ab")
                        },
                        new
                        {
                            Id = new Guid("4afca1b5-8708-4511-8da3-d55a3b4b85dd"),
                            CreatedBy = new Guid("331fd2ce-6fd6-449b-95d3-d2a4f7d93d89"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("331fd2ce-6fd6-449b-95d3-d2a4f7d93d89")
                        },
                        new
                        {
                            Id = new Guid("c8011e20-fd42-4145-a442-3685a286632e"),
                            CreatedBy = new Guid("e1ae45d1-dac3-47ae-9520-b763ab141231"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("e1ae45d1-dac3-47ae-9520-b763ab141231")
                        },
                        new
                        {
                            Id = new Guid("e0e7bfd4-330a-45b0-96f0-e9af04a08238"),
                            CreatedBy = new Guid("841bba9b-9fd4-41c6-a634-681c0d3e5f3e"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("841bba9b-9fd4-41c6-a634-681c0d3e5f3e")
                        },
                        new
                        {
                            Id = new Guid("183a489a-fc9c-4e26-abc2-c941c17c0852"),
                            CreatedBy = new Guid("331854c6-87e8-42f3-9eb8-0d6890b642ae"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("331854c6-87e8-42f3-9eb8-0d6890b642ae")
                        },
                        new
                        {
                            Id = new Guid("5a6f18bf-a2f6-4588-b22c-69c589e522e6"),
                            CreatedBy = new Guid("38d44e2c-d0e1-4b43-9e6d-f93d27a57071"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("38d44e2c-d0e1-4b43-9e6d-f93d27a57071")
                        },
                        new
                        {
                            Id = new Guid("49cd46f5-9207-4aa9-93f3-71844cd85420"),
                            CreatedBy = new Guid("444a35b3-cdbe-42c2-ac68-ad8d8716d117"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("444a35b3-cdbe-42c2-ac68-ad8d8716d117")
                        },
                        new
                        {
                            Id = new Guid("4095e8e6-085e-40a7-927b-ec75b288af35"),
                            CreatedBy = new Guid("cd3d8c9c-fffd-4055-b122-37497383b15c"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("cd3d8c9c-fffd-4055-b122-37497383b15c")
                        },
                        new
                        {
                            Id = new Guid("8730bced-f07b-4999-a56a-7ef2b0c8b318"),
                            CreatedBy = new Guid("2d95a046-1ea5-4edd-aa67-74e98fd38b93"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("2d95a046-1ea5-4edd-aa67-74e98fd38b93")
                        },
                        new
                        {
                            Id = new Guid("c1606870-f44d-4a42-b578-02a91fbdbcea"),
                            CreatedBy = new Guid("8179445e-6711-42bb-9ab0-0c422ed52379"),
                            IsDeleted = false,
                            Role = new Guid("8c1506d5-7e75-49d0-b5b3-0d909fea8481"),
                            User = new Guid("8179445e-6711-42bb-9ab0-0c422ed52379")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
