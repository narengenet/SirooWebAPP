// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChallengeUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChallengeModeIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChallengeUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatMessages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Chips", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Chips");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantSecondValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6c5ea83-439f-430d-a066-b52d3c4c75d6"),
                            Category = "فروشگاه",
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "0",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3596),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 19
                        },
                        new
                        {
                            Id = new Guid("6d255e93-5201-4852-8a86-f65bcc161510"),
                            Category = "فروشگاه",
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3600),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر فروشگاه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 20
                        },
                        new
                        {
                            Id = new Guid("64cb9cdb-6243-4fc4-a7bf-07dd2f78d100"),
                            Category = "فروشگاه",
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3604),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 21
                        },
                        new
                        {
                            Id = new Guid("fdc76d41-1ee1-46e5-b1ab-4619a9044183"),
                            Category = "مالی",
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3612),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 23
                        },
                        new
                        {
                            Id = new Guid("d64f99a2-6814-4b83-9670-730f88ec4a26"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3631),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 27
                        },
                        new
                        {
                            Id = new Guid("11c3c9de-cd71-4cb6-b530-420786ddfdc0"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3636),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 28
                        },
                        new
                        {
                            Id = new Guid("cc2d7aa6-2a5d-4d95-bb44-b2d1f526223b"),
                            Category = "فروشگاه",
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3608),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 22
                        },
                        new
                        {
                            Id = new Guid("50a7a395-a73b-466f-b90e-d7a353cdbc65"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3587),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "امتیاز اولیه برای کاربری که ثبت نام میکند.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 17
                        },
                        new
                        {
                            Id = new Guid("da5e8648-0aaa-485a-b4ea-f0a7751b4cb7"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3591),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "امتیاز برای معرف وقتی کاربر ثبت نام کرد.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 18
                        },
                        new
                        {
                            Id = new Guid("3aae8b69-a097-4952-87f4-5f50f8f3ccff"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3576),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 15
                        },
                        new
                        {
                            Id = new Guid("15be6c45-0091-40e6-9bc1-ed83b17fe6c6"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "15",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3583),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 16
                        },
                        new
                        {
                            Id = new Guid("4e67d415-1ff7-4046-b9de-425594710bab"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3619),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 24
                        },
                        new
                        {
                            Id = new Guid("967af631-464c-4289-b2dd-558c690832f2"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3624),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 25
                        },
                        new
                        {
                            Id = new Guid("77b67f61-3155-4e71-869e-1a0414440a53"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3628),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 26
                        },
                        new
                        {
                            Id = new Guid("aa25af21-2af8-4f93-a8f9-31b6f34ba0b6"),
                            Category = "کارت اعتباری",
                            ConstantKey = "def_chips_usage_perday",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3572),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "تعداد استفاده از کارت اعتباری هر کاربر در روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 14
                        },
                        new
                        {
                            Id = new Guid("6c65e33f-aa8c-4429-8c1b-7175a6127034"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_video_ads",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3554),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "هزینه درج آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 10
                        },
                        new
                        {
                            Id = new Guid("7d5064d7-2afd-43ca-af92-e806dc4f0d93"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_image_ads",
                            ConstantValue = "200000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3560),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "هزینه درج آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 11
                        },
                        new
                        {
                            Id = new Guid("d6e5c08c-7eb2-405f-9661-b90bc50a5320"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_video_ads",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3564),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 12
                        },
                        new
                        {
                            Id = new Guid("0d71fe9a-2ca7-43c0-b5bf-c1a78336ee67"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_image_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3568),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 13
                        },
                        new
                        {
                            Id = new Guid("03893fd9-cd31-4166-8f87-72ac2c6e2035"),
                            Category = "گردونه",
                            ConstantKey = "diamond_first_priority",
                            ConstantSecondValue = "50",
                            ConstantValue = "1,5",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3502),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اولویت اول تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 0
                        },
                        new
                        {
                            Id = new Guid("efd26894-ff3f-4f0e-a6f3-4331f84a8bda"),
                            Category = "گردونه",
                            ConstantKey = "diamond_second_priority",
                            ConstantSecondValue = "20",
                            ConstantValue = "6,10",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3506),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اولویت دوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 1
                        },
                        new
                        {
                            Id = new Guid("5d22120a-a6a6-4093-a088-517dac16dafe"),
                            Category = "گردونه",
                            ConstantKey = "diamond_third_priority",
                            ConstantSecondValue = "10",
                            ConstantValue = "11,20",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3510),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اولویت سوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 2
                        },
                        new
                        {
                            Id = new Guid("c2b51a1c-0f82-495f-ad4d-881970308405"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fourth_priority",
                            ConstantSecondValue = "6",
                            ConstantValue = "21,30",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3515),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اولویت چهارم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 3
                        },
                        new
                        {
                            Id = new Guid("ca8f751b-4166-45db-bf6b-d441d9e0fe1f"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fivth_priority",
                            ConstantSecondValue = "5",
                            ConstantValue = "31,50",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3519),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اولویت پنجم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 4
                        },
                        new
                        {
                            Id = new Guid("9888f2f0-a2a0-487b-80c1-66d86d9b78c5"),
                            Category = "گردونه",
                            ConstantKey = "diamond_sixth_priority",
                            ConstantSecondValue = "4",
                            ConstantValue = "51,100",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3523),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اولویت ششم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 5
                        },
                        new
                        {
                            Id = new Guid("8d755823-d538-4856-8189-1d605034e9c2"),
                            Category = "گردونه",
                            ConstantKey = "diamond_seventh_priority",
                            ConstantSecondValue = "3",
                            ConstantValue = "101,200",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3536),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اولویت هفتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 6
                        },
                        new
                        {
                            Id = new Guid("1c643ce3-88ff-4719-904b-f24f311de874"),
                            Category = "گردونه",
                            ConstantKey = "diamond_eighth_priority",
                            ConstantSecondValue = "2",
                            ConstantValue = "201,300",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3540),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "اولویت هشتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 7
                        },
                        new
                        {
                            Id = new Guid("cd4df2cb-d70c-4770-897f-e5a843a56b8c"),
                            Category = "گردونه",
                            ConstantKey = "diamond_nineth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "301,500",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3546),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "امتیاز نهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 8
                        },
                        new
                        {
                            Id = new Guid("d43ff69f-c4e2-49e3-bde6-f77abc3fc8a6"),
                            Category = "گردونه",
                            ConstantKey = "diamond_tenth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "999,1000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3550),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "امتیاز دهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 9
                        },
                        new
                        {
                            Id = new Guid("cc073825-c9c4-4712-82bb-4fbd309a5339"),
                            Category = "گردونه",
                            ConstantKey = "min_points_to_spin_diamond_wheel",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3486),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "حداقل امتیاز برای چرخاندن گردونه شانس الماس بار اول",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -2
                        },
                        new
                        {
                            Id = new Guid("2a4cf9b2-abe4-48f0-9c69-601af15a3d69"),
                            Category = "گردونه",
                            ConstantKey = "added_points_to_each_spin_diamond_wheel_after_first_time",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3494),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "افزایش تعداد امتیاز به اضای هر بار چرخاندن گردونه شانس در یک روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -1
                        },
                        new
                        {
                            Id = new Guid("178652f6-6d3a-49a7-9d8f-882d07b61cf8"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_1",
                            ConstantValue = "30",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3641),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 29
                        },
                        new
                        {
                            Id = new Guid("3d725ca8-f707-4bae-b5d7-4ecc21523573"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_1",
                            ConstantValue = "300000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3645),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 30
                        },
                        new
                        {
                            Id = new Guid("4d930576-34cd-49d8-b8dd-d46fc5d8cb64"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_1",
                            ConstantValue = "100000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3649),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 31
                        },
                        new
                        {
                            Id = new Guid("b8f83bcd-f0a7-4a6f-9371-9cb63e727b72"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_1",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3656),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "ترتیب پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 32
                        },
                        new
                        {
                            Id = new Guid("d657eb9c-da49-4cbd-ba65-b69750f5e8dd"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_1",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3660),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 33
                        },
                        new
                        {
                            Id = new Guid("7c6970e3-4f49-4a71-b81d-e44b16639751"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_2",
                            ConstantValue = "60",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3664),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 34
                        },
                        new
                        {
                            Id = new Guid("c82b1013-d073-4640-b8d7-c55d2f3f0f87"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_2",
                            ConstantValue = "3550000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3669),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 35
                        },
                        new
                        {
                            Id = new Guid("b47ced54-fa79-4cc3-a4af-f50c5b4bc5cc"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_2",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3673),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 36
                        },
                        new
                        {
                            Id = new Guid("c9d4d46d-75bd-45d4-ab66-1e542b31369c"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_2",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3678),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "ترتیب پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 37
                        },
                        new
                        {
                            Id = new Guid("881eb7f1-00a9-401a-b1fe-04ac812e810f"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_2",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3682),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 38
                        },
                        new
                        {
                            Id = new Guid("943f2de1-f651-42ac-bf51-6a7d302f727d"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_3",
                            ConstantValue = "90",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3685),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 39
                        },
                        new
                        {
                            Id = new Guid("53ed41f4-8f3e-4aea-9cd5-ffcc1dc0b6bf"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_3",
                            ConstantValue = "30000000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3692),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 40
                        },
                        new
                        {
                            Id = new Guid("8f81882c-3c91-4e43-9a5c-4d38a149d950"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_3",
                            ConstantValue = "10000000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3697),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 41
                        },
                        new
                        {
                            Id = new Guid("1c026dd8-2017-4465-b8ea-695bff97fe39"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_3",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3701),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "ترتیب پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 42
                        },
                        new
                        {
                            Id = new Guid("58a4a4e3-ea9a-4457-bdb7-a0d2554411e1"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_3",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(3705),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 43
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Contacts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DiamondUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointCharged")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiamondUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.GraphHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphModeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GraphHistory");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Graphs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectChildCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GrandParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphTypeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstChildOfParent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceivedShared")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ValueInMoney")
                        .HasColumnType("bigint");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f11cd21-7123-4cc7-b8a6-112c36314ae9"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("debe7724-98e5-4d40-bd75-688f167a93ba"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("885bfcf7-15a9-4077-a123-440256940169"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("32c9a924-8378-4bdc-aba1-4b41702034e4"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("27aa78a8-2548-441b-a134-a345f12ff151"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("c15a0ba9-f835-4c3d-b82c-2c6a5606f6c2"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            Cellphone = "09394125130",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2924),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("33586738-999b-40a0-ac8c-fa78315f8511"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 850000L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("33586738-999b-40a0-ac8c-fa78315f8511"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2876),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("c4b6ad2c-2ef7-4223-8182-e6a44368d3e0"),
                            Cellphone = "09111111111",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2929),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user1",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "first",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "firstuser"
                        },
                        new
                        {
                            Id = new Guid("986519c7-2148-43c0-8f9f-1d467ba48a89"),
                            Cellphone = "09122222222",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2950),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user2",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "second",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seconduser"
                        },
                        new
                        {
                            Id = new Guid("c2099b91-8394-4be5-ad6a-8e10d4d5b067"),
                            Cellphone = "09133333333",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2955),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user3",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "third",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "thirduser"
                        },
                        new
                        {
                            Id = new Guid("c407d2f7-62cc-4d39-926a-8395c46ddcfa"),
                            Cellphone = "09144444444",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2960),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user4",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fourth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fourthuser"
                        },
                        new
                        {
                            Id = new Guid("a1a86a35-2b91-48c2-b7d8-96b8558a8e4e"),
                            Cellphone = "09155555555",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2968),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user5",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fivth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fivthuser"
                        },
                        new
                        {
                            Id = new Guid("c85fbc3b-d84d-4bf8-91be-4d297a2770d2"),
                            Cellphone = "09166666666",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2972),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user6",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "sixth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sixthuser"
                        },
                        new
                        {
                            Id = new Guid("6d0c65b1-6d1b-4b1f-b490-ffd77e9fe18e"),
                            Cellphone = "09177777777",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2976),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user7",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "seventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seventhuser"
                        },
                        new
                        {
                            Id = new Guid("2e64646c-21bd-48a9-8c74-950c2cf8ecb1"),
                            Cellphone = "09188888888",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2980),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user8",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eighth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eighthuser"
                        },
                        new
                        {
                            Id = new Guid("f6e0dd87-5f71-44eb-8e98-f6513dbd78d1"),
                            Cellphone = "09199999999",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2984),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user9",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "ninth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "ninthuser"
                        },
                        new
                        {
                            Id = new Guid("569483bb-6cae-4921-9f4c-dbd2f1fbd7d3"),
                            Cellphone = "09100000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2992),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user10",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "tenth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "tenthuser"
                        },
                        new
                        {
                            Id = new Guid("61dafefb-8d95-40c0-a853-2f3b66eaa75b"),
                            Cellphone = "09011000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 7, 6, 49, 52, 722, DateTimeKind.Local).AddTicks(2996),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user11",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eleventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eleventhuser"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b9327f2-d922-4a00-bca5-dadd6d20aa83"),
                            CreatedBy = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a"),
                            IsDeleted = false,
                            Role = new Guid("1f11cd21-7123-4cc7-b8a6-112c36314ae9"),
                            User = new Guid("a25da402-a10e-47bb-8871-29baaf111c7a")
                        },
                        new
                        {
                            Id = new Guid("f4e8f244-14f1-4c97-afcf-bcf87eb49370"),
                            CreatedBy = new Guid("33586738-999b-40a0-ac8c-fa78315f8511"),
                            IsDeleted = false,
                            Role = new Guid("c15a0ba9-f835-4c3d-b82c-2c6a5606f6c2"),
                            User = new Guid("33586738-999b-40a0-ac8c-fa78315f8511")
                        },
                        new
                        {
                            Id = new Guid("dcf1da04-9a69-44d9-84c3-f63c188995a3"),
                            CreatedBy = new Guid("c4b6ad2c-2ef7-4223-8182-e6a44368d3e0"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("c4b6ad2c-2ef7-4223-8182-e6a44368d3e0")
                        },
                        new
                        {
                            Id = new Guid("bab63b6d-0cd4-452d-9638-325315727a03"),
                            CreatedBy = new Guid("986519c7-2148-43c0-8f9f-1d467ba48a89"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("986519c7-2148-43c0-8f9f-1d467ba48a89")
                        },
                        new
                        {
                            Id = new Guid("836f58bb-1664-407a-bcbc-846fe83ba455"),
                            CreatedBy = new Guid("c2099b91-8394-4be5-ad6a-8e10d4d5b067"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("c2099b91-8394-4be5-ad6a-8e10d4d5b067")
                        },
                        new
                        {
                            Id = new Guid("1f095723-b77b-40e6-a398-524c84a812c3"),
                            CreatedBy = new Guid("c407d2f7-62cc-4d39-926a-8395c46ddcfa"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("c407d2f7-62cc-4d39-926a-8395c46ddcfa")
                        },
                        new
                        {
                            Id = new Guid("1f6017f3-5861-41d1-807e-5ec666a95b60"),
                            CreatedBy = new Guid("a1a86a35-2b91-48c2-b7d8-96b8558a8e4e"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("a1a86a35-2b91-48c2-b7d8-96b8558a8e4e")
                        },
                        new
                        {
                            Id = new Guid("ca43bac1-262f-4886-8727-0039ca4b9865"),
                            CreatedBy = new Guid("c85fbc3b-d84d-4bf8-91be-4d297a2770d2"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("c85fbc3b-d84d-4bf8-91be-4d297a2770d2")
                        },
                        new
                        {
                            Id = new Guid("f400d90d-879b-4476-a098-a3199a0c54ca"),
                            CreatedBy = new Guid("6d0c65b1-6d1b-4b1f-b490-ffd77e9fe18e"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("6d0c65b1-6d1b-4b1f-b490-ffd77e9fe18e")
                        },
                        new
                        {
                            Id = new Guid("fce41ead-a1c8-4774-a23d-c2672963bdfb"),
                            CreatedBy = new Guid("2e64646c-21bd-48a9-8c74-950c2cf8ecb1"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("2e64646c-21bd-48a9-8c74-950c2cf8ecb1")
                        },
                        new
                        {
                            Id = new Guid("ee622da5-e01c-44a5-862d-6d311053dcc4"),
                            CreatedBy = new Guid("f6e0dd87-5f71-44eb-8e98-f6513dbd78d1"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("f6e0dd87-5f71-44eb-8e98-f6513dbd78d1")
                        },
                        new
                        {
                            Id = new Guid("32b6a22f-02ec-41f2-a0fc-48f107f708f5"),
                            CreatedBy = new Guid("569483bb-6cae-4921-9f4c-dbd2f1fbd7d3"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("569483bb-6cae-4921-9f4c-dbd2f1fbd7d3")
                        },
                        new
                        {
                            Id = new Guid("2b3dc546-f4dc-4a92-909d-1828a95d25f1"),
                            CreatedBy = new Guid("61dafefb-8d95-40c0-a853-2f3b66eaa75b"),
                            IsDeleted = false,
                            Role = new Guid("9f2b307f-cbff-4ee6-a301-1c4cef8f17be"),
                            User = new Guid("61dafefb-8d95-40c0-a853-2f3b66eaa75b")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
