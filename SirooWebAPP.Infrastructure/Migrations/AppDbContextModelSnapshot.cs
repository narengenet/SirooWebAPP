// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMusic")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChallengeUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChallengeModeIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChallengeUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatBlocks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("fromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("toUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatBlocks");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatMessages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Chips", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Chips");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantSecondValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8fd8b1f7-837f-4029-8629-b1d247559202"),
                            Category = "فروشگاه",
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "0",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3449),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 20
                        },
                        new
                        {
                            Id = new Guid("bde6d9d5-4e7b-412c-94aa-e7dc4aa360f9"),
                            Category = "فروشگاه",
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3454),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر فروشگاه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 21
                        },
                        new
                        {
                            Id = new Guid("e40238bb-7a1f-41d3-80f6-aa222c3ea903"),
                            Category = "فروشگاه",
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3459),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 22
                        },
                        new
                        {
                            Id = new Guid("291fb663-adf7-4966-b2a2-4111a976bb97"),
                            Category = "مالی",
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3509),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 24
                        },
                        new
                        {
                            Id = new Guid("678d23cd-6078-46e4-8dc3-484d9a40674c"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3527),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 28
                        },
                        new
                        {
                            Id = new Guid("12119c98-7888-4d21-ad15-b3d34518d087"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3532),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 29
                        },
                        new
                        {
                            Id = new Guid("183d04d3-a651-4bff-8139-ddc793cb011b"),
                            Category = "فروشگاه",
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3502),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 23
                        },
                        new
                        {
                            Id = new Guid("9d2eb1cd-b6ed-4538-a17c-fb959c15e9f7"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3439),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "امتیاز اولیه برای کاربری که ثبت نام میکند.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 18
                        },
                        new
                        {
                            Id = new Guid("29fd1367-3bdb-4c06-8125-c5aeda317bc6"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3444),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "امتیاز برای معرف وقتی کاربر ثبت نام کرد.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 19
                        },
                        new
                        {
                            Id = new Guid("41ffefae-75dd-441d-941f-ac7c1faa622b"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3424),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 15
                        },
                        new
                        {
                            Id = new Guid("6fba6822-ba13-4a2c-b799-8ca9dcc2973c"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "15",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3429),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 16
                        },
                        new
                        {
                            Id = new Guid("52d016e6-feb0-480e-a28a-37813d7601b8"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_audio_like",
                            ConstantValue = "5",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3434),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "امتیاز پیش فرض برای لایک پست صوتی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 17
                        },
                        new
                        {
                            Id = new Guid("c61c3811-87de-4495-9f5a-5c500da535a1"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3513),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 25
                        },
                        new
                        {
                            Id = new Guid("d60a8c76-3499-4665-9a98-4792931d36d2"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3517),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 26
                        },
                        new
                        {
                            Id = new Guid("2ad6deab-e8a2-4f18-a5ea-c1d98ebaab33"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3522),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 27
                        },
                        new
                        {
                            Id = new Guid("b0383d04-ce7b-4931-87f0-837a0b1f9acf"),
                            Category = "کارت اعتباری",
                            ConstantKey = "def_chips_usage_perday",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3416),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "تعداد استفاده از کارت اعتباری هر کاربر در روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 14
                        },
                        new
                        {
                            Id = new Guid("641df135-7735-4ef8-85f8-274cf979e293"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_video_ads",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3396),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "هزینه درج آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 10
                        },
                        new
                        {
                            Id = new Guid("e08f9c18-7456-48f7-a27e-d70eb32ffa65"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_image_ads",
                            ConstantValue = "200000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3402),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "هزینه درج آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 11
                        },
                        new
                        {
                            Id = new Guid("8e48eaf6-f9ea-4369-b392-698002242df5"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_video_ads",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3407),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 12
                        },
                        new
                        {
                            Id = new Guid("a88a5c61-4b35-4711-93e6-1eb01a908ee7"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_image_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3412),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 13
                        },
                        new
                        {
                            Id = new Guid("97d8d1cf-9cd6-4627-a057-41309097b546"),
                            Category = "گردونه",
                            ConstantKey = "diamond_first_priority",
                            ConstantSecondValue = "50",
                            ConstantValue = "1,5",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3342),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اولویت اول تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 0
                        },
                        new
                        {
                            Id = new Guid("8e574bea-e4d9-4a2b-b673-4a74912770b3"),
                            Category = "گردونه",
                            ConstantKey = "diamond_second_priority",
                            ConstantSecondValue = "20",
                            ConstantValue = "6,10",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3347),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اولویت دوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 1
                        },
                        new
                        {
                            Id = new Guid("14dc2be1-2590-43d8-a0a6-b772d2f42996"),
                            Category = "گردونه",
                            ConstantKey = "diamond_third_priority",
                            ConstantSecondValue = "10",
                            ConstantValue = "11,20",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3353),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اولویت سوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 2
                        },
                        new
                        {
                            Id = new Guid("26f73e82-50ed-448a-a19a-a122373e08af"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fourth_priority",
                            ConstantSecondValue = "6",
                            ConstantValue = "21,30",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3360),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اولویت چهارم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 3
                        },
                        new
                        {
                            Id = new Guid("29e9981f-3212-416a-ab9f-250b1e332cde"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fivth_priority",
                            ConstantSecondValue = "5",
                            ConstantValue = "31,50",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3365),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اولویت پنجم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 4
                        },
                        new
                        {
                            Id = new Guid("2d46af4e-009e-40f4-87dc-832324d5bbfb"),
                            Category = "گردونه",
                            ConstantKey = "diamond_sixth_priority",
                            ConstantSecondValue = "4",
                            ConstantValue = "51,100",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3370),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اولویت ششم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 5
                        },
                        new
                        {
                            Id = new Guid("1a270aef-7c38-4b7d-9ec7-29184a021d61"),
                            Category = "گردونه",
                            ConstantKey = "diamond_seventh_priority",
                            ConstantSecondValue = "3",
                            ConstantValue = "101,200",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3374),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اولویت هفتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 6
                        },
                        new
                        {
                            Id = new Guid("1af21419-31b3-480e-b55b-b681967e1104"),
                            Category = "گردونه",
                            ConstantKey = "diamond_eighth_priority",
                            ConstantSecondValue = "2",
                            ConstantValue = "201,300",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3382),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "اولویت هشتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 7
                        },
                        new
                        {
                            Id = new Guid("4812e93e-829e-40ad-bf1b-ae0d769dc64d"),
                            Category = "گردونه",
                            ConstantKey = "diamond_nineth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "301,500",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3387),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "امتیاز نهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 8
                        },
                        new
                        {
                            Id = new Guid("8019bdd7-9b47-42a0-8862-8c42569b590a"),
                            Category = "گردونه",
                            ConstantKey = "diamond_tenth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "999,1000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3391),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "امتیاز دهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 9
                        },
                        new
                        {
                            Id = new Guid("4c95a862-7d09-4c74-a61b-022d8d4e3e01"),
                            Category = "گردونه",
                            ConstantKey = "min_points_to_spin_diamond_wheel",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3322),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "حداقل امتیاز برای چرخاندن گردونه شانس الماس بار اول",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -2
                        },
                        new
                        {
                            Id = new Guid("a1b9e56e-2014-4d6e-b7c1-d3c7bad71a63"),
                            Category = "گردونه",
                            ConstantKey = "added_points_to_each_spin_diamond_wheel_after_first_time",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3336),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "افزایش تعداد امتیاز به اضای هر بار چرخاندن گردونه شانس در یک روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -1
                        },
                        new
                        {
                            Id = new Guid("7d7f5790-c52d-4c94-be9d-835cfa30892d"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_1",
                            ConstantValue = "30",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3537),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 30
                        },
                        new
                        {
                            Id = new Guid("0fab8140-d5a6-46b6-b10e-76c484ed4c2b"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_1",
                            ConstantValue = "300000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3546),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 31
                        },
                        new
                        {
                            Id = new Guid("dff474d2-8c7c-4016-98d0-c986871517b1"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_1",
                            ConstantValue = "100000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3551),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 32
                        },
                        new
                        {
                            Id = new Guid("67fe430e-a290-4df3-b88e-4de1b25bddfb"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_1",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3555),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "ترتیب پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 33
                        },
                        new
                        {
                            Id = new Guid("34fecdf8-66c8-41fd-8326-d7970d6de544"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_1",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3560),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 34
                        },
                        new
                        {
                            Id = new Guid("adbf4b23-fed5-4f3e-b4f5-c4da19e7d321"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_1",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3564),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "تعداد روزهای آگهی تجاری نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 35
                        },
                        new
                        {
                            Id = new Guid("90a5f1f9-5ed7-4beb-9c76-923deef7472e"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_2",
                            ConstantValue = "60",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3570),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 36
                        },
                        new
                        {
                            Id = new Guid("bc5630e5-83f2-429a-99c2-7a0e33dac03c"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_2",
                            ConstantValue = "3550000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3575),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 37
                        },
                        new
                        {
                            Id = new Guid("d92c57cc-211f-4e57-ba75-d05ecde8b44c"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_2",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3579),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 38
                        },
                        new
                        {
                            Id = new Guid("495e4152-80cf-4b9c-845f-003d6333fd2a"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_2",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3586),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "ترتیب پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 39
                        },
                        new
                        {
                            Id = new Guid("ebbc96e0-b88b-460f-a15c-6f58c8ea82d7"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_2",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3590),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 40
                        },
                        new
                        {
                            Id = new Guid("acfc3bb4-6c2c-45fa-8a61-60c306d78a7c"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_2",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3595),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "تعداد روزهای آگهی تجاری نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 41
                        },
                        new
                        {
                            Id = new Guid("390541c2-151d-4c5e-8ccb-648125dbc0c9"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_3",
                            ConstantValue = "90",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3599),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 42
                        },
                        new
                        {
                            Id = new Guid("664d5737-26bc-4b4e-a458-24be2bd55bd0"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_3",
                            ConstantValue = "30000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3604),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 43
                        },
                        new
                        {
                            Id = new Guid("890756b2-51f9-47e3-a599-dd94793d353f"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_3",
                            ConstantValue = "10000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3608),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 44
                        },
                        new
                        {
                            Id = new Guid("d1f31406-c8a6-40a4-8f49-1a2ff1de5524"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_3",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3614),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "ترتیب پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 45
                        },
                        new
                        {
                            Id = new Guid("4750fb60-ccf9-4896-a0c0-1b951992c3e6"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_3",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3618),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 46
                        },
                        new
                        {
                            Id = new Guid("0ed3fa47-894e-45c8-8868-e2361807d1de"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_3",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3626),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "تعداد روزهای آگهی تجاری نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 47
                        },
                        new
                        {
                            Id = new Guid("f5b18abe-c071-46dc-be0c-da920c903a22"),
                            Category = "بیمه",
                            ConstantKey = "money_needed_to_attend_in_insurance",
                            ConstantValue = "12000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3630),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "موجودی ریالی برای خرید پکیج بیمه حوادث انفرادی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 48
                        },
                        new
                        {
                            Id = new Guid("ab992e80-37e4-4a4d-a1f4-c9876fd9684c"),
                            Category = "بیمه",
                            ConstantKey = "prize_marketer_to_invite_in_insurance",
                            ConstantValue = "2000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3634),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "پورسانت بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 49
                        },
                        new
                        {
                            Id = new Guid("ab5e52fb-b8fe-4ddc-b5c3-c1e04696854b"),
                            Category = "بیمه",
                            ConstantKey = "prize_zoneadmin_to_invite_in_insurance",
                            ConstantValue = "2000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3639),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "پورسانت مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 50
                        },
                        new
                        {
                            Id = new Guid("d791e1ea-3fce-4e05-93ae-e30ad2f71a83"),
                            Category = "بیمه",
                            ConstantKey = "money_needed_to_attend_in_insurance2",
                            ConstantValue = "25000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3643),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "موجودی ریالی برای خرید پکیج تخفیف بیمه‌ای و ثبت نام وام مهرامید",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 51
                        },
                        new
                        {
                            Id = new Guid("dcc35aef-5441-49fd-b809-de96247082d4"),
                            Category = "بیمه",
                            ConstantKey = "prize_marketer_to_invite_in_insurance2",
                            ConstantValue = "4000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3647),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "پورسانت بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 52
                        },
                        new
                        {
                            Id = new Guid("aa4403d0-3e66-4f23-a75d-2fe174cb2361"),
                            Category = "بیمه",
                            ConstantKey = "prize_zoneadmin_to_invite_in_insurance2",
                            ConstantValue = "4000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3653),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "پورسانت مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 53
                        },
                        new
                        {
                            Id = new Guid("e6ac9973-004d-4d77-a021-1a75edf97c47"),
                            Category = "بیمه",
                            ConstantKey = "money_needed_to_attend_in_insurance3",
                            ConstantValue = "60000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3658),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "موجودی ریالی برای خرید پکیج تخفیف لوازم خانگی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 54
                        },
                        new
                        {
                            Id = new Guid("da051bb8-ad34-4f5e-a19e-afaca31eb7a0"),
                            Category = "بیمه",
                            ConstantKey = "prize_marketer_to_invite_in_insurance3",
                            ConstantValue = "4000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3665),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "پورسانت بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 55
                        },
                        new
                        {
                            Id = new Guid("e14eb730-d5b6-48c1-a567-677519291f86"),
                            Category = "بیمه",
                            ConstantKey = "prize_zoneadmin_to_invite_in_insurance3",
                            ConstantValue = "4000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3669),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "پورسانت مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 56
                        },
                        new
                        {
                            Id = new Guid("04cae77b-19fe-4aa5-a096-606771f36839"),
                            Category = "بیمه",
                            ConstantKey = "money_needed_to_attend_in_insurance4",
                            ConstantValue = "50000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3674),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "موجودی ریالی برای خرید پکیج 100 میلیونی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 57
                        },
                        new
                        {
                            Id = new Guid("59956551-de70-49ff-9cc0-1ddab9249270"),
                            Category = "بیمه",
                            ConstantKey = "prize_marketer_to_invite_in_insurance4",
                            ConstantValue = "4000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3678),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "پورسانت بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 58
                        },
                        new
                        {
                            Id = new Guid("f59f11c0-a06d-467e-be71-825a42957bab"),
                            Category = "بیمه",
                            ConstantKey = "prize_zoneadmin_to_invite_in_insurance4",
                            ConstantValue = "4000000",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(3683),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Description = "پورسانت مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 59
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Contacts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DiamondUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointCharged")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiamondUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Followers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FollowPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FollowedPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.GraphHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphModeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GraphHistory");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Graphs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectChildCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GrandParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphTypeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstChildOfParent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceivedShared")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceFourthUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ThePolicy")
                        .HasColumnType("bit");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceFourthUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceSecondUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNamePerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ThePolicy")
                        .HasColumnType("bit");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceSecondUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceThirdUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ThePolicy")
                        .HasColumnType("bit");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceThirdUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FatherIsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("IssuePlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryServiceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MotherIsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ValueInMoney")
                        .HasColumnType("bigint");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d69c593-90cd-451f-9153-6d2c14c24b39"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("e0ef1624-1b26-47b6-bd4f-d4ae0e500845"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("bb068be9-9f95-4f6f-b5bd-73a0256855d9"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("b649b467-1e50-4688-b0ee-03744eba772d"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("3f552725-7bd5-455a-8bab-5c3ae6ed8e29"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("94337b9f-795f-481e-8c09-5370cdfcfc68"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasNewMessage")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ShowMyFullNameInPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            Cellphone = "09394125130",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2540),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("9eda3548-8b59-4652-8fb2-1462a4d6e908"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 850000L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("9eda3548-8b59-4652-8fb2-1462a4d6e908"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2490),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("3eba2d3c-fe1a-422c-bf03-9020d5dbf4b8"),
                            Cellphone = "09111111111",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2612),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user1",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "first",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "firstuser"
                        },
                        new
                        {
                            Id = new Guid("c864bb8a-5d72-4f8a-bb42-86b3eb241678"),
                            Cellphone = "09122222222",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2621),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user2",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "second",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seconduser"
                        },
                        new
                        {
                            Id = new Guid("34627b58-b47a-40af-bab6-bf21facc80c4"),
                            Cellphone = "09133333333",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2626),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user3",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "third",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "thirduser"
                        },
                        new
                        {
                            Id = new Guid("c115d9e9-1955-4d13-8428-54854cb63ee4"),
                            Cellphone = "09144444444",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2631),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user4",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fourth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fourthuser"
                        },
                        new
                        {
                            Id = new Guid("b2d3a024-78ee-4798-87bc-a4ef2a3cb4e7"),
                            Cellphone = "09155555555",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2638),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user5",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fivth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fivthuser"
                        },
                        new
                        {
                            Id = new Guid("d3b587fb-383c-43f7-b026-6b47f2bd3920"),
                            Cellphone = "09166666666",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2643),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user6",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "sixth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sixthuser"
                        },
                        new
                        {
                            Id = new Guid("27ec2277-ab55-48e0-b66f-762a9cc2d9c6"),
                            Cellphone = "09177777777",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2648),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user7",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "seventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seventhuser"
                        },
                        new
                        {
                            Id = new Guid("5f7b2cab-5b64-45d7-b886-f2cd97d9200c"),
                            Cellphone = "09188888888",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2653),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user8",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eighth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eighthuser"
                        },
                        new
                        {
                            Id = new Guid("e9fbe090-38f7-4358-a2b7-a14793675a81"),
                            Cellphone = "09199999999",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2662),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user9",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "ninth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "ninthuser"
                        },
                        new
                        {
                            Id = new Guid("b2aa3ea6-6438-4695-8107-6712995cc5c5"),
                            Cellphone = "09100000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2666),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user10",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "tenth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "tenthuser"
                        },
                        new
                        {
                            Id = new Guid("25cbd0dc-85c6-4b1c-a5e2-ef23ac2a0505"),
                            Cellphone = "09011000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 10, 30, 23, 33, 40, 617, DateTimeKind.Local).AddTicks(2671),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user11",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eleventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eleventhuser"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17be6ab8-fb68-486b-97bd-12508c430271"),
                            CreatedBy = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415"),
                            IsDeleted = false,
                            Role = new Guid("4d69c593-90cd-451f-9153-6d2c14c24b39"),
                            User = new Guid("d6aff5fa-9f0e-49fc-8ebf-ea438e201415")
                        },
                        new
                        {
                            Id = new Guid("6c0c9b5c-8574-433c-8437-6da89ffba458"),
                            CreatedBy = new Guid("9eda3548-8b59-4652-8fb2-1462a4d6e908"),
                            IsDeleted = false,
                            Role = new Guid("94337b9f-795f-481e-8c09-5370cdfcfc68"),
                            User = new Guid("9eda3548-8b59-4652-8fb2-1462a4d6e908")
                        },
                        new
                        {
                            Id = new Guid("8dec7602-a500-4a5d-93ae-e27b32ac6c31"),
                            CreatedBy = new Guid("3eba2d3c-fe1a-422c-bf03-9020d5dbf4b8"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("3eba2d3c-fe1a-422c-bf03-9020d5dbf4b8")
                        },
                        new
                        {
                            Id = new Guid("14df387a-0475-4638-ace4-a6f56c4d1ce0"),
                            CreatedBy = new Guid("c864bb8a-5d72-4f8a-bb42-86b3eb241678"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("c864bb8a-5d72-4f8a-bb42-86b3eb241678")
                        },
                        new
                        {
                            Id = new Guid("6619bcb5-dd34-468d-b677-b2d85438f848"),
                            CreatedBy = new Guid("34627b58-b47a-40af-bab6-bf21facc80c4"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("34627b58-b47a-40af-bab6-bf21facc80c4")
                        },
                        new
                        {
                            Id = new Guid("547697d8-bd5e-4d44-9fa9-d1104fc699eb"),
                            CreatedBy = new Guid("c115d9e9-1955-4d13-8428-54854cb63ee4"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("c115d9e9-1955-4d13-8428-54854cb63ee4")
                        },
                        new
                        {
                            Id = new Guid("87192df3-6cf9-4985-88b3-83b3df8a332b"),
                            CreatedBy = new Guid("b2d3a024-78ee-4798-87bc-a4ef2a3cb4e7"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("b2d3a024-78ee-4798-87bc-a4ef2a3cb4e7")
                        },
                        new
                        {
                            Id = new Guid("d3adf470-c218-4638-8bfa-d480ad9646dc"),
                            CreatedBy = new Guid("d3b587fb-383c-43f7-b026-6b47f2bd3920"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("d3b587fb-383c-43f7-b026-6b47f2bd3920")
                        },
                        new
                        {
                            Id = new Guid("eb647970-47aa-4e19-8833-985bf38a79e9"),
                            CreatedBy = new Guid("27ec2277-ab55-48e0-b66f-762a9cc2d9c6"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("27ec2277-ab55-48e0-b66f-762a9cc2d9c6")
                        },
                        new
                        {
                            Id = new Guid("7a19a940-a7a1-413a-a422-dcb5fcdc06bd"),
                            CreatedBy = new Guid("5f7b2cab-5b64-45d7-b886-f2cd97d9200c"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("5f7b2cab-5b64-45d7-b886-f2cd97d9200c")
                        },
                        new
                        {
                            Id = new Guid("60f8fe3a-113d-44c6-911a-0eb6c24dfaf5"),
                            CreatedBy = new Guid("e9fbe090-38f7-4358-a2b7-a14793675a81"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("e9fbe090-38f7-4358-a2b7-a14793675a81")
                        },
                        new
                        {
                            Id = new Guid("15f928cc-0b9d-4da7-a6c2-0e1b1872d902"),
                            CreatedBy = new Guid("b2aa3ea6-6438-4695-8107-6712995cc5c5"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("b2aa3ea6-6438-4695-8107-6712995cc5c5")
                        },
                        new
                        {
                            Id = new Guid("f973e7b5-7c2e-42bb-be0b-7119aad6a1a8"),
                            CreatedBy = new Guid("25cbd0dc-85c6-4b1c-a5e2-ef23ac2a0505"),
                            IsDeleted = false,
                            Role = new Guid("6ba1d644-f5fc-497d-9d54-6a086aa1e766"),
                            User = new Guid("25cbd0dc-85c6-4b1c-a5e2-ef23ac2a0505")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
