// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChallengeUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChallengeUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Chips", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Chips");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantSecondValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5bb74fa3-6777-4136-b978-eda17ad4adee"),
                            Category = "فروشگاه",
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "0",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4955),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 19
                        },
                        new
                        {
                            Id = new Guid("b83b0b5b-ae00-4275-b577-3d1255aa4575"),
                            Category = "فروشگاه",
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4961),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر فروشگاه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 20
                        },
                        new
                        {
                            Id = new Guid("55238907-95a7-44b0-84d4-d4feb5a01dec"),
                            Category = "فروشگاه",
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4965),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 21
                        },
                        new
                        {
                            Id = new Guid("aa240ad1-fbc6-40ed-bd7d-9bb402d621bb"),
                            Category = "مالی",
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4975),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 23
                        },
                        new
                        {
                            Id = new Guid("0a4b4be6-ea46-467b-a577-60853dea980d"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4991),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 27
                        },
                        new
                        {
                            Id = new Guid("749492f0-3a87-4979-bb11-016ae146b127"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4996),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 28
                        },
                        new
                        {
                            Id = new Guid("235a5b89-a635-4343-b53a-cc5f83bfb58d"),
                            Category = "فروشگاه",
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4969),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 22
                        },
                        new
                        {
                            Id = new Guid("1e5f8db3-5cbb-4115-949b-437cebaafc5d"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4947),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "امتیاز اولیه برای کاربری که ثبت نام میکند.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 17
                        },
                        new
                        {
                            Id = new Guid("99202849-15ab-4a62-a45d-b4ce11ab4864"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4951),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "امتیاز برای معرف وقتی کاربر ثبت نام کرد.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 18
                        },
                        new
                        {
                            Id = new Guid("78791b54-ec46-4ec2-8300-c4e75bd919ef"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4939),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 15
                        },
                        new
                        {
                            Id = new Guid("00150ca1-ff2b-46a1-bfa1-9c6bf3006362"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "15",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4943),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 16
                        },
                        new
                        {
                            Id = new Guid("2f5011fc-6597-48a0-8070-288946db8bc7"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4979),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 24
                        },
                        new
                        {
                            Id = new Guid("f41addef-fd14-40d2-b045-21276fd6fc10"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4983),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 25
                        },
                        new
                        {
                            Id = new Guid("d50039f4-8a96-4426-ad5a-743e97a18383"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4987),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 26
                        },
                        new
                        {
                            Id = new Guid("5b7895dd-d343-48b7-b5d2-bad0e742ebc2"),
                            Category = "کارت اعتباری",
                            ConstantKey = "def_chips_usage_perday",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4931),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "تعداد استفاده از کارت اعتباری هر کاربر در روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 14
                        },
                        new
                        {
                            Id = new Guid("2572fa62-1fd5-4c80-92d8-8163bb79f6de"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_video_ads",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4915),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "هزینه درج آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 10
                        },
                        new
                        {
                            Id = new Guid("3c43e4fa-9ca4-4fc8-b126-d8b9456c5597"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_image_ads",
                            ConstantValue = "200000",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4919),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "هزینه درج آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 11
                        },
                        new
                        {
                            Id = new Guid("23029da2-741f-4aa2-a6f5-d1554327f660"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_video_ads",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4924),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 12
                        },
                        new
                        {
                            Id = new Guid("93c48cc2-1fb6-45c0-95d4-58352cdc322c"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_image_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4928),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 13
                        },
                        new
                        {
                            Id = new Guid("f5bd28e6-81e6-4ca4-b851-9f7d04fb7b04"),
                            Category = "گردونه",
                            ConstantKey = "diamond_first_priority",
                            ConstantSecondValue = "50",
                            ConstantValue = "1,5",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4871),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اولویت اول تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 0
                        },
                        new
                        {
                            Id = new Guid("eeb02aaa-a0de-416e-a20d-c5abaafe7151"),
                            Category = "گردونه",
                            ConstantKey = "diamond_second_priority",
                            ConstantSecondValue = "20",
                            ConstantValue = "6,10",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4875),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اولویت دوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 1
                        },
                        new
                        {
                            Id = new Guid("1c48d4a7-ea4a-4e02-8c15-915fd8549d31"),
                            Category = "گردونه",
                            ConstantKey = "diamond_third_priority",
                            ConstantSecondValue = "10",
                            ConstantValue = "11,20",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4879),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اولویت سوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 2
                        },
                        new
                        {
                            Id = new Guid("fd376dd6-8578-4013-b246-8e0c5f771d44"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fourth_priority",
                            ConstantSecondValue = "6",
                            ConstantValue = "21,30",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4884),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اولویت چهارم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 3
                        },
                        new
                        {
                            Id = new Guid("f2f78ef5-0ff7-4864-96c4-838dbf56e5a6"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fivth_priority",
                            ConstantSecondValue = "5",
                            ConstantValue = "31,50",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4889),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اولویت پنجم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 4
                        },
                        new
                        {
                            Id = new Guid("f6364673-bd1f-43b5-8e7c-38cf9fdf0bf8"),
                            Category = "گردونه",
                            ConstantKey = "diamond_sixth_priority",
                            ConstantSecondValue = "4",
                            ConstantValue = "51,100",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4892),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اولویت ششم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 5
                        },
                        new
                        {
                            Id = new Guid("bcc8a984-61c4-42a8-963c-b4c8a477c6bd"),
                            Category = "گردونه",
                            ConstantKey = "diamond_seventh_priority",
                            ConstantSecondValue = "3",
                            ConstantValue = "101,200",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4896),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اولویت هفتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 6
                        },
                        new
                        {
                            Id = new Guid("a79ffb6b-d42b-47b4-b2ac-c9ee3c3f91c2"),
                            Category = "گردونه",
                            ConstantKey = "diamond_eighth_priority",
                            ConstantSecondValue = "2",
                            ConstantValue = "201,300",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4903),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "اولویت هشتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 7
                        },
                        new
                        {
                            Id = new Guid("1814e336-287a-4076-8cbc-d745508eca92"),
                            Category = "گردونه",
                            ConstantKey = "diamond_nineth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "301,500",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4907),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "امتیاز نهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 8
                        },
                        new
                        {
                            Id = new Guid("0745d6d6-cb67-469c-b4e6-3da440c89928"),
                            Category = "گردونه",
                            ConstantKey = "diamond_tenth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "999,1000",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4911),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "امتیاز دهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 9
                        },
                        new
                        {
                            Id = new Guid("06de7ae6-29bc-402f-920b-eb60299b5381"),
                            Category = "گردونه",
                            ConstantKey = "min_points_to_spin_diamond_wheel",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4853),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "حداقل امتیاز برای چرخاندن گردونه شانس الماس بار اول",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -2
                        },
                        new
                        {
                            Id = new Guid("a1e6d0fd-1401-45a2-9bce-c1eeced6db65"),
                            Category = "گردونه",
                            ConstantKey = "added_points_to_each_spin_diamond_wheel_after_first_time",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4866),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "افزایش تعداد امتیاز به اضای هر بار چرخاندن گردونه شانس در یک روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -1
                        },
                        new
                        {
                            Id = new Guid("62dd3f6d-1ae7-41b6-a367-ee1ebac77c83"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge",
                            ConstantValue = "60",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(5000),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "تعداد روزهای مجاز برای چالش",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 29
                        },
                        new
                        {
                            Id = new Guid("f0b2947e-17d3-43d7-babc-5b9a296ae425"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge",
                            ConstantValue = "3000000",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(5004),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "موجودی ریالی برای شرکت در چالش",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 30
                        },
                        new
                        {
                            Id = new Guid("f4f40d0a-f9aa-45ef-8bf8-2769010a3116"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(5011),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Description = "کارمزد برای معرفی کاربران به چالش",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 31
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Contacts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DiamondUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointCharged")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiamondUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.GraphHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GraphHistory");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Graphs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectChildCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GrandParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstChildOfParent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceivedShared")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ValueInMoney")
                        .HasColumnType("bigint");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4291f9d3-5913-4cf5-8e02-26b87c67c5e3"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("5e3b432a-6c42-40a3-96b2-0ccb382f90e7"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("7cc6a60d-0609-4666-beaa-92906e7cccee"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("48cc195a-56b1-4ae2-a475-62ecf0e39a2b"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("39bd0665-7e4f-42d2-834a-bcc240e2b2f0"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("7be13644-6f1e-484c-b4e8-136be4383fe5"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            Cellphone = "09394125130",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4211),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("8921f715-2371-4e71-81a3-277e991c9248"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 850000L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("8921f715-2371-4e71-81a3-277e991c9248"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4165),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("b6bdec28-db74-41e0-bc1e-679a286d9fd0"),
                            Cellphone = "09111111111",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4217),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user1",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "first",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "firstuser"
                        },
                        new
                        {
                            Id = new Guid("b0d9835d-3abd-4e57-8e38-12037a01552b"),
                            Cellphone = "09122222222",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4221),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user2",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "second",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seconduser"
                        },
                        new
                        {
                            Id = new Guid("7e7ff426-9f70-44b3-80de-d8582b0ee2d1"),
                            Cellphone = "09133333333",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4227),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user3",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "third",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "thirduser"
                        },
                        new
                        {
                            Id = new Guid("39716961-f090-4b8c-ba20-399263be51ae"),
                            Cellphone = "09144444444",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4232),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user4",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fourth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fourthuser"
                        },
                        new
                        {
                            Id = new Guid("c71dcf26-909e-46e1-a1c6-7778659d8017"),
                            Cellphone = "09155555555",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4236),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user5",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fivth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fivthuser"
                        },
                        new
                        {
                            Id = new Guid("b1e3248b-6991-4b2e-8066-7347def49379"),
                            Cellphone = "09166666666",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4240),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user6",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "sixth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sixthuser"
                        },
                        new
                        {
                            Id = new Guid("3e6a839c-7f29-4772-a80b-b3116c9bf3aa"),
                            Cellphone = "09177777777",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4247),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user7",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "seventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seventhuser"
                        },
                        new
                        {
                            Id = new Guid("51cc972c-4530-41dc-89ac-0ca06fce6e55"),
                            Cellphone = "09188888888",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4252),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user8",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eighth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eighthuser"
                        },
                        new
                        {
                            Id = new Guid("d15df198-3765-4760-ae6f-cf3db29a7801"),
                            Cellphone = "09199999999",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4255),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user9",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "ninth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "ninthuser"
                        },
                        new
                        {
                            Id = new Guid("f739df4b-7fd5-4760-a96e-9647cb6fb028"),
                            Cellphone = "09100000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 1, 25, 1, 19, 41, 641, DateTimeKind.Local).AddTicks(4260),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user10",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "tenth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "tenthuser"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("979ddde5-c063-4848-af82-2c0817798bf4"),
                            CreatedBy = new Guid("910e199c-0fcf-41fa-b312-359791c6465e"),
                            IsDeleted = false,
                            Role = new Guid("4291f9d3-5913-4cf5-8e02-26b87c67c5e3"),
                            User = new Guid("910e199c-0fcf-41fa-b312-359791c6465e")
                        },
                        new
                        {
                            Id = new Guid("550fb3fd-bcbf-4f0e-a0b6-681890dc0545"),
                            CreatedBy = new Guid("8921f715-2371-4e71-81a3-277e991c9248"),
                            IsDeleted = false,
                            Role = new Guid("7be13644-6f1e-484c-b4e8-136be4383fe5"),
                            User = new Guid("8921f715-2371-4e71-81a3-277e991c9248")
                        },
                        new
                        {
                            Id = new Guid("6f5ac3fe-e08b-41ba-a24c-26f6de255044"),
                            CreatedBy = new Guid("b6bdec28-db74-41e0-bc1e-679a286d9fd0"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("b6bdec28-db74-41e0-bc1e-679a286d9fd0")
                        },
                        new
                        {
                            Id = new Guid("183c67d0-5cb3-4ead-b7a7-918e54db0ee7"),
                            CreatedBy = new Guid("b0d9835d-3abd-4e57-8e38-12037a01552b"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("b0d9835d-3abd-4e57-8e38-12037a01552b")
                        },
                        new
                        {
                            Id = new Guid("f6f5901f-135c-4aa9-b0f8-3c3d385ffb5e"),
                            CreatedBy = new Guid("7e7ff426-9f70-44b3-80de-d8582b0ee2d1"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("7e7ff426-9f70-44b3-80de-d8582b0ee2d1")
                        },
                        new
                        {
                            Id = new Guid("ad034e1b-81ec-4ba8-ac38-e2261d996c8a"),
                            CreatedBy = new Guid("39716961-f090-4b8c-ba20-399263be51ae"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("39716961-f090-4b8c-ba20-399263be51ae")
                        },
                        new
                        {
                            Id = new Guid("682bbb5e-ee54-422e-bad1-9a4cfc160d6d"),
                            CreatedBy = new Guid("c71dcf26-909e-46e1-a1c6-7778659d8017"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("c71dcf26-909e-46e1-a1c6-7778659d8017")
                        },
                        new
                        {
                            Id = new Guid("2f935020-c8e4-4e33-839c-d15183e3c403"),
                            CreatedBy = new Guid("b1e3248b-6991-4b2e-8066-7347def49379"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("b1e3248b-6991-4b2e-8066-7347def49379")
                        },
                        new
                        {
                            Id = new Guid("4c47484d-3513-4298-8c3d-b45f73456bc7"),
                            CreatedBy = new Guid("3e6a839c-7f29-4772-a80b-b3116c9bf3aa"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("3e6a839c-7f29-4772-a80b-b3116c9bf3aa")
                        },
                        new
                        {
                            Id = new Guid("df20e8bc-e251-4c90-8700-a330f1820bb0"),
                            CreatedBy = new Guid("51cc972c-4530-41dc-89ac-0ca06fce6e55"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("51cc972c-4530-41dc-89ac-0ca06fce6e55")
                        },
                        new
                        {
                            Id = new Guid("a02de0c0-3851-4cc8-b690-0c4a32a52bfd"),
                            CreatedBy = new Guid("d15df198-3765-4760-ae6f-cf3db29a7801"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("d15df198-3765-4760-ae6f-cf3db29a7801")
                        },
                        new
                        {
                            Id = new Guid("34ce1817-472d-4e59-9011-93e39d33cfe5"),
                            CreatedBy = new Guid("f739df4b-7fd5-4760-a96e-9647cb6fb028"),
                            IsDeleted = false,
                            Role = new Guid("6f0f80d0-6561-4bff-92bc-877ef39e1754"),
                            User = new Guid("f739df4b-7fd5-4760-a96e-9647cb6fb028")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
