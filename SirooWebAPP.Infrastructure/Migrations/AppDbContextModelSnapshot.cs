// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChallengeUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChallengeModeIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChallengeUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatBlocks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("fromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("toUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatBlocks");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatMessages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Chips", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Chips");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantSecondValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9299aa6d-7bc4-4a99-b949-26c86b099784"),
                            Category = "فروشگاه",
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "0",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2043),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 19
                        },
                        new
                        {
                            Id = new Guid("b06bfbb6-2113-45f9-b832-caa199fdb99d"),
                            Category = "فروشگاه",
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2047),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر فروشگاه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 20
                        },
                        new
                        {
                            Id = new Guid("985e4845-9ebb-438e-aaa7-2b272e17096b"),
                            Category = "فروشگاه",
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2053),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 21
                        },
                        new
                        {
                            Id = new Guid("c488bb42-eb9a-4558-85c1-8ffe22fa427f"),
                            Category = "مالی",
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2061),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 23
                        },
                        new
                        {
                            Id = new Guid("ff5523c7-bded-4538-ae2f-40fd18ce8773"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2154),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 27
                        },
                        new
                        {
                            Id = new Guid("5a868004-c58d-460d-8b81-86fae215b842"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2160),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 28
                        },
                        new
                        {
                            Id = new Guid("ff6dbf6f-6efc-4060-934c-5c9c93c6fc16"),
                            Category = "فروشگاه",
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2057),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 22
                        },
                        new
                        {
                            Id = new Guid("cb9edea5-13d0-4f7b-b70d-5e156a3e617a"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2035),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "امتیاز اولیه برای کاربری که ثبت نام میکند.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 17
                        },
                        new
                        {
                            Id = new Guid("31eb2862-03fb-4c18-93e3-c0d8713ecbfd"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2039),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "امتیاز برای معرف وقتی کاربر ثبت نام کرد.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 18
                        },
                        new
                        {
                            Id = new Guid("463f4106-c184-4a90-a44b-f0b2fc89002a"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2026),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 15
                        },
                        new
                        {
                            Id = new Guid("fc8e6dc6-f726-4771-a91c-ebf8ff6f7f2f"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "15",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2030),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 16
                        },
                        new
                        {
                            Id = new Guid("a13e89bd-1fb3-40e9-82a5-3dad0070ce41"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2065),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 24
                        },
                        new
                        {
                            Id = new Guid("e3010dbf-4a4f-449d-bb4d-c46d24057d5e"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2069),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 25
                        },
                        new
                        {
                            Id = new Guid("1aa6580d-0d9d-44b0-b32f-bef249ee6ba9"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2074),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 26
                        },
                        new
                        {
                            Id = new Guid("1242ac82-11d9-451a-847d-e8e3c280f4dc"),
                            Category = "کارت اعتباری",
                            ConstantKey = "def_chips_usage_perday",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2022),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "تعداد استفاده از کارت اعتباری هر کاربر در روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 14
                        },
                        new
                        {
                            Id = new Guid("7eac0613-f25e-4c75-8167-c288d8e89b54"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_video_ads",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2004),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "هزینه درج آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 10
                        },
                        new
                        {
                            Id = new Guid("1bb2c154-58e4-46a2-90e7-4d029bfc1158"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_image_ads",
                            ConstantValue = "200000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2008),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "هزینه درج آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 11
                        },
                        new
                        {
                            Id = new Guid("c3736f23-3e24-4244-bb3e-8201d953c8b3"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_video_ads",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2012),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 12
                        },
                        new
                        {
                            Id = new Guid("4b5f6460-e6b9-4592-b3f0-98fc8f706e77"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_image_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2019),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 13
                        },
                        new
                        {
                            Id = new Guid("3252755d-4f8f-4e56-aea5-69e2c36f19cb"),
                            Category = "گردونه",
                            ConstantKey = "diamond_first_priority",
                            ConstantSecondValue = "50",
                            ConstantValue = "1,5",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1960),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اولویت اول تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 0
                        },
                        new
                        {
                            Id = new Guid("73149548-e9e4-48e5-96dd-7b5373ac069a"),
                            Category = "گردونه",
                            ConstantKey = "diamond_second_priority",
                            ConstantSecondValue = "20",
                            ConstantValue = "6,10",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1965),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اولویت دوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 1
                        },
                        new
                        {
                            Id = new Guid("7d41e2a1-ee7b-4585-a26f-b4d217b1d860"),
                            Category = "گردونه",
                            ConstantKey = "diamond_third_priority",
                            ConstantSecondValue = "10",
                            ConstantValue = "11,20",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1969),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اولویت سوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 2
                        },
                        new
                        {
                            Id = new Guid("aa418eeb-608f-4f33-9fb5-069110ec941b"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fourth_priority",
                            ConstantSecondValue = "6",
                            ConstantValue = "21,30",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1973),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اولویت چهارم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 3
                        },
                        new
                        {
                            Id = new Guid("ba36b348-a9e1-4364-a03f-890fb38b04ae"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fivth_priority",
                            ConstantSecondValue = "5",
                            ConstantValue = "31,50",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1977),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اولویت پنجم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 4
                        },
                        new
                        {
                            Id = new Guid("a82caf00-4099-4b0d-8aab-8a5bd3f754f1"),
                            Category = "گردونه",
                            ConstantKey = "diamond_sixth_priority",
                            ConstantSecondValue = "4",
                            ConstantValue = "51,100",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1984),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اولویت ششم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 5
                        },
                        new
                        {
                            Id = new Guid("6c6735d5-9a67-44e5-a897-8e30d601c9ed"),
                            Category = "گردونه",
                            ConstantKey = "diamond_seventh_priority",
                            ConstantSecondValue = "3",
                            ConstantValue = "101,200",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1988),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اولویت هفتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 6
                        },
                        new
                        {
                            Id = new Guid("12f2057e-3b0b-4d86-a1a1-808ab06a514f"),
                            Category = "گردونه",
                            ConstantKey = "diamond_eighth_priority",
                            ConstantSecondValue = "2",
                            ConstantValue = "201,300",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1992),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "اولویت هشتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 7
                        },
                        new
                        {
                            Id = new Guid("a185c101-8af1-4cf5-bb72-644b8e67b2e2"),
                            Category = "گردونه",
                            ConstantKey = "diamond_nineth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "301,500",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1995),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "امتیاز نهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 8
                        },
                        new
                        {
                            Id = new Guid("35e984cd-adda-47ae-bc9c-bd9e9c95cfe5"),
                            Category = "گردونه",
                            ConstantKey = "diamond_tenth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "999,1000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2001),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "امتیاز دهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 9
                        },
                        new
                        {
                            Id = new Guid("48283576-7762-469d-b232-3e308ac2eefd"),
                            Category = "گردونه",
                            ConstantKey = "min_points_to_spin_diamond_wheel",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1947),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "حداقل امتیاز برای چرخاندن گردونه شانس الماس بار اول",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -2
                        },
                        new
                        {
                            Id = new Guid("6b15b835-c8bb-4202-95be-7571df6b1479"),
                            Category = "گردونه",
                            ConstantKey = "added_points_to_each_spin_diamond_wheel_after_first_time",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1956),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "افزایش تعداد امتیاز به اضای هر بار چرخاندن گردونه شانس در یک روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -1
                        },
                        new
                        {
                            Id = new Guid("8a6ce723-3492-443e-abe7-b87b095dcb28"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_1",
                            ConstantValue = "30",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2168),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 29
                        },
                        new
                        {
                            Id = new Guid("c728cf8c-869a-4e62-8621-37c2d8425f97"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_1",
                            ConstantValue = "300000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2173),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 30
                        },
                        new
                        {
                            Id = new Guid("8a3987f8-fc65-47aa-86e5-802fa4ba95c9"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_1",
                            ConstantValue = "100000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2177),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 31
                        },
                        new
                        {
                            Id = new Guid("93f96589-ebd9-4d8b-8c1e-a92552b3cdaa"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_1",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2181),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "ترتیب پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 32
                        },
                        new
                        {
                            Id = new Guid("151c3fb1-c82c-4f73-a1af-00c558f9f6a6"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_1",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2185),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 33
                        },
                        new
                        {
                            Id = new Guid("71e87644-a63a-49fa-8fa7-174a5555c1bf"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_1",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2190),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "تعداد روزهای آگهی تجاری نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 34
                        },
                        new
                        {
                            Id = new Guid("f96ede20-17c8-4924-bd11-e670702370dd"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_2",
                            ConstantValue = "60",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2194),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 35
                        },
                        new
                        {
                            Id = new Guid("3da943b8-2794-4de7-b5ee-7f6b25fe3661"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_2",
                            ConstantValue = "3550000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2198),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 36
                        },
                        new
                        {
                            Id = new Guid("c0e3e571-9f1d-4752-afd2-d556865cd13f"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_2",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2204),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 37
                        },
                        new
                        {
                            Id = new Guid("23b94526-e7eb-4e82-aa54-9fc25f91ceca"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_2",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2208),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "ترتیب پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 38
                        },
                        new
                        {
                            Id = new Guid("a36dd23e-2ad8-4531-b7e3-a2688dc9b380"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_2",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2212),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 39
                        },
                        new
                        {
                            Id = new Guid("d94589b7-f813-4fb6-9b38-91eac838de3c"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_2",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2216),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "تعداد روزهای آگهی تجاری نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 40
                        },
                        new
                        {
                            Id = new Guid("52be4a40-a98d-466b-b0db-753e28aa78b8"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_3",
                            ConstantValue = "90",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2219),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 41
                        },
                        new
                        {
                            Id = new Guid("c106e13b-07c3-487e-87d0-4729e8a309f7"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_3",
                            ConstantValue = "30000000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2224),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 42
                        },
                        new
                        {
                            Id = new Guid("dc38b858-c660-45ba-8eb8-ab619a64b1d2"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_3",
                            ConstantValue = "10000000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2228),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 43
                        },
                        new
                        {
                            Id = new Guid("49aff7df-ebe6-4ec0-a826-8402f4999c4a"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_3",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2232),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "ترتیب پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 44
                        },
                        new
                        {
                            Id = new Guid("5e853c12-4868-4263-9d7e-3067517323af"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_3",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2239),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 45
                        },
                        new
                        {
                            Id = new Guid("81c93a50-7a5a-4617-a27d-4669ebc2d07a"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_3",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(2243),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Description = "تعداد روزهای آگهی تجاری نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 46
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Contacts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DiamondUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointCharged")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiamondUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.GraphHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphModeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GraphHistory");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Graphs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectChildCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GrandParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphTypeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstChildOfParent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceivedShared")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ValueInMoney")
                        .HasColumnType("bigint");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("109066df-110a-483c-a9e3-c8e4a5d64312"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("65b7b1d0-1c24-4bf0-9b66-07b5b5fb8a11"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("38ea3fa1-bee6-4d03-88b0-d83e9bceeee8"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("9d8ea448-a1c5-45f7-b677-cfdef214e861"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("4818df4f-60b3-4689-9667-3184ccd4a310"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("0dcbda12-20c6-43a5-8d9f-5ba192e433c1"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            Cellphone = "09394125130",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1249),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("5b8882a9-9120-4df0-b6db-d44647b880bb"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 850000L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("5b8882a9-9120-4df0-b6db-d44647b880bb"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1200),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("68c25328-1f8a-40b9-beb8-5943d12ec642"),
                            Cellphone = "09111111111",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1254),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user1",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "first",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "firstuser"
                        },
                        new
                        {
                            Id = new Guid("3c2c54ea-1367-4bad-8a83-e5f70fa8f301"),
                            Cellphone = "09122222222",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1258),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user2",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "second",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seconduser"
                        },
                        new
                        {
                            Id = new Guid("9ad1164d-bab3-434e-b142-10a7a9b2295a"),
                            Cellphone = "09133333333",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1324),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user3",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "third",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "thirduser"
                        },
                        new
                        {
                            Id = new Guid("d7721ae0-4c62-4d9b-b9bd-d8368005341b"),
                            Cellphone = "09144444444",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1331),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user4",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fourth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fourthuser"
                        },
                        new
                        {
                            Id = new Guid("3271722a-137e-4bb5-b299-fd2138dcab24"),
                            Cellphone = "09155555555",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1334),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user5",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fivth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fivthuser"
                        },
                        new
                        {
                            Id = new Guid("f3d4fb34-6496-4132-9c33-667fab590fe7"),
                            Cellphone = "09166666666",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1338),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user6",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "sixth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sixthuser"
                        },
                        new
                        {
                            Id = new Guid("2b240d7f-a10a-4781-80e0-d9108166411b"),
                            Cellphone = "09177777777",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1345),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user7",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "seventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seventhuser"
                        },
                        new
                        {
                            Id = new Guid("3a607ec4-1c44-4827-bfb6-7593dec0bf6e"),
                            Cellphone = "09188888888",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1350),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user8",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eighth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eighthuser"
                        },
                        new
                        {
                            Id = new Guid("688f5412-7056-4f84-b828-79b1c817f28b"),
                            Cellphone = "09199999999",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1354),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user9",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "ninth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "ninthuser"
                        },
                        new
                        {
                            Id = new Guid("31721d22-1f90-41cf-b481-060871647e5a"),
                            Cellphone = "09100000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1357),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user10",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "tenth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "tenthuser"
                        },
                        new
                        {
                            Id = new Guid("d0ee26ae-deae-4b8e-9aba-958ae73d169e"),
                            Cellphone = "09011000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 2, 19, 22, 8, 6, 52, DateTimeKind.Local).AddTicks(1366),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user11",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eleventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eleventhuser"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d74658a-d8c1-4bf9-b963-e3b6733e57c6"),
                            CreatedBy = new Guid("59a09c77-c905-461d-b676-454d000a47f5"),
                            IsDeleted = false,
                            Role = new Guid("109066df-110a-483c-a9e3-c8e4a5d64312"),
                            User = new Guid("59a09c77-c905-461d-b676-454d000a47f5")
                        },
                        new
                        {
                            Id = new Guid("05987bdc-8287-4197-9e2e-942f882aea38"),
                            CreatedBy = new Guid("5b8882a9-9120-4df0-b6db-d44647b880bb"),
                            IsDeleted = false,
                            Role = new Guid("0dcbda12-20c6-43a5-8d9f-5ba192e433c1"),
                            User = new Guid("5b8882a9-9120-4df0-b6db-d44647b880bb")
                        },
                        new
                        {
                            Id = new Guid("ddc2718e-db6a-4147-a9b9-25d9fa730aad"),
                            CreatedBy = new Guid("68c25328-1f8a-40b9-beb8-5943d12ec642"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("68c25328-1f8a-40b9-beb8-5943d12ec642")
                        },
                        new
                        {
                            Id = new Guid("ebe0068f-4226-403e-8a49-101680987d84"),
                            CreatedBy = new Guid("3c2c54ea-1367-4bad-8a83-e5f70fa8f301"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("3c2c54ea-1367-4bad-8a83-e5f70fa8f301")
                        },
                        new
                        {
                            Id = new Guid("140e9e8a-e84e-4432-a9c3-db55720b30d8"),
                            CreatedBy = new Guid("9ad1164d-bab3-434e-b142-10a7a9b2295a"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("9ad1164d-bab3-434e-b142-10a7a9b2295a")
                        },
                        new
                        {
                            Id = new Guid("2e14d5b0-6482-4477-8bb6-3e472ef495c3"),
                            CreatedBy = new Guid("d7721ae0-4c62-4d9b-b9bd-d8368005341b"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("d7721ae0-4c62-4d9b-b9bd-d8368005341b")
                        },
                        new
                        {
                            Id = new Guid("0d0e60fd-6286-4b42-ab0c-b55f194a0403"),
                            CreatedBy = new Guid("3271722a-137e-4bb5-b299-fd2138dcab24"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("3271722a-137e-4bb5-b299-fd2138dcab24")
                        },
                        new
                        {
                            Id = new Guid("dcf92ee7-b5d5-4544-be15-465d8a1985f4"),
                            CreatedBy = new Guid("f3d4fb34-6496-4132-9c33-667fab590fe7"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("f3d4fb34-6496-4132-9c33-667fab590fe7")
                        },
                        new
                        {
                            Id = new Guid("2ac17cc1-0d58-470c-b98e-c13d49bf1c4c"),
                            CreatedBy = new Guid("2b240d7f-a10a-4781-80e0-d9108166411b"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("2b240d7f-a10a-4781-80e0-d9108166411b")
                        },
                        new
                        {
                            Id = new Guid("1a179297-2dac-4c11-a492-540ee4e786da"),
                            CreatedBy = new Guid("3a607ec4-1c44-4827-bfb6-7593dec0bf6e"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("3a607ec4-1c44-4827-bfb6-7593dec0bf6e")
                        },
                        new
                        {
                            Id = new Guid("8fb27b37-096a-4f4c-8b26-60179851fd9e"),
                            CreatedBy = new Guid("688f5412-7056-4f84-b828-79b1c817f28b"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("688f5412-7056-4f84-b828-79b1c817f28b")
                        },
                        new
                        {
                            Id = new Guid("2a6e1583-bae1-43d7-9bab-62071465e980"),
                            CreatedBy = new Guid("31721d22-1f90-41cf-b481-060871647e5a"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("31721d22-1f90-41cf-b481-060871647e5a")
                        },
                        new
                        {
                            Id = new Guid("71f4b3fb-f49d-4b73-a6e9-fda360ea57b9"),
                            CreatedBy = new Guid("d0ee26ae-deae-4b8e-9aba-958ae73d169e"),
                            IsDeleted = false,
                            Role = new Guid("156377d3-c2a3-4647-9313-b98670659255"),
                            User = new Guid("d0ee26ae-deae-4b8e-9aba-958ae73d169e")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
