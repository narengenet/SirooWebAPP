// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a87ff3dc-a649-4339-a973-a2ba4fdfa560"),
                            Caption = "کیش کدپولو",
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            CreationDate = new DateTime(2022, 10, 12, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6183),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsVideo = true,
                            LikeReward = 200,
                            MediaSourceURL = "uploads/2022/9/1-56192-4_6008031941360618419.MP4",
                            Name = "کیش",
                            Owner = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("3d04c8e2-1fdb-42ec-a448-23f3e3611ce6"),
                            Caption = "ال جی",
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            CreationDate = new DateTime(2022, 10, 11, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6249),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsVideo = false,
                            LikeReward = 20,
                            MediaSourceURL = "uploads/2022/9/1-53754-1.mp4_snapshot_01.04_[2022.05.26_09.50.52].jpg",
                            Name = "کیش",
                            Owner = new Guid("3b10c724-e40e-4f39-b2a0-964107407c53"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("ca9653ec-d028-4f92-a7f8-0a6891ee3f71"),
                            Caption = "سامسونگ",
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            CreationDate = new DateTime(2022, 10, 8, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6274),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsVideo = false,
                            LikeReward = 50,
                            MediaSourceURL = "uploads/2022/9/1582619178545.jpg",
                            Name = "کیش",
                            Owner = new Guid("334896a0-5b3b-440a-b1b4-ace618d72d65"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("5df8e82b-6e54-49f3-ae6f-14c9d8b974de"),
                            Caption = "دیجی کالا",
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            CreationDate = new DateTime(2022, 10, 10, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6294),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsVideo = false,
                            LikeReward = 40,
                            MediaSourceURL = "uploads/2022/9/1-36433-1.jpg",
                            Name = "کیش",
                            Owner = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("599719b5-72a0-489e-b055-d920e4e78974"),
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6548),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d511f518-0b2a-4e60-a928-becbec877790"),
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "2",
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6557),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر مغازه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b379c899-ed51-4fe6-b583-e8429883d850"),
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6561),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("990090e6-c650-416c-87ff-643627c6978e"),
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6564),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1ebf02e1-577f-4a21-947d-70024642c38f"),
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6568),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("da191c84-1f35-4672-ba6f-791fdc205a74"),
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6571),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("965bfc93-382c-45a9-88a9-0764cb7a242b"),
                            Donner = new Guid("22dfe1d0-21b8-4561-9c4b-39dc1683f0e8"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 2,
                            Value = 150L
                        },
                        new
                        {
                            Id = new Guid("35f9fe3b-5dc8-4c92-9852-8256baf15578"),
                            Donner = new Guid("22dfe1d0-21b8-4561-9c4b-39dc1683f0e8"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 5,
                            Value = 100L
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29da131d-99d7-4016-beb1-436bdebf8276"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6302),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            EndDate = new DateTime(2022, 10, 28, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6308),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "آبان 1401",
                            Owner = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            StartDate = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6306)
                        },
                        new
                        {
                            Id = new Guid("925b4263-94cc-4f0a-9eee-5353d27bb8ac"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6313),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            EndDate = new DateTime(2022, 12, 12, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6317),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "اذر 1401",
                            Owner = new Guid("334896a0-5b3b-440a-b1b4-ace618d72d65"),
                            StartDate = new DateTime(2022, 11, 12, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6315)
                        },
                        new
                        {
                            Id = new Guid("85bad120-b8f8-4d39-b5e3-d38ba07833e3"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6321),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            EndDate = new DateTime(2022, 10, 3, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6325),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = true,
                            IsLottery = false,
                            Name = "شهریور 1401",
                            Owner = new Guid("3b10c724-e40e-4f39-b2a0-964107407c53"),
                            StartDate = new DateTime(2022, 9, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6323)
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1af536e0-aa3c-4e2b-8674-e3e9142b43c7"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6375),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Draw = new Guid("29da131d-99d7-4016-beb1-436bdebf8276"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "200 هزار تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("3fb0e5d2-d289-4e62-909d-ec1cfd259983"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6381),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Draw = new Guid("29da131d-99d7-4016-beb1-436bdebf8276"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "100 هزار تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("c429000f-1485-4ebd-abb2-32a9f0d877b8"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6389),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Draw = new Guid("29da131d-99d7-4016-beb1-436bdebf8276"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "50 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        },
                        new
                        {
                            Id = new Guid("52bf3de6-51fc-4324-a790-939a950e675f"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6443),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Draw = new Guid("925b4263-94cc-4f0a-9eee-5353d27bb8ac"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "2 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("78704be6-ada0-49eb-8fdf-ed446e305b65"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6448),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Draw = new Guid("925b4263-94cc-4f0a-9eee-5353d27bb8ac"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "1 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("6e8ac049-0660-45ad-ad0a-3b30a7084d2b"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6452),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Draw = new Guid("925b4263-94cc-4f0a-9eee-5353d27bb8ac"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        },
                        new
                        {
                            Id = new Guid("ddb24d6c-40c2-4a21-8b12-cd10cc37383d"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6493),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Draw = new Guid("85bad120-b8f8-4d39-b5e3-d38ba07833e3"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "20 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("9f085f60-d93e-4fba-afb1-f553c8c0b9a8"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6498),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Draw = new Guid("85bad120-b8f8-4d39-b5e3-d38ba07833e3"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "10 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("8bd35768-c333-4f8f-a5af-dbd2a1aab5d6"),
                            Created = new DateTime(2022, 10, 13, 7, 32, 53, 380, DateTimeKind.Local).AddTicks(6503),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Draw = new Guid("85bad120-b8f8-4d39-b5e3-d38ba07833e3"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34495bb1-04cf-4869-b552-dae2819a9d50"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("5155ab09-82ce-4aa0-b9c8-ee70d6495c06"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("c5f661e3-4675-4ae5-a983-e7a1a44693a0"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("1776d40f-55d2-4343-8cdb-a293a20a70b7"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("9cd69c5f-0c5d-44fa-a69b-931780b1cb24"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("7866990e-ad6c-4713-bb20-bbc7ddb6e3b0"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InviterId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            Cellphone = "09394125130",
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "Jouybari",
                            IsActivated = false,
                            IsDeleted = false,
                            Name = "Sina",
                            Points = 0L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("3b10c724-e40e-4f39-b2a0-964107407c53"),
                            Cellphone = "09111769591",
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "پردلان",
                            IsActivated = false,
                            IsDeleted = false,
                            Name = "محسن",
                            Points = 0L,
                            ProfileMediaURL = "uploads/2022/9/99.jpg",
                            Username = "vinona"
                        },
                        new
                        {
                            Id = new Guid("334896a0-5b3b-440a-b1b4-ace618d72d65"),
                            Cellphone = "09163681249",
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "یاراحمدی",
                            IsActivated = false,
                            IsDeleted = false,
                            Name = "سپیده",
                            Points = 0L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "sepideh"
                        },
                        new
                        {
                            Id = new Guid("b21829ff-4811-45ee-a020-5819163d04cc"),
                            Cellphone = "09112281237",
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = false,
                            IsDeleted = false,
                            Name = "عبداله",
                            Points = 0L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "abdolah"
                        },
                        new
                        {
                            Id = new Guid("22dfe1d0-21b8-4561-9c4b-39dc1683f0e8"),
                            Cellphone = "09901069557",
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = false,
                            IsDeleted = false,
                            Name = "عبدالرحمن",
                            Points = 0L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a21b5bf-9930-4627-8e41-5782bf2fdbf6"),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            IsDeleted = false,
                            Role = new Guid("34495bb1-04cf-4869-b552-dae2819a9d50"),
                            User = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6")
                        },
                        new
                        {
                            Id = new Guid("e11f922c-a332-4f75-8fa3-dfbf10bbd644"),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            IsDeleted = false,
                            Role = new Guid("1776d40f-55d2-4343-8cdb-a293a20a70b7"),
                            User = new Guid("334896a0-5b3b-440a-b1b4-ace618d72d65")
                        },
                        new
                        {
                            Id = new Guid("a632b099-78ed-4e31-a844-3b69145af0e8"),
                            CreatedBy = new Guid("2e77d2ba-26e8-427e-9cc7-9fd3cb9400b6"),
                            IsDeleted = false,
                            Role = new Guid("c5f661e3-4675-4ae5-a983-e7a1a44693a0"),
                            User = new Guid("3b10c724-e40e-4f39-b2a0-964107407c53")
                        },
                        new
                        {
                            Id = new Guid("2708ee6d-714e-4143-acce-65807c8d767b"),
                            CreatedBy = new Guid("b21829ff-4811-45ee-a020-5819163d04cc"),
                            IsDeleted = false,
                            Role = new Guid("7866990e-ad6c-4713-bb20-bbc7ddb6e3b0"),
                            User = new Guid("b21829ff-4811-45ee-a020-5819163d04cc")
                        },
                        new
                        {
                            Id = new Guid("640ce3f9-ea7b-48ff-8bd7-c36bc9931f00"),
                            CreatedBy = new Guid("22dfe1d0-21b8-4561-9c4b-39dc1683f0e8"),
                            IsDeleted = false,
                            Role = new Guid("9cd69c5f-0c5d-44fa-a69b-931780b1cb24"),
                            User = new Guid("22dfe1d0-21b8-4561-9c4b-39dc1683f0e8")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.HasOne("SirooWebAPP.Core.Domain.Users", "Inviter")
                        .WithMany("Inviteds")
                        .HasForeignKey("InviterId");

                    b.Navigation("Inviter");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Navigation("Inviteds");
                });
#pragma warning restore 612, 618
        }
    }
}
