// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Chips", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Chips");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantSecondValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55b0b775-9797-4688-b849-9cdda4e7cb1c"),
                            Category = "فروشگاه",
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "0",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(650),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 19
                        },
                        new
                        {
                            Id = new Guid("4466fd87-27eb-4577-b8f4-f64af7d2627a"),
                            Category = "فروشگاه",
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "-1",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(655),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر فروشگاه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 20
                        },
                        new
                        {
                            Id = new Guid("8e91fac7-df5f-4452-9413-fc62c9aa6a50"),
                            Category = "فروشگاه",
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(661),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 21
                        },
                        new
                        {
                            Id = new Guid("0063659c-bf8a-456b-a871-d53ae313084c"),
                            Category = "مالی",
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(669),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 23
                        },
                        new
                        {
                            Id = new Guid("877da1a1-ceea-44c7-8139-d7816d1e106f"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(689),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 27
                        },
                        new
                        {
                            Id = new Guid("86ec1d13-431c-48e0-b193-57c9575487d3"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(693),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 28
                        },
                        new
                        {
                            Id = new Guid("ac2e34cf-2222-4331-b7ff-b45ffef29a6c"),
                            Category = "فروشگاه",
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(665),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 22
                        },
                        new
                        {
                            Id = new Guid("a801bc28-8d81-499e-ae65-31c6c6d21cec"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(639),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "امتیاز اولیه برای کاربری که ثبت نام میکند.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 17
                        },
                        new
                        {
                            Id = new Guid("39af4dc8-a3f4-49ed-95a1-d2bea8d7f494"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(646),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "امتیاز برای معرف وقتی کاربر ثبت نام کرد.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 18
                        },
                        new
                        {
                            Id = new Guid("4b925192-5b2e-4728-8c4b-7f4c42286995"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(631),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 15
                        },
                        new
                        {
                            Id = new Guid("e58a378a-cd3c-4166-b1f2-d03be1a3a1a8"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "15",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(635),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 16
                        },
                        new
                        {
                            Id = new Guid("4a715372-eeee-4985-974d-46d18972ea2b"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(673),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 24
                        },
                        new
                        {
                            Id = new Guid("7b8495e1-a078-4f3b-aa92-cd6d522608cc"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(678),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 25
                        },
                        new
                        {
                            Id = new Guid("7cb9d41a-d338-4a04-a350-ba6830cd07fb"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(685),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 26
                        },
                        new
                        {
                            Id = new Guid("e9aa3a5c-b58a-4c01-afd4-cad256110774"),
                            Category = "کارت اعتباری",
                            ConstantKey = "def_chips_usage_perday",
                            ConstantValue = "-1",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(625),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "تعداد استفاده از کارت اعتباری هر کاربر در روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 14
                        },
                        new
                        {
                            Id = new Guid("113cd482-611d-4368-b63c-cb1f4a2967f6"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_video_ads",
                            ConstantValue = "200000",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(606),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "هزینه درج آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 10
                        },
                        new
                        {
                            Id = new Guid("2378e602-d413-4065-afb5-570578698b57"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_image_ads",
                            ConstantValue = "50000",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(610),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "هزینه درج آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 11
                        },
                        new
                        {
                            Id = new Guid("6bb810e2-aaf5-4a3f-bf3d-fe4a9d2e1b5c"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_video_ads",
                            ConstantValue = "200",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(616),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 12
                        },
                        new
                        {
                            Id = new Guid("f8da789c-0749-4de2-9b95-f4cac4ba5b78"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_image_ads",
                            ConstantValue = "40",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(621),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 13
                        },
                        new
                        {
                            Id = new Guid("a1c878b1-57b1-4cf1-abdb-14479708ede4"),
                            Category = "گردونه",
                            ConstantKey = "diamond_first_priority",
                            ConstantSecondValue = "50",
                            ConstantValue = "1,5",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(478),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اولویت اول تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 0
                        },
                        new
                        {
                            Id = new Guid("64df079b-7922-4ec2-8588-f39e8cb2ecaf"),
                            Category = "گردونه",
                            ConstantKey = "diamond_second_priority",
                            ConstantSecondValue = "20",
                            ConstantValue = "6,10",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(483),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اولویت دوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 1
                        },
                        new
                        {
                            Id = new Guid("2b656e78-cd69-42b2-a58c-39210c31a2e4"),
                            Category = "گردونه",
                            ConstantKey = "diamond_third_priority",
                            ConstantSecondValue = "10",
                            ConstantValue = "11,20",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(492),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اولویت سوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 2
                        },
                        new
                        {
                            Id = new Guid("d8eea91b-5ab7-41bb-a63a-7317cd53a585"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fourth_priority",
                            ConstantSecondValue = "6",
                            ConstantValue = "21,30",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(497),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اولویت چهارم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 3
                        },
                        new
                        {
                            Id = new Guid("ed098694-1eaf-4dd4-9401-75e5a8900216"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fivth_priority",
                            ConstantSecondValue = "5",
                            ConstantValue = "31,50",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(503),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اولویت پنجم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 4
                        },
                        new
                        {
                            Id = new Guid("a9bcf4d0-7b70-4ba5-b556-9a083afd3388"),
                            Category = "گردونه",
                            ConstantKey = "diamond_sixth_priority",
                            ConstantSecondValue = "4",
                            ConstantValue = "51,100",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(508),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اولویت ششم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 5
                        },
                        new
                        {
                            Id = new Guid("6d113b14-8898-4b41-9b65-393ef4f9dba9"),
                            Category = "گردونه",
                            ConstantKey = "diamond_seventh_priority",
                            ConstantSecondValue = "3",
                            ConstantValue = "101,200",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(581),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اولویت هفتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 6
                        },
                        new
                        {
                            Id = new Guid("987641c6-9aa2-4108-b1e6-85ab289f4a93"),
                            Category = "گردونه",
                            ConstantKey = "diamond_eighth_priority",
                            ConstantSecondValue = "2",
                            ConstantValue = "201,300",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(589),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "اولویت هشتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 7
                        },
                        new
                        {
                            Id = new Guid("9e81d802-3215-4b43-9dfb-3e80d852b330"),
                            Category = "گردونه",
                            ConstantKey = "diamond_nineth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "301,500",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(593),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "امتیاز نهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 8
                        },
                        new
                        {
                            Id = new Guid("3fd27b2f-b84d-47e9-9046-ee02872a28ad"),
                            Category = "گردونه",
                            ConstantKey = "diamond_tenth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "999,1000",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(598),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "امتیاز دهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 9
                        },
                        new
                        {
                            Id = new Guid("5602b272-5da9-44ee-88f4-7889f5cda20f"),
                            Category = "گردونه",
                            ConstantKey = "min_points_to_spin_diamond_wheel",
                            ConstantValue = "200",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(465),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "حداقل امتیاز برای چرخاندن گردونه شانس الماس بار اول",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -2
                        },
                        new
                        {
                            Id = new Guid("9f83a9bf-6ea4-47d2-a9e4-b4c9077a4ab5"),
                            Category = "گردونه",
                            ConstantKey = "added_points_to_each_spin_diamond_wheel_after_first_time",
                            ConstantValue = "100",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(473),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Description = "افزایش تعداد امتیاز به اضای هر بار چرخاندن گردونه شانس در یک روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -1
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Contacts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DiamondUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiamondUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ValueInMoney")
                        .HasColumnType("bigint");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b8d7470-6482-4cdb-9012-8cf9eaef9447"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("ccd1cf84-e83c-48ae-9b45-a5954792f077"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("1fb8bb2a-e71d-488b-8a60-99448d40409e"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("1c1e6d28-bad8-48cc-9c48-6f156f8145fb"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("2a83d5e1-092e-4282-a584-03192b454252"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("4fc29ab8-43e1-4e71-92fc-1599f8f148f4"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("67c0467b-d535-4f46-b7fe-0578bbe4abb0"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            Cellphone = "09394125130",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(206),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("647ba905-1102-4380-baad-deb7c957ac3b"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 850000L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("647ba905-1102-4380-baad-deb7c957ac3b"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2022, 12, 31, 3, 33, 13, 931, DateTimeKind.Local).AddTicks(160),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("557baf36-ec93-48ec-8a18-07ffa67b8c13"),
                            CreatedBy = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd"),
                            IsDeleted = false,
                            Role = new Guid("7b8d7470-6482-4cdb-9012-8cf9eaef9447"),
                            User = new Guid("2f3a05b3-ef0e-4e6f-bbf5-e0d2776918bd")
                        },
                        new
                        {
                            Id = new Guid("dc51ae97-5b76-4701-8ee1-6022347263ed"),
                            CreatedBy = new Guid("647ba905-1102-4380-baad-deb7c957ac3b"),
                            IsDeleted = false,
                            Role = new Guid("4fc29ab8-43e1-4e71-92fc-1599f8f148f4"),
                            User = new Guid("647ba905-1102-4380-baad-deb7c957ac3b")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
