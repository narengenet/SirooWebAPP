// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMusic")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPremium")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChallengeUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChallengeModeIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChallengeUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatBlocks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("fromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("toUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatBlocks");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ChatMessages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Chips", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Chips");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantSecondValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e4b32ba-342a-4105-8ac3-756599c290dd"),
                            Category = "فروشگاه",
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "0",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2776),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 20
                        },
                        new
                        {
                            Id = new Guid("677dfce2-b460-4a0f-8d10-a3725ac21331"),
                            Category = "فروشگاه",
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2779),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر فروشگاه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 21
                        },
                        new
                        {
                            Id = new Guid("54d8ea39-6451-47b7-af76-66e092867dcc"),
                            Category = "فروشگاه",
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2782),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 22
                        },
                        new
                        {
                            Id = new Guid("73b76b64-b71b-4b6a-bc36-938f3e622771"),
                            Category = "مالی",
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2836),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 24
                        },
                        new
                        {
                            Id = new Guid("eec9abca-c1ff-4efc-b3cb-46e8fc905b2d"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2846),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 28
                        },
                        new
                        {
                            Id = new Guid("48e3a784-665e-4553-b560-373e40a0bf26"),
                            Category = "اعتبار",
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2848),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 29
                        },
                        new
                        {
                            Id = new Guid("93bc92bb-2445-419c-a3eb-da3a6a4008c2"),
                            Category = "فروشگاه",
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2829),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 23
                        },
                        new
                        {
                            Id = new Guid("ae02b3d9-5a16-4245-b765-454e8e4140f5"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2772),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "امتیاز اولیه برای کاربری که ثبت نام میکند.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 18
                        },
                        new
                        {
                            Id = new Guid("4e2c047f-3136-4f00-a728-a8e677393862"),
                            Category = "ثبت نام",
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2774),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "امتیاز برای معرف وقتی کاربر ثبت نام کرد.",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 19
                        },
                        new
                        {
                            Id = new Guid("a30bb731-e579-4af5-983d-f80d12d5b6b4"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2761),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 15
                        },
                        new
                        {
                            Id = new Guid("1275904a-d95b-4cbc-9fd8-bacabb664bfc"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "15",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2766),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 16
                        },
                        new
                        {
                            Id = new Guid("2293f230-84e8-4670-966e-19f2997063e3"),
                            Category = "لایک ها",
                            ConstantKey = "def_points_for_audio_like",
                            ConstantValue = "5",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2769),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "امتیاز پیش فرض برای لایک پست صوتی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 17
                        },
                        new
                        {
                            Id = new Guid("bfaaa7ba-c3a4-4ae4-a044-d2921eca9ed9"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2839),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 25
                        },
                        new
                        {
                            Id = new Guid("a776353a-950c-4d92-baa5-7b31ed1cfa03"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2841),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 26
                        },
                        new
                        {
                            Id = new Guid("2f77e2b6-18e0-407b-ba99-f70b50d4fce1"),
                            Category = "درصدها",
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2843),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 27
                        },
                        new
                        {
                            Id = new Guid("f2e1ff89-ac11-4b8a-bb02-7725576e763d"),
                            Category = "کارت اعتباری",
                            ConstantKey = "def_chips_usage_perday",
                            ConstantValue = "-1",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2757),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "تعداد استفاده از کارت اعتباری هر کاربر در روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 14
                        },
                        new
                        {
                            Id = new Guid("8d52a1c6-856e-477f-8a91-64079ace0b6b"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_video_ads",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2745),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "هزینه درج آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 10
                        },
                        new
                        {
                            Id = new Guid("24bd6e96-4abb-40b8-8560-ceed9f13a9f7"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "def_money_to_premium_image_ads",
                            ConstantValue = "200000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2748),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "هزینه درج آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 11
                        },
                        new
                        {
                            Id = new Guid("05defbaf-d6e5-4946-9756-f9dccc86575a"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_video_ads",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2751),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی ویدئویی",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 12
                        },
                        new
                        {
                            Id = new Guid("a6c79df1-0589-451f-8451-74314c3861c5"),
                            Category = "آگهی تبلیغاتی",
                            ConstantKey = "points_reward_premium_image_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2753),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "امتیاز ثبت آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 13
                        },
                        new
                        {
                            Id = new Guid("5f658627-3da0-45d8-853d-d53e15fcf6fb"),
                            Category = "گردونه",
                            ConstantKey = "diamond_first_priority",
                            ConstantSecondValue = "50",
                            ConstantValue = "1,5",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2712),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اولویت اول تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 0
                        },
                        new
                        {
                            Id = new Guid("8f573bdb-68db-41d3-8894-84e2c2c9f91e"),
                            Category = "گردونه",
                            ConstantKey = "diamond_second_priority",
                            ConstantSecondValue = "20",
                            ConstantValue = "6,10",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2716),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اولویت دوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 1
                        },
                        new
                        {
                            Id = new Guid("9d296705-b3a3-468e-bfcf-63c8d32c5b5a"),
                            Category = "گردونه",
                            ConstantKey = "diamond_third_priority",
                            ConstantSecondValue = "10",
                            ConstantValue = "11,20",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2719),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اولویت سوم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 2
                        },
                        new
                        {
                            Id = new Guid("cac1fc2a-36a8-4c14-8c66-db2449d1ae75"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fourth_priority",
                            ConstantSecondValue = "6",
                            ConstantValue = "21,30",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2722),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اولویت چهارم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 3
                        },
                        new
                        {
                            Id = new Guid("e70d774a-173c-4b7c-9208-7ccd100a0fed"),
                            Category = "گردونه",
                            ConstantKey = "diamond_fivth_priority",
                            ConstantSecondValue = "5",
                            ConstantValue = "31,50",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2725),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اولویت پنجم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 4
                        },
                        new
                        {
                            Id = new Guid("2ffb053e-2d8f-4d0f-9403-f76fe5f04738"),
                            Category = "گردونه",
                            ConstantKey = "diamond_sixth_priority",
                            ConstantSecondValue = "4",
                            ConstantValue = "51,100",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2728),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اولویت ششم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 5
                        },
                        new
                        {
                            Id = new Guid("21fe9574-7d03-4c6c-a9d2-40b38d865003"),
                            Category = "گردونه",
                            ConstantKey = "diamond_seventh_priority",
                            ConstantSecondValue = "3",
                            ConstantValue = "101,200",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2732),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اولویت هفتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 6
                        },
                        new
                        {
                            Id = new Guid("c3ba6517-fedf-4926-91cc-024a742332ed"),
                            Category = "گردونه",
                            ConstantKey = "diamond_eighth_priority",
                            ConstantSecondValue = "2",
                            ConstantValue = "201,300",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2734),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "اولویت هشتم تعداد الماس و درصد شانس",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 7
                        },
                        new
                        {
                            Id = new Guid("7842f735-0b1b-49d0-88e0-c20a558a4128"),
                            Category = "گردونه",
                            ConstantKey = "diamond_nineth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "301,500",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2740),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "امتیاز نهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 8
                        },
                        new
                        {
                            Id = new Guid("06150c90-d60e-44e1-84a1-547bebb67d2f"),
                            Category = "گردونه",
                            ConstantKey = "diamond_tenth_priority",
                            ConstantSecondValue = "0",
                            ConstantValue = "999,1000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2743),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "امتیاز دهم آگهی تبلیغاتی تصویری",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 9
                        },
                        new
                        {
                            Id = new Guid("97fdb73f-c727-4afd-908f-cd367cc70c7b"),
                            Category = "گردونه",
                            ConstantKey = "min_points_to_spin_diamond_wheel",
                            ConstantValue = "200",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2699),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "حداقل امتیاز برای چرخاندن گردونه شانس الماس بار اول",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -2
                        },
                        new
                        {
                            Id = new Guid("77bbd4ba-a4ca-4c64-8c31-c49fea9933e4"),
                            Category = "گردونه",
                            ConstantKey = "added_points_to_each_spin_diamond_wheel_after_first_time",
                            ConstantValue = "100",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2706),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "افزایش تعداد امتیاز به اضای هر بار چرخاندن گردونه شانس در یک روز",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = -1
                        },
                        new
                        {
                            Id = new Guid("f00e332f-3e0d-44e1-8761-9f4e1e650365"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_1",
                            ConstantValue = "30",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2851),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 30
                        },
                        new
                        {
                            Id = new Guid("b3e118df-85f4-4cbf-84d1-4d103f59692c"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_1",
                            ConstantValue = "300000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2855),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 31
                        },
                        new
                        {
                            Id = new Guid("7d709281-8604-484f-99cb-e0b5d486c9e7"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_1",
                            ConstantValue = "100000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2861),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 32
                        },
                        new
                        {
                            Id = new Guid("f1c16357-3a2c-4f5c-97f2-9db33225b261"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_1",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2863),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "ترتیب پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 33
                        },
                        new
                        {
                            Id = new Guid("66d5d1a3-0e58-4949-9ca9-12215c9da5a6"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_1",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2866),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 34
                        },
                        new
                        {
                            Id = new Guid("35ec7584-7820-43ed-821e-74a22241440f"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_1",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2868),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "تعداد روزهای آگهی تجاری نوع 1",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 35
                        },
                        new
                        {
                            Id = new Guid("a321d344-f864-439d-bd18-28b828644b1c"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_2",
                            ConstantValue = "60",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2870),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 36
                        },
                        new
                        {
                            Id = new Guid("dcdb783c-fe92-46a6-859a-a2c687cec596"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_2",
                            ConstantValue = "3550000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2873),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 37
                        },
                        new
                        {
                            Id = new Guid("5238ebb0-4b03-45d3-ab7b-b8c06bebc5c1"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_2",
                            ConstantValue = "1000000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2875),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 38
                        },
                        new
                        {
                            Id = new Guid("026f57ef-53e8-431d-94a2-92b10a8f8194"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_2",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2879),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "ترتیب پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 39
                        },
                        new
                        {
                            Id = new Guid("153d2527-7a95-4488-a3d8-43d5820a2b69"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_2",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2884),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 40
                        },
                        new
                        {
                            Id = new Guid("00106fe5-60fd-47d5-b65a-dedbfebbe047"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_2",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2887),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "تعداد روزهای آگهی تجاری نوع 2",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 41
                        },
                        new
                        {
                            Id = new Guid("abdf4dc1-87c3-4ec6-808a-b026c3e7875b"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_challenge_3",
                            ConstantValue = "90",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2889),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "تعداد روزهای مجاز برای چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 42
                        },
                        new
                        {
                            Id = new Guid("d783d66d-df62-40bb-b1cb-8c3b6f651bff"),
                            Category = "چالش",
                            ConstantKey = "money_needed_to_attend_in_challenge_3",
                            ConstantValue = "30000000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2892),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "موجودی ریالی برای شرکت در چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 43
                        },
                        new
                        {
                            Id = new Guid("40556795-3153-46ea-8a5a-88459c30522e"),
                            Category = "چالش",
                            ConstantKey = "prize_for_invite_to_challenge_3",
                            ConstantValue = "10000000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2894),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "کارمزد برای معرفی کاربران به چالش نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 44
                        },
                        new
                        {
                            Id = new Guid("739a2a58-cd85-456f-9ca8-ecf49486ec2e"),
                            Category = "چالش",
                            ConstantKey = "order_of_prize_payment_3",
                            ConstantValue = "2,3,5",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2897),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "ترتیب پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 45
                        },
                        new
                        {
                            Id = new Guid("2f074890-de04-4186-bced-fbec00722008"),
                            Category = "چالش",
                            ConstantKey = "maximum_number_of_prize_payment_3",
                            ConstantValue = "1000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2899),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "حداکثر تعداد پرداخت کارمزدها نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 46
                        },
                        new
                        {
                            Id = new Guid("14170b13-6c6c-46c5-a0a1-011d507ffadb"),
                            Category = "چالش",
                            ConstantKey = "expire_dates_for_ads_3",
                            ConstantValue = "20",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2901),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "تعداد روزهای آگهی تجاری نوع 3",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 47
                        },
                        new
                        {
                            Id = new Guid("008bf02f-7d50-4fde-b44b-89764ac8ca0a"),
                            Category = "بیمه",
                            ConstantKey = "money_needed_to_attend_in_insurance",
                            ConstantValue = "35000000",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(2908),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Description = "موجودی ریالی برای خرید پکیج بیمه",
                            IsActive = true,
                            IsDeleted = false,
                            PriorityIndex = 48
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Contacts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DiamondUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointCharged")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiamondUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Followers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FollowPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FollowedPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.GraphHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Graph")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphModeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GraphHistory");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Graphs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectChildCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GrandParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("GraphTypeIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstChildOfParent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceivedShared")
                        .HasColumnType("int");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceSecondUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNamePerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ThePolicy")
                        .HasColumnType("bit");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceSecondUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.InsuranceUserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressProvience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FatherIsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExported")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("IssuePlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryServiceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MotherIsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceUserData");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long?>("ValueInMoney")
                        .HasColumnType("bigint");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79efd07c-9b64-46ae-a86f-a1d3f36b89de"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("a1d46702-faae-4a83-a3ff-3a3381fc67a6"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("8e871218-8e56-4985-b7f3-fcb2ed28e049"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("efa39ad4-6fdf-4998-b8ab-174c871f9fdd"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("c6e8d11f-2ea2-4e2e-ab0c-088d201c2568"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("6e1f0bd2-ee67-44c0-bdb8-3a8bbf91b23d"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<int?>("Diamonds")
                        .HasColumnType("int");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasNewMessage")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ShowMyFullNameInPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            Cellphone = "09394125130",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1588),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("e142625e-969e-4c56-b6e6-12d94c8da8c5"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 850000L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("e142625e-969e-4c56-b6e6-12d94c8da8c5"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1567),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("c9ee86b0-5f85-420c-a63b-0829574e0bb8"),
                            Cellphone = "09111111111",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1647),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user1",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "first",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "firstuser"
                        },
                        new
                        {
                            Id = new Guid("b334f9f2-84ec-4ccc-bc8f-11c8184130ad"),
                            Cellphone = "09122222222",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1671),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user2",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "second",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seconduser"
                        },
                        new
                        {
                            Id = new Guid("98f3254e-fa15-4911-bdd7-0906cc118347"),
                            Cellphone = "09133333333",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1674),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user3",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "third",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "thirduser"
                        },
                        new
                        {
                            Id = new Guid("0f060d96-dbde-4ccb-9e98-a5d577f756a1"),
                            Cellphone = "09144444444",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1678),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user4",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fourth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fourthuser"
                        },
                        new
                        {
                            Id = new Guid("01c3dde5-86df-48f1-a0b5-3fa2b0f8e2ad"),
                            Cellphone = "09155555555",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1681),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user5",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "fivth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "fivthuser"
                        },
                        new
                        {
                            Id = new Guid("a3b82555-3980-4f2b-8cd0-8fa0b33a0694"),
                            Cellphone = "09166666666",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1684),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user6",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "sixth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sixthuser"
                        },
                        new
                        {
                            Id = new Guid("e85e0851-e324-4e3d-a504-98ad71ef268b"),
                            Cellphone = "09177777777",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1687),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user7",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "seventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "seventhuser"
                        },
                        new
                        {
                            Id = new Guid("dbd8a505-c2a4-4e4a-a391-fa3b4fc27af6"),
                            Cellphone = "09188888888",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1691),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user8",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eighth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eighthuser"
                        },
                        new
                        {
                            Id = new Guid("6ad6eae3-c8f0-4792-afa3-8b75c6eba740"),
                            Cellphone = "09199999999",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1696),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user9",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "ninth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "ninthuser"
                        },
                        new
                        {
                            Id = new Guid("b56ec279-3549-47e6-ac45-d2066d29d467"),
                            Cellphone = "09100000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1708),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user10",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "tenth",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "tenthuser"
                        },
                        new
                        {
                            Id = new Guid("feb117b0-fb9b-4c45-8db3-f29d0c4e7545"),
                            Cellphone = "09011000000",
                            ConfirmationCode = "111111",
                            Created = new DateTime(2023, 6, 18, 10, 43, 25, 525, DateTimeKind.Local).AddTicks(1712),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            Diamonds = 0,
                            DonnationActive = false,
                            Family = "user11",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 3000000L,
                            Name = "eleventh",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "eleventhuser"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("efe1c3f1-7fcb-4a58-914e-ba014a48177c"),
                            CreatedBy = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447"),
                            IsDeleted = false,
                            Role = new Guid("79efd07c-9b64-46ae-a86f-a1d3f36b89de"),
                            User = new Guid("82721aa0-4b8e-4f15-9e83-eac6d5394447")
                        },
                        new
                        {
                            Id = new Guid("716e96cb-f796-49dc-b116-52b015848b0c"),
                            CreatedBy = new Guid("e142625e-969e-4c56-b6e6-12d94c8da8c5"),
                            IsDeleted = false,
                            Role = new Guid("6e1f0bd2-ee67-44c0-bdb8-3a8bbf91b23d"),
                            User = new Guid("e142625e-969e-4c56-b6e6-12d94c8da8c5")
                        },
                        new
                        {
                            Id = new Guid("23de9ddb-58f1-4181-805c-92e2d9f614b5"),
                            CreatedBy = new Guid("c9ee86b0-5f85-420c-a63b-0829574e0bb8"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("c9ee86b0-5f85-420c-a63b-0829574e0bb8")
                        },
                        new
                        {
                            Id = new Guid("ebdb70df-0511-4e1c-ac30-683c089c359f"),
                            CreatedBy = new Guid("b334f9f2-84ec-4ccc-bc8f-11c8184130ad"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("b334f9f2-84ec-4ccc-bc8f-11c8184130ad")
                        },
                        new
                        {
                            Id = new Guid("ac6bbdea-191f-4bea-a2f4-40002d9ee3e5"),
                            CreatedBy = new Guid("98f3254e-fa15-4911-bdd7-0906cc118347"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("98f3254e-fa15-4911-bdd7-0906cc118347")
                        },
                        new
                        {
                            Id = new Guid("e44bd926-d01f-4b0b-aa5f-f63181a9a5a8"),
                            CreatedBy = new Guid("0f060d96-dbde-4ccb-9e98-a5d577f756a1"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("0f060d96-dbde-4ccb-9e98-a5d577f756a1")
                        },
                        new
                        {
                            Id = new Guid("9824afa4-ffe1-40ea-af4a-abcd7b4c0d66"),
                            CreatedBy = new Guid("01c3dde5-86df-48f1-a0b5-3fa2b0f8e2ad"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("01c3dde5-86df-48f1-a0b5-3fa2b0f8e2ad")
                        },
                        new
                        {
                            Id = new Guid("e984ed6c-54fe-4f1b-b633-49f11babe986"),
                            CreatedBy = new Guid("a3b82555-3980-4f2b-8cd0-8fa0b33a0694"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("a3b82555-3980-4f2b-8cd0-8fa0b33a0694")
                        },
                        new
                        {
                            Id = new Guid("0dd9b36f-fc7f-446b-b2d7-f32e4f271bb7"),
                            CreatedBy = new Guid("e85e0851-e324-4e3d-a504-98ad71ef268b"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("e85e0851-e324-4e3d-a504-98ad71ef268b")
                        },
                        new
                        {
                            Id = new Guid("91096ce9-4dd4-44a4-b3ae-1053cfd55170"),
                            CreatedBy = new Guid("dbd8a505-c2a4-4e4a-a391-fa3b4fc27af6"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("dbd8a505-c2a4-4e4a-a391-fa3b4fc27af6")
                        },
                        new
                        {
                            Id = new Guid("5543d944-35a9-43cb-8dad-b4212db2f6fd"),
                            CreatedBy = new Guid("6ad6eae3-c8f0-4792-afa3-8b75c6eba740"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("6ad6eae3-c8f0-4792-afa3-8b75c6eba740")
                        },
                        new
                        {
                            Id = new Guid("5139199f-c6a7-43f3-8fbe-34bddac070f1"),
                            CreatedBy = new Guid("b56ec279-3549-47e6-ac45-d2066d29d467"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("b56ec279-3549-47e6-ac45-d2066d29d467")
                        },
                        new
                        {
                            Id = new Guid("0601ea9e-70b5-4999-9796-ecb2b2995737"),
                            CreatedBy = new Guid("feb117b0-fb9b-4c45-8db3-f29d0c4e7545"),
                            IsDeleted = false,
                            Role = new Guid("8ca94b1f-4783-45c7-91c7-6f61d26aa6c4"),
                            User = new Guid("feb117b0-fb9b-4c45-8db3-f29d0c4e7545")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
