// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221031220327_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c58ce97-74c7-4bd2-a126-7c96e290ae82"),
                            Caption = "کیش کدپولو",
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            CreationDate = new DateTime(2022, 10, 31, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7003),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = true,
                            LastModified = new DateTime(2022, 10, 31, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7009),
                            LikeReward = 4,
                            MediaSourceURL = "uploads/2022/9/1-56192-4_6008031941360618419.MP4",
                            Owner = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("b1fa41b0-07f2-4aca-be9c-e8c484daf5d8"),
                            Caption = "ال جی",
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            CreationDate = new DateTime(2022, 10, 30, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7033),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = false,
                            LastModified = new DateTime(2022, 10, 30, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7037),
                            LikeReward = 2,
                            MediaSourceURL = "uploads/2022/9/1-53754-1.mp4_snapshot_01.04_[2022.05.26_09.50.52].jpg",
                            Owner = new Guid("c4b01545-f132-4eb5-bded-96c6a43dc356"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("b83008aa-5063-4dc6-b7df-8b76d3030966"),
                            Caption = "سامسونگ",
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            CreationDate = new DateTime(2022, 10, 27, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7132),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = false,
                            LastModified = new DateTime(2022, 10, 27, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7136),
                            LikeReward = 2,
                            MediaSourceURL = "uploads/2022/9/1582619178545.jpg",
                            Owner = new Guid("9cd75091-19cd-4bc0-baca-ebf28a5ec164"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("194a62ca-56fd-4665-884c-d69906186838"),
                            Caption = "دیجی کالا",
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            CreationDate = new DateTime(2022, 10, 29, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7160),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = false,
                            LastModified = new DateTime(2022, 10, 29, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7163),
                            LikeReward = 2,
                            MediaSourceURL = "uploads/2022/9/1-36433-1.jpg",
                            Owner = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("25cff73f-28a2-4d6e-897a-018e84daa367"),
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7411),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ebdb477c-ed86-49f1-ac74-dca6bfa6ecb1"),
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "2",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7421),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر مغازه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("27247393-ee32-480e-87db-d9a0d84a2181"),
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7425),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9fef241c-9597-4f13-b99c-e4d7f47ea30a"),
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7429),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b81ea38b-b81b-4daa-bf6e-32d8797acb7b"),
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7432),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("22d36727-765c-472c-a9f0-443688d6c551"),
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7436),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b30848be-3cd3-4182-85e6-d13951d1de23"),
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7442),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2c282e21-5751-47e1-b529-c85093d58daf"),
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7455),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9d12f90e-510c-4f7b-ab2e-2a04ba86b4cf"),
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7458),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("788ff544-f1dc-4116-99db-5ece2eb0a7ee"),
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "1",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7465),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("90711c4b-3217-4dc8-95d0-07a4a0802a62"),
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "4",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7468),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("76caf806-12cd-4cf9-9950-848a66e2e8a4"),
                            ConstantKey = "def_percent_for_marketer",
                            ConstantValue = "10",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7472),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "درصد بازاریاب",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4a79bcbb-7a8e-4330-ac33-e7388e3e41b2"),
                            ConstantKey = "def_percent_for_zoneadmin",
                            ConstantValue = "6",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7477),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "درصد مدیر منطقه",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6c5e4ede-6bd7-46a4-a124-edcb915cb04a"),
                            ConstantKey = "def_percent_for_countryadmin",
                            ConstantValue = "4",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7481),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Description = "درصد مدیر مناطق",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d7ed48a-848a-4d25-99ad-fab9b0a29748"),
                            Donner = new Guid("10260d0c-a1ab-47ea-8883-7ec3d487b27a"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 2,
                            Value = 150L
                        },
                        new
                        {
                            Id = new Guid("2c5362c5-a90b-4a43-bc43-b975cf7bf964"),
                            Donner = new Guid("10260d0c-a1ab-47ea-8883-7ec3d487b27a"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 5,
                            Value = 100L
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ccf2b4e-cfde-4c5f-bc4d-7de46eab5d70"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7169),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            EndDate = new DateTime(2022, 11, 16, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7174),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "آبان 1401",
                            Owner = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            StartDate = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7171)
                        },
                        new
                        {
                            Id = new Guid("a82e6bf3-1b30-47a4-9aad-733df12ed1e2"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7179),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            EndDate = new DateTime(2022, 12, 31, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7183),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "اذر 1401",
                            Owner = new Guid("9cd75091-19cd-4bc0-baca-ebf28a5ec164"),
                            StartDate = new DateTime(2022, 12, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7181)
                        },
                        new
                        {
                            Id = new Guid("ebf1743a-45fb-4b11-8c56-190e015587e5"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7187),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            EndDate = new DateTime(2022, 10, 22, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7191),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "شهریور 1401",
                            Owner = new Guid("c4b01545-f132-4eb5-bded-96c6a43dc356"),
                            StartDate = new DateTime(2022, 10, 2, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7189)
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f258a8c0-07b6-4652-97a7-8495458d33c1"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7234),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Draw = new Guid("4ccf2b4e-cfde-4c5f-bc4d-7de46eab5d70"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "200 هزار تومان",
                            Priority = 0,
                            WinnerCount = 1
                        },
                        new
                        {
                            Id = new Guid("4f183d84-826b-49fb-9ba5-b0ef0525d85a"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7239),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Draw = new Guid("4ccf2b4e-cfde-4c5f-bc4d-7de46eab5d70"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "100 هزار تومان",
                            Priority = 1,
                            WinnerCount = 2
                        },
                        new
                        {
                            Id = new Guid("d19e30e9-6e36-4fac-9bb6-c43a2c238d80"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7246),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Draw = new Guid("4ccf2b4e-cfde-4c5f-bc4d-7de46eab5d70"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "50 هزار تومان",
                            Priority = 2,
                            WinnerCount = 3
                        },
                        new
                        {
                            Id = new Guid("b76c0920-4ac6-46b5-a306-4967200211d1"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7288),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Draw = new Guid("a82e6bf3-1b30-47a4-9aad-733df12ed1e2"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "2 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("3efedd2a-4bbb-480a-ad63-9bab05a875ec"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7294),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Draw = new Guid("a82e6bf3-1b30-47a4-9aad-733df12ed1e2"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "1 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("2f95994f-79a0-49ed-9c5d-f319bb2872bf"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7298),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Draw = new Guid("a82e6bf3-1b30-47a4-9aad-733df12ed1e2"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        },
                        new
                        {
                            Id = new Guid("56f42532-f231-41a3-ba13-929e16b76566"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7335),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Draw = new Guid("ebf1743a-45fb-4b11-8c56-190e015587e5"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "20 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("18c05754-b699-4639-aaa5-4ffd541fdcd8"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7340),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Draw = new Guid("ebf1743a-45fb-4b11-8c56-190e015587e5"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "10 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("b4afeb9d-1da4-40c7-bd56-fc8945a1aaba"),
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(7344),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Draw = new Guid("ebf1743a-45fb-4b11-8c56-190e015587e5"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MoneyPaied")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasedCredit")
                        .HasColumnType("bigint");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3eb45d34-09ed-477d-afc4-b45a75b6a65f"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("acb74c56-1b27-4f71-9d5b-13136feb22e9"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("c6a48412-7ce7-406b-917b-67989e9bec71"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر کل مناطق",
                            RoleName = "countryadmin"
                        },
                        new
                        {
                            Id = new Guid("d66833d6-b950-4aaa-8391-a0def902c377"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("529fbca9-11b4-4848-860b-b55d26a5318e"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("e1dee1c1-47c0-44c3-9097-105888996575"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("2fe95bb5-c37e-4ba9-8bd7-33478d772acd"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 6,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.TransactionPercents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FromAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToAmount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Transaction")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TransactionPercents");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            Cellphone = "09394125130",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(6305),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("10260d0c-a1ab-47ea-8883-7ec3d487b27a"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("c4b01545-f132-4eb5-bded-96c6a43dc356"),
                            Cellphone = "09111769591",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(6310),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "پردلان",
                            Inviter = new Guid("10260d0c-a1ab-47ea-8883-7ec3d487b27a"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "محسن",
                            Points = 80L,
                            ProfileMediaURL = "uploads/2022/9/99.jpg",
                            Username = "vinona"
                        },
                        new
                        {
                            Id = new Guid("9cd75091-19cd-4bc0-baca-ebf28a5ec164"),
                            Cellphone = "09161234567",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(6314),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "احمدی",
                            Inviter = new Guid("10260d0c-a1ab-47ea-8883-7ec3d487b27a"),
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "سامان",
                            Points = 70L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "saman"
                        },
                        new
                        {
                            Id = new Guid("eee7a69f-debc-48a2-9250-522ef76f179a"),
                            Cellphone = "09112281237",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(6317),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبداله",
                            Points = 60L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "abdolah"
                        },
                        new
                        {
                            Id = new Guid("10260d0c-a1ab-47ea-8883-7ec3d487b27a"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(6260),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("58782a64-0d6b-4d43-ad47-9aa6bb563e52"),
                            Cellphone = "09181650111",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(6322),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "شفایی",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "امیر",
                            Points = 50L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "amirsh"
                        },
                        new
                        {
                            Id = new Guid("17a92c6c-23b9-4dfc-b5b8-708eb4ca513f"),
                            Cellphone = "09181616111",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(6329),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "مریم",
                            Points = 40L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "pari"
                        },
                        new
                        {
                            Id = new Guid("6362794d-b181-46eb-8440-a53d165f77d6"),
                            Cellphone = "09111291908",
                            Created = new DateTime(2022, 11, 1, 1, 33, 27, 303, DateTimeKind.Local).AddTicks(6332),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Money = 0L,
                            Name = "رجبعلی",
                            Points = 30L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "haji"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51aa47e7-ffc4-486c-9126-4f108a9356e5"),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            IsDeleted = false,
                            Role = new Guid("3eb45d34-09ed-477d-afc4-b45a75b6a65f"),
                            User = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a")
                        },
                        new
                        {
                            Id = new Guid("cf902b6b-a3bb-4e39-80fd-6a3bb9c5a5de"),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            IsDeleted = false,
                            Role = new Guid("529fbca9-11b4-4848-860b-b55d26a5318e"),
                            User = new Guid("9cd75091-19cd-4bc0-baca-ebf28a5ec164")
                        },
                        new
                        {
                            Id = new Guid("ac6aeda5-30ae-40f6-800a-b091c491b0ee"),
                            CreatedBy = new Guid("06e3f75b-d764-412f-8438-0b290e6f432a"),
                            IsDeleted = false,
                            Role = new Guid("d66833d6-b950-4aaa-8391-a0def902c377"),
                            User = new Guid("c4b01545-f132-4eb5-bded-96c6a43dc356")
                        },
                        new
                        {
                            Id = new Guid("c9c503e0-16fb-4dfd-baee-e0cd2e77ea23"),
                            CreatedBy = new Guid("eee7a69f-debc-48a2-9250-522ef76f179a"),
                            IsDeleted = false,
                            Role = new Guid("2fe95bb5-c37e-4ba9-8bd7-33478d772acd"),
                            User = new Guid("eee7a69f-debc-48a2-9250-522ef76f179a")
                        },
                        new
                        {
                            Id = new Guid("0260ec22-04eb-45f5-bc7b-034debf6886d"),
                            CreatedBy = new Guid("10260d0c-a1ab-47ea-8883-7ec3d487b27a"),
                            IsDeleted = false,
                            Role = new Guid("e1dee1c1-47c0-44c3-9097-105888996575"),
                            User = new Guid("10260d0c-a1ab-47ea-8883-7ec3d487b27a")
                        },
                        new
                        {
                            Id = new Guid("9263f3ad-2fa8-4c49-966c-55c3b59af78d"),
                            CreatedBy = new Guid("eee7a69f-debc-48a2-9250-522ef76f179a"),
                            IsDeleted = false,
                            Role = new Guid("2fe95bb5-c37e-4ba9-8bd7-33478d772acd"),
                            User = new Guid("17a92c6c-23b9-4dfc-b5b8-708eb4ca513f")
                        },
                        new
                        {
                            Id = new Guid("2ba0fbf0-0358-4158-beb1-371b47c99353"),
                            CreatedBy = new Guid("eee7a69f-debc-48a2-9250-522ef76f179a"),
                            IsDeleted = false,
                            Role = new Guid("2fe95bb5-c37e-4ba9-8bd7-33478d772acd"),
                            User = new Guid("58782a64-0d6b-4d43-ad47-9aa6bb563e52")
                        },
                        new
                        {
                            Id = new Guid("322fe6a6-35f8-4cd8-947f-ec27892ab475"),
                            CreatedBy = new Guid("eee7a69f-debc-48a2-9250-522ef76f179a"),
                            IsDeleted = false,
                            Role = new Guid("2fe95bb5-c37e-4ba9-8bd7-33478d772acd"),
                            User = new Guid("6362794d-b181-46eb-8440-a53d165f77d6")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
