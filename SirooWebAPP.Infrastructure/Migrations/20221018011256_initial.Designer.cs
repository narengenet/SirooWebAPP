// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirooWebAPP.Infrastructure.Contexts;

#nullable disable

namespace SirooWebAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221018011256_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiracy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvtivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeReward")
                        .HasColumnType("int");

                    b.Property<string>("MediaSourceURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainedViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewQuota")
                        .HasColumnType("int");

                    b.Property<int>("ViewReward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advertises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21935ec1-0c8c-41c5-80ce-ade9794beea3"),
                            Caption = "کیش کدپولو",
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            CreationDate = new DateTime(2022, 10, 17, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4352),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = true,
                            LikeReward = 4,
                            MediaSourceURL = "uploads/2022/9/1-56192-4_6008031941360618419.MP4",
                            Owner = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("11b02b04-794b-4446-a4bb-8597b7a9bbb9"),
                            Caption = "ال جی",
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            CreationDate = new DateTime(2022, 10, 16, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4380),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = false,
                            LikeReward = 2,
                            MediaSourceURL = "uploads/2022/9/1-53754-1.mp4_snapshot_01.04_[2022.05.26_09.50.52].jpg",
                            Owner = new Guid("d376e671-618b-436d-8495-106de378e047"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("97709e8f-764c-4e6d-8a2d-d6c63c3aa492"),
                            Caption = "سامسونگ",
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            CreationDate = new DateTime(2022, 10, 13, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4404),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = false,
                            LikeReward = 2,
                            MediaSourceURL = "uploads/2022/9/1582619178545.jpg",
                            Owner = new Guid("ebe37a11-f6c8-4109-8e23-d780c83631f7"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        },
                        new
                        {
                            Id = new Guid("8f8c349d-7728-4734-bcce-ea0f8238c14e"),
                            Caption = "دیجی کالا",
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            CreationDate = new DateTime(2022, 10, 15, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4424),
                            Expiracy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvtivated = true,
                            IsDeleted = false,
                            IsRejected = false,
                            IsVideo = false,
                            LikeReward = 2,
                            MediaSourceURL = "uploads/2022/9/1-36433-1.jpg",
                            Owner = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            RemainedViewQuota = 100,
                            ViewQuota = 100,
                            ViewReward = 4
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.ConstantDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConstantKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstantValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstantDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("371d3168-d5cb-4256-b94f-02d7c4481ad2"),
                            ConstantKey = "store_def_credit_reg",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4658),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "اعتبار اولیه فروشگاه برای ثبت نام اولین بار",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("8efff32d-b581-4156-becd-3cf05ab4aaae"),
                            ConstantKey = "store_point_usage_per_day",
                            ConstantValue = "2",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4664),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "تعداد دفعات استفاده از کارت تخفیف هر مغازه در روز برای یک مشتری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5b396290-7dbe-4f6f-ada4-eb83663a20b5"),
                            ConstantKey = "stores_max_donnation_point",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4672),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "حداکثر امتیازی که فروشگاه میتواند در هر نوتب هدیه بدهد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("66e7846e-6ce3-4f35-a4fc-e83eeeb49c80"),
                            ConstantKey = "money_to_credit_ratio",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4675),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "نسبت هر اعتبار به تومان",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2c07ef70-d17a-42c5-b0f4-25d82bde351d"),
                            ConstantKey = "credit_for_image_ads",
                            ConstantValue = "500",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4679),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "اعتبار لازم برای ثبت آگهی تصویری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("a6510391-28e6-4c4a-b21e-f5ce62d055d3"),
                            ConstantKey = "credit_for_video_ads",
                            ConstantValue = "1000",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4699),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "اعتبار لازم برای ثبت آگهی ویدئویی",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("cb497089-e57c-45f5-95d8-f6fe3511b262"),
                            ConstantKey = "credit_for_client_registration_by_store_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4703),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c4487ba3-91d8-4156-ab1c-0d5f52f23be6"),
                            ConstantKey = "def_points_for_client_registration",
                            ConstantValue = "100",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4708),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d0433ea0-a743-42c4-9ae1-62a892d292f3"),
                            ConstantKey = "def_points_for_client_invitation",
                            ConstantValue = "50",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4711),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "اعتبار برای فروشنده ای که باعث ثبت نام مشتری شد",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("27307c39-9d9c-4799-8a67-ed59dbed9fdc"),
                            ConstantKey = "def_points_for_image_like",
                            ConstantValue = "2",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4715),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "امتیاز پیش فرض برای لایک پست تصویری",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b26bfa53-34d6-4f01-9471-cb31c4d878a3"),
                            ConstantKey = "def_points_for_video_like",
                            ConstantValue = "4",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4721),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Description = "امتیاز پیش فرض برای لایک پست ویدئویی",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.DonnationTickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainedCapacity")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonnationTickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f56110fb-5bc3-43b4-b8e2-01895eaa3beb"),
                            Donner = new Guid("76876ce6-b0ae-48fe-9d88-92887e4b0bd7"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 2,
                            Value = 150L
                        },
                        new
                        {
                            Id = new Guid("2ec34f68-4b1b-4941-afd0-9ea6022ffa6c"),
                            Donner = new Guid("76876ce6-b0ae-48fe-9d88-92887e4b0bd7"),
                            IsCredit = false,
                            IsDeleted = false,
                            RemainedCapacity = 5,
                            Value = 100L
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Draws", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLottery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Draws");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccc8d380-3f96-4456-8bc9-f290f0546e83"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4435),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            EndDate = new DateTime(2022, 11, 2, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4439),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "آبان 1401",
                            Owner = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            StartDate = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4437)
                        },
                        new
                        {
                            Id = new Guid("454e57ce-557b-4cf0-aafb-b05bd940bea6"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4444),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            EndDate = new DateTime(2022, 12, 17, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4448),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = false,
                            IsLottery = false,
                            Name = "اذر 1401",
                            Owner = new Guid("ebe37a11-f6c8-4109-8e23-d780c83631f7"),
                            StartDate = new DateTime(2022, 11, 17, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4446)
                        },
                        new
                        {
                            Id = new Guid("8a8e06c5-adcb-4203-a614-689d800c7cfa"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4452),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            EndDate = new DateTime(2022, 10, 8, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4456),
                            IsActivated = true,
                            IsDeleted = false,
                            IsFinished = true,
                            IsLottery = false,
                            Name = "شهریور 1401",
                            Owner = new Guid("d376e671-618b-436d-8495-106de378e047"),
                            StartDate = new DateTime(2022, 9, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4454)
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Likers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LikedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.OnlineUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineUsers");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PointUsages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonnationTicket")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Donner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PointUsages");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Prizes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c48a31b-e7a6-476c-af36-e3f02d927fa2"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4504),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Draw = new Guid("ccc8d380-3f96-4456-8bc9-f290f0546e83"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "200 هزار تومان",
                            Priority = 0,
                            WinnerCount = 1
                        },
                        new
                        {
                            Id = new Guid("be8cc50b-7b09-4584-b308-f43496b833a3"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4511),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Draw = new Guid("ccc8d380-3f96-4456-8bc9-f290f0546e83"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "100 هزار تومان",
                            Priority = 1,
                            WinnerCount = 2
                        },
                        new
                        {
                            Id = new Guid("a3c8b345-5eea-4868-9520-12f7b7a9935f"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4515),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Draw = new Guid("ccc8d380-3f96-4456-8bc9-f290f0546e83"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "50 هزار تومان",
                            Priority = 2,
                            WinnerCount = 3
                        },
                        new
                        {
                            Id = new Guid("7744e393-3fcf-4289-94fa-5b209ee49766"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4562),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Draw = new Guid("454e57ce-557b-4cf0-aafb-b05bd940bea6"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "2 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("aa5cf756-e7fb-4e8c-8c52-1731bc3d7317"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4568),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Draw = new Guid("454e57ce-557b-4cf0-aafb-b05bd940bea6"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "1 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("8f260dc2-cf4d-4e71-8d39-c7fd5018951b"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4571),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Draw = new Guid("454e57ce-557b-4cf0-aafb-b05bd940bea6"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        },
                        new
                        {
                            Id = new Guid("59ce342b-fa6f-45f2-8b3c-91aac6cb906a"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4611),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Draw = new Guid("8a8e06c5-adcb-4203-a614-689d800c7cfa"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "20 میلیون تومان",
                            Priority = 0,
                            WinnerCount = 5
                        },
                        new
                        {
                            Id = new Guid("5eeb6c54-338d-4cf0-bfec-f9dd27aee3ad"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4617),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Draw = new Guid("8a8e06c5-adcb-4203-a614-689d800c7cfa"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "10 میلیون تومان",
                            Priority = 1,
                            WinnerCount = 10
                        },
                        new
                        {
                            Id = new Guid("da719fe7-b008-42f4-ab8c-1bbf65daf322"),
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(4620),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Draw = new Guid("8a8e06c5-adcb-4203-a614-689d800c7cfa"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "500 هزار تومان",
                            Priority = 2,
                            WinnerCount = 15
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.PrizesWinners", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Draw")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Prize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WiningDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WiningPoint")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PrizesWinners");
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e643898-e1f6-4c1b-a8af-7d98631c800d"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 0,
                            RoleDescription = "مدیر کل",
                            RoleName = "super"
                        },
                        new
                        {
                            Id = new Guid("55903f51-54f6-4353-82d7-a7bbd760239e"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 1,
                            RoleDescription = "مدیر سامانه",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = new Guid("a614c200-38fe-48d5-ad4e-cda92ace5b5b"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 2,
                            RoleDescription = "مدیر منطقه",
                            RoleName = "zoneadmin"
                        },
                        new
                        {
                            Id = new Guid("da1f3a60-7bd7-4e80-8430-3608803409c9"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 3,
                            RoleDescription = "بازاریاب",
                            RoleName = "marketer"
                        },
                        new
                        {
                            Id = new Guid("82e19333-70f2-4bb4-bab7-d17082a53a61"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 4,
                            RoleDescription = "فروشگاه",
                            RoleName = "store"
                        },
                        new
                        {
                            Id = new Guid("97989ad0-5f7d-47d5-bf6d-36795cf2f365"),
                            IsActivated = true,
                            IsDeleted = false,
                            Priority = 5,
                            RoleDescription = "مشتری",
                            RoleName = "client"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("Credits")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCredit")
                        .HasColumnType("bigint");

                    b.Property<bool>("DonnationActive")
                        .HasColumnType("bit");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            Cellphone = "09394125130",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(3933),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "Jouybari",
                            Inviter = new Guid("76876ce6-b0ae-48fe-9d88-92887e4b0bd7"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "Sina",
                            Points = 90L,
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful"
                        },
                        new
                        {
                            Id = new Guid("d376e671-618b-436d-8495-106de378e047"),
                            Cellphone = "09111769591",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(3938),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "پردلان",
                            Inviter = new Guid("76876ce6-b0ae-48fe-9d88-92887e4b0bd7"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "محسن",
                            Points = 80L,
                            ProfileMediaURL = "uploads/2022/9/99.jpg",
                            Username = "vinona"
                        },
                        new
                        {
                            Id = new Guid("ebe37a11-f6c8-4109-8e23-d780c83631f7"),
                            Cellphone = "09161234567",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(3942),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "احمدی",
                            Inviter = new Guid("76876ce6-b0ae-48fe-9d88-92887e4b0bd7"),
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "سامان",
                            Points = 70L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "saman"
                        },
                        new
                        {
                            Id = new Guid("3f8efafb-6d52-4613-b92d-cd413af4df6c"),
                            Cellphone = "09112281237",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(3946),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "عبداله",
                            Points = 60L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "abdolah"
                        },
                        new
                        {
                            Id = new Guid("76876ce6-b0ae-48fe-9d88-92887e4b0bd7"),
                            Cellphone = "09901069557",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(3883),
                            Credits = 1000L,
                            DefaultCredit = 0L,
                            DonnationActive = true,
                            Family = "دابویی مشک آبادی",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "عبدالرحمن",
                            Points = 100L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "dabooei"
                        },
                        new
                        {
                            Id = new Guid("58a9f7a5-ad8c-463b-a8fd-6cc0fb01c3e3"),
                            Cellphone = "09181650151",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(3949),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "شفایی",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "امیر",
                            Points = 50L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "amirsh"
                        },
                        new
                        {
                            Id = new Guid("6628ae9e-2896-41e8-875b-c82cdfb6b23b"),
                            Cellphone = "09181616196",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(3953),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "مریم",
                            Points = 40L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "pari"
                        },
                        new
                        {
                            Id = new Guid("7a13d0b7-8e27-45a0-af9b-08097c21fea9"),
                            Cellphone = "09111291908",
                            Created = new DateTime(2022, 10, 18, 4, 42, 55, 959, DateTimeKind.Local).AddTicks(3958),
                            Credits = 0L,
                            DefaultCredit = 0L,
                            DonnationActive = false,
                            Family = "سرپرست",
                            IsActivated = true,
                            IsDeleted = false,
                            Name = "رجبعلی",
                            Points = 30L,
                            ProfileMediaURL = "uploads/2022/9/photo.jpg",
                            Username = "haji"
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.UsersRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b5d399b-82c7-4ab1-9132-4f654b57ed77"),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            IsDeleted = false,
                            Role = new Guid("9e643898-e1f6-4c1b-a8af-7d98631c800d"),
                            User = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b")
                        },
                        new
                        {
                            Id = new Guid("650ad81b-0457-41ce-b215-5aedc306a820"),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            IsDeleted = false,
                            Role = new Guid("da1f3a60-7bd7-4e80-8430-3608803409c9"),
                            User = new Guid("ebe37a11-f6c8-4109-8e23-d780c83631f7")
                        },
                        new
                        {
                            Id = new Guid("6d79c427-6029-4cd3-8911-65c379bf7cab"),
                            CreatedBy = new Guid("144a2dc5-49da-40f6-b73c-d66141172f4b"),
                            IsDeleted = false,
                            Role = new Guid("a614c200-38fe-48d5-ad4e-cda92ace5b5b"),
                            User = new Guid("d376e671-618b-436d-8495-106de378e047")
                        },
                        new
                        {
                            Id = new Guid("8bf0b4ce-00f6-4a63-a198-00e595a0df15"),
                            CreatedBy = new Guid("3f8efafb-6d52-4613-b92d-cd413af4df6c"),
                            IsDeleted = false,
                            Role = new Guid("97989ad0-5f7d-47d5-bf6d-36795cf2f365"),
                            User = new Guid("3f8efafb-6d52-4613-b92d-cd413af4df6c")
                        },
                        new
                        {
                            Id = new Guid("08c3bd5b-30f1-45ad-a902-e18e9d336338"),
                            CreatedBy = new Guid("76876ce6-b0ae-48fe-9d88-92887e4b0bd7"),
                            IsDeleted = false,
                            Role = new Guid("82e19333-70f2-4bb4-bab7-d17082a53a61"),
                            User = new Guid("76876ce6-b0ae-48fe-9d88-92887e4b0bd7")
                        },
                        new
                        {
                            Id = new Guid("6d46b498-8f8a-4b2b-a7a9-d80b5fa611b6"),
                            CreatedBy = new Guid("3f8efafb-6d52-4613-b92d-cd413af4df6c"),
                            IsDeleted = false,
                            Role = new Guid("97989ad0-5f7d-47d5-bf6d-36795cf2f365"),
                            User = new Guid("6628ae9e-2896-41e8-875b-c82cdfb6b23b")
                        },
                        new
                        {
                            Id = new Guid("aac23ce0-d438-49e6-8db0-dbf88470ac4e"),
                            CreatedBy = new Guid("3f8efafb-6d52-4613-b92d-cd413af4df6c"),
                            IsDeleted = false,
                            Role = new Guid("97989ad0-5f7d-47d5-bf6d-36795cf2f365"),
                            User = new Guid("58a9f7a5-ad8c-463b-a8fd-6cc0fb01c3e3")
                        },
                        new
                        {
                            Id = new Guid("00874769-4bf3-48f8-99f8-d3b7615936ed"),
                            CreatedBy = new Guid("3f8efafb-6d52-4613-b92d-cd413af4df6c"),
                            IsDeleted = false,
                            Role = new Guid("97989ad0-5f7d-47d5-bf6d-36795cf2f365"),
                            User = new Guid("7a13d0b7-8e27-45a0-af9b-08097c21fea9")
                        });
                });

            modelBuilder.Entity("SirooWebAPP.Core.Domain.Viewers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Advertise")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ViewedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
